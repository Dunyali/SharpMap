{
  "api/GeoAPI.CoordinateSystems.Transformations.GeometryTransform.html": {
    "href": "api/GeoAPI.CoordinateSystems.Transformations.GeometryTransform.html",
    "title": "Class GeometryTransform | SharpMap",
    "keywords": "Class GeometryTransform Helper class for transforming GeoAPI.Geometries.IGeometry Inheritance Object GeometryTransform Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : GeoAPI.CoordinateSystems.Transformations Assembly : SharpMap.dll Syntax public class GeometryTransform Methods | Improve this Doc View Source TransformBox(Envelope, IMathTransform) Transforms a GeoAPI.Geometries.Envelope . Declaration public static Envelope TransformBox(Envelope box, IMathTransform transform) Parameters Type Name Description GeoAPI.Geometries.Envelope box BoundingBox to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform Math Transform Returns Type Description GeoAPI.Geometries.Envelope Transformed object | Improve this Doc View Source TransformCoordinate(Coordinate, IMathTransform) Function to transform a c using transform Declaration public static Coordinate TransformCoordinate(Coordinate c, IMathTransform transform) Parameters Type Name Description GeoAPI.Geometries.Coordinate c The coordinate GeoAPI.CoordinateSystems.Transformations.IMathTransform transform The transformation Returns Type Description GeoAPI.Geometries.Coordinate A transformed coordinate | Improve this Doc View Source TransformGeometry(IGeometry, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IGeometry . Declaration public static IGeometry TransformGeometry(IGeometry g, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IGeometry g Geometry to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IGeometry Transformed Geometry | Improve this Doc View Source TransformGeometryCollection(IGeometryCollection, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IGeometryCollection . Declaration public static IGeometryCollection TransformGeometryCollection(IGeometryCollection geoms, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IGeometryCollection geoms GeometryCollection to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IGeometryCollection Transformed GeometryCollection | Improve this Doc View Source TransformLinearRing(ILinearRing, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.ILinearRing . Declaration public static ILinearRing TransformLinearRing(ILinearRing r, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.ILinearRing r LinearRing to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.ILinearRing Transformed LinearRing | Improve this Doc View Source TransformLineString(ILineString, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.ILineString . Declaration public static ILineString TransformLineString(ILineString l, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.ILineString l LineString to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.ILineString Transformed LineString | Improve this Doc View Source TransformMultiLineString(IMultiLineString, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IMultiLineString . Declaration public static IMultiLineString TransformMultiLineString(IMultiLineString lines, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IMultiLineString lines MultiLineString to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IMultiLineString Transformed MultiLineString | Improve this Doc View Source TransformMultiPoint(IMultiPoint, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IMultiPoint . Declaration public static IMultiPoint TransformMultiPoint(IMultiPoint points, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IMultiPoint points MultiPoint to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IMultiPoint Transformed MultiPoint | Improve this Doc View Source TransformMultiPolygon(IMultiPolygon, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IMultiPolygon . Declaration public static IMultiPolygon TransformMultiPolygon(IMultiPolygon polys, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IMultiPolygon polys MultiPolygon to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IMultiPolygon Transformed MultiPolygon | Improve this Doc View Source TransformPoint(IPoint, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IPoint . Declaration public static IPoint TransformPoint(IPoint p, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IPoint p Point to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IPoint Transformed Point | Improve this Doc View Source TransformPolygon(IPolygon, IMathTransform, IGeometryFactory) Transforms a GeoAPI.Geometries.IPolygon . Declaration public static IPolygon TransformPolygon(IPolygon p, IMathTransform transform, IGeometryFactory targetFactory) Parameters Type Name Description GeoAPI.Geometries.IPolygon p Polygon to transform GeoAPI.CoordinateSystems.Transformations.IMathTransform transform MathTransform GeoAPI.Geometries.IGeometryFactory targetFactory The factory to create the target geometry Returns Type Description GeoAPI.Geometries.IPolygon Transformed Polygon"
  },
  "api/GeoAPI.CoordinateSystems.Transformations.html": {
    "href": "api/GeoAPI.CoordinateSystems.Transformations.html",
    "title": "Namespace GeoAPI.CoordinateSystems.Transformations | SharpMap",
    "keywords": "Namespace GeoAPI.CoordinateSystems.Transformations Classes GeometryTransform Helper class for transforming GeoAPI.Geometries.IGeometry"
  },
  "api/GeoAPI.Geometries.GeoAPIEx.html": {
    "href": "api/GeoAPI.Geometries.GeoAPIEx.html",
    "title": "Class GeoAPIEx | SharpMap",
    "keywords": "Class GeoAPIEx Set of extension methods for use of GeoAPI within SharpMap Inheritance Object GeoAPIEx Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : GeoAPI.Geometries Assembly : SharpMap.dll Syntax public static class GeoAPIEx Methods | Improve this Doc View Source Add(Coordinate, Coordinate) Adds to coordinate's Declaration public static Coordinate Add(this Coordinate self, Coordinate summand) Parameters Type Name Description GeoAPI.Geometries.Coordinate self the first coordinate GeoAPI.Geometries.Coordinate summand The second coordinate Returns Type Description GeoAPI.Geometries.Coordinate | Improve this Doc View Source Bottom(Envelope) Gets the minimum y-value of the GeoAPI.Geometries.Envelope Declaration public static double Bottom(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description Double The minimum y-value | Improve this Doc View Source BottomLeft(Envelope) Gets the bottom-left coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate BottomLeft(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The bottom-left coordinate | Improve this Doc View Source BottomRight(Envelope) Gets the bottom-right coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate BottomRight(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The bottom-right coordinate | Improve this Doc View Source Copy(ICoordinateSequence, Int32, ICoordinateSequence, Int32, Int32) Copies a section of a GeoAPI.Geometries.ICoordinateSequence to another GeoAPI.Geometries.ICoordinateSequence . The sequences may have different dimensions; in this case only the common dimensions are copied. Declaration public static void Copy(ICoordinateSequence src, int srcPos, ICoordinateSequence dest, int destPos, int length) Parameters Type Name Description GeoAPI.Geometries.ICoordinateSequence src The sequence to copy coordinates from Int32 srcPos The starting index of the coordinates to copy GeoAPI.Geometries.ICoordinateSequence dest The sequence to which the coordinates should be copied to Int32 destPos The starting index of the coordinates in Int32 length The number of coordinates to copy | Improve this Doc View Source CopyCoord(ICoordinateSequence, Int32, ICoordinateSequence, Int32) Copies a coordinate of a GeoAPI.Geometries.ICoordinateSequence to another GeoAPI.Geometries.ICoordinateSequence . The sequences may have different dimensions; in this case only the common dimensions are copied. Declaration public static void CopyCoord(ICoordinateSequence src, int srcPos, ICoordinateSequence dest, int destPos) Parameters Type Name Description GeoAPI.Geometries.ICoordinateSequence src The sequence to copy coordinate from Int32 srcPos The index of the coordinate to copy GeoAPI.Geometries.ICoordinateSequence dest The sequence to which the coordinate should be copied to Int32 destPos The index of the coordinate in | Improve this Doc View Source EnsureValidRing(ICoordinateSequenceFactory, ICoordinateSequence) Ensures that a CoordinateSequence forms a valid ring, returning a new closed sequence of the correct length if required. If the input sequence is already a valid ring, it is returned without modification. If the input sequence is too short or is not closed, it is extended with one or more copies of the start point. Declaration public static ICoordinateSequence EnsureValidRing(ICoordinateSequenceFactory fact, ICoordinateSequence seq) Parameters Type Name Description GeoAPI.Geometries.ICoordinateSequenceFactory fact The CoordinateSequenceFactory to use to create the new sequence GeoAPI.Geometries.ICoordinateSequence seq The sequence to test Returns Type Description GeoAPI.Geometries.ICoordinateSequence The original sequence, if it was a valid ring, or a new sequence which is valid. | Improve this Doc View Source EnsureValidRing(List<Coordinate>) Ensures that a CoordinateSequence forms a valid ring, returning a new closed sequence of the correct length if required. If the input sequence is already a valid ring, it is returned without modification. If the input sequence is too short or is not closed, it is extended with one or more copies of the start point. Declaration public static void EnsureValidRing(this List<Coordinate> coordinates) Parameters Type Name Description List < GeoAPI.Geometries.Coordinate > coordinates List of coordinates | Improve this Doc View Source GeomFromText(IGeometry, String) Declaration public static IGeometry GeomFromText(this IGeometry self, string wkt) Parameters Type Name Description GeoAPI.Geometries.IGeometry self String wkt Returns Type Description GeoAPI.Geometries.IGeometry | Improve this Doc View Source Grow(Envelope, Double) Increases the size of the boundingbox by the given amount in all directions Declaration public static Envelope Grow(this Envelope self, double amount) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope to grow Double amount Amount to grow in all directions Returns Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source Grow(Envelope, Double, Double) Increases the size of the boundingbox by the given amount in horizontal and vertical directions Declaration public static Envelope Grow(this Envelope self, double amountInX, double amountInY) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Double amountInX Amount to grow in horizontal direction Double amountInY Amount to grow in vertical direction Returns Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source IsCCW(ILinearRing) Abbreviation to counter clockwise function Declaration public static bool IsCCW(this ILinearRing self) Parameters Type Name Description GeoAPI.Geometries.ILinearRing self The ring Returns Type Description Boolean true if the ring is oriented counter clockwise | Improve this Doc View Source IsEmpty(Coordinate) Tests if a coordinate is empty Declaration public static bool IsEmpty(this Coordinate c) Parameters Type Name Description GeoAPI.Geometries.Coordinate c The coordinate Returns Type Description Boolean | Improve this Doc View Source Left(Envelope) Gets the minimum x-value of the GeoAPI.Geometries.Envelope Declaration public static double Left(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description Double The minimum x-value | Improve this Doc View Source LongestAxis(Envelope) Gets the axis of the longest axis Declaration public static Ordinate LongestAxis(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self Returns Type Description GeoAPI.Geometries.Ordinate | Improve this Doc View Source Max(Envelope) Gets the maximum coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate Max(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The maximum coordinate | Improve this Doc View Source Min(Envelope) Gets the minimum coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate Min(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The minimum coordinate | Improve this Doc View Source Right(Envelope) Gets the maximum x-value of the GeoAPI.Geometries.Envelope Declaration public static double Right(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description Double The maximum x-value | Improve this Doc View Source SetExtent(Geometry, Envelope) Utility function to set the NetTopologySuite.Geometries.Geometry.EnvelopeInternal when it is known. Declaration public static void SetExtent(Geometry geom, Envelope envelope) Parameters Type Name Description NetTopologySuite.Geometries.Geometry geom The geometry GeoAPI.Geometries.Envelope envelope The envelope of geom | Improve this Doc View Source Subtract(Coordinate, Coordinate) Subtracts two coordinates from one another Declaration public static Coordinate Subtract(this Coordinate self, Coordinate summand) Parameters Type Name Description GeoAPI.Geometries.Coordinate self The first coordinate GeoAPI.Geometries.Coordinate summand The second coordinate Returns Type Description GeoAPI.Geometries.Coordinate | Improve this Doc View Source ToDoubleArray(Coordinate) Converts a GeoAPI.Geometries.Coordinate to an array of Double s. Declaration public static double[] ToDoubleArray(this Coordinate self) Parameters Type Name Description GeoAPI.Geometries.Coordinate self The coordinate Returns Type Description Double [] An array of doubles | Improve this Doc View Source Top(Envelope) Gets the maximum y-value of the GeoAPI.Geometries.Envelope Declaration public static double Top(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description Double The maximum y-value | Improve this Doc View Source TopLeft(Envelope) Gets the top-left coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate TopLeft(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The top-left coordinate | Improve this Doc View Source TopRight(Envelope) Gets the top-right coordinate of the GeoAPI.Geometries.Envelope Declaration public static Coordinate TopRight(this Envelope self) Parameters Type Name Description GeoAPI.Geometries.Envelope self The envelope Returns Type Description GeoAPI.Geometries.Coordinate The top-right coordinate | Improve this Doc View Source TransformToImage(ILineString, MapViewport) Transforms a GeoAPI.Geometries.ILineString to an array of PointF s. Declaration public static PointF[] TransformToImage(this ILineString self, MapViewport map) Parameters Type Name Description GeoAPI.Geometries.ILineString self The linestring MapViewport map The mapviewport defining transformation parameters Returns Type Description PointF [] The array of PointF s | Improve this Doc View Source TransformToImage(IPolygon, MapViewport, Boolean) Transforms a GeoAPI.Geometries.IPolygon to an array of PointF s Declaration public static GraphicsPath TransformToImage(this IPolygon self, MapViewport map, bool useClipping = false) Parameters Type Name Description GeoAPI.Geometries.IPolygon self The polygon MapViewport map The map that defines the affine coordinate transformation. Boolean useClipping Use clipping for the polygon Returns Type Description GraphicsPath An array of PointFs"
  },
  "api/GeoAPI.Geometries.html": {
    "href": "api/GeoAPI.Geometries.html",
    "title": "Namespace GeoAPI.Geometries | SharpMap",
    "keywords": "Namespace GeoAPI.Geometries Classes GeoAPIEx Set of extension methods for use of GeoAPI within SharpMap"
  },
  "api/GeoAPI.html": {
    "href": "api/GeoAPI.html",
    "title": "Namespace GeoAPI | SharpMap",
    "keywords": "Namespace GeoAPI Interfaces ICoordinateSystemRepository An interface for classes that offer access to coordinate system creating facillities."
  },
  "api/GeoAPI.ICoordinateSystemRepository.html": {
    "href": "api/GeoAPI.ICoordinateSystemRepository.html",
    "title": "Interface ICoordinateSystemRepository | SharpMap",
    "keywords": "Interface ICoordinateSystemRepository An interface for classes that offer access to coordinate system creating facillities. Inherited Members IEnumerable<KeyValuePair<Int32, ICoordinateSystem>>.GetEnumerator() IEnumerable.GetEnumerator() Namespace : GeoAPI Assembly : SharpMap.dll Syntax public interface ICoordinateSystemRepository : IEnumerable<KeyValuePair<int, ICoordinateSystem>>, IEnumerable Properties | Improve this Doc View Source Count Gets a value indicating the number of unique coordinate systems in the repository Declaration int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Gets a value indicating that this coordinate system repository is readonly Declaration bool IsReadOnly { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddCoordinateSystem(Int32, ICoordinateSystem) Method to add coordinateSystem to the service and register it with the srid value. Declaration void AddCoordinateSystem(int srid, ICoordinateSystem coordinateSystem) Parameters Type Name Description Int32 srid The identifier for the coordinateSystem in the store. GeoAPI.CoordinateSystems.ICoordinateSystem coordinateSystem The coordinate system. | Improve this Doc View Source Clear() Method to remove all coordinate systems from the service Declaration void Clear() | Improve this Doc View Source RemoveCoordinateSystem(Int32) Method to remove a coordinate system form the service by its srid identifier Declaration bool RemoveCoordinateSystem(int srid) Parameters Type Name Description Int32 srid The identifier of the coordinate system to remove Returns Type Description Boolean true if the coordinate system was removed successfully, otherwise false"
  },
  "api/SharpMap.Base.DisposableObject.html": {
    "href": "api/SharpMap.Base.DisposableObject.html",
    "title": "Class DisposableObject | SharpMap",
    "keywords": "Class DisposableObject Disposable object template Inheritance Object DisposableObject BaseProvider BaseProvider<TOid> Layer BaseSymbolizer PlainLineSymbolizeHandler WarpedLineSymbolizeHander FontSizeTheme Style Implements IDisposableEx IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Base Assembly : SharpMap.dll Syntax [Serializable] public abstract class DisposableObject : IDisposableEx, IDisposable Remarks This template was taken from phil haack's blog ( http://haacked.com/archive/2005/11/18/ACloserLookAtDisposePattern.aspx ) and further enhanced Properties | Improve this Doc View Source IsDisposed Gets whether this object is disposed Declaration public bool IsDisposed { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source CheckDisposed() Method to check if this object has already been disposed Declaration protected void CheckDisposed() | Improve this Doc View Source Dispose() Executes specific tasks that are concerned with freeing or initializing resources. Declaration public void Dispose() | Improve this Doc View Source Finalize() Finalizer Declaration protected void Finalize() | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected virtual void ReleaseManagedResources() | Improve this Doc View Source ReleaseUnmanagedResources() Releases unmanaged resources Declaration protected virtual void ReleaseUnmanagedResources() Implements IDisposableEx System.IDisposable"
  },
  "api/SharpMap.Base.html": {
    "href": "api/SharpMap.Base.html",
    "title": "Namespace SharpMap.Base | SharpMap",
    "keywords": "Namespace SharpMap.Base Classes DisposableObject Disposable object template Interfaces IDisposableEx"
  },
  "api/SharpMap.Base.IDisposableEx.html": {
    "href": "api/SharpMap.Base.IDisposableEx.html",
    "title": "Interface IDisposableEx | SharpMap",
    "keywords": "Interface IDisposableEx Inherited Members IDisposable.Dispose() Namespace : SharpMap.Base Assembly : SharpMap.dll Syntax public interface IDisposableEx : IDisposable Properties | Improve this Doc View Source IsDisposed Gets whether this object was already disposed Declaration bool IsDisposed { get; } Property Value Type Description Boolean"
  },
  "api/SharpMap.Converters.WellKnownBinary.GeometryFromWKB.html": {
    "href": "api/SharpMap.Converters.WellKnownBinary.GeometryFromWKB.html",
    "title": "Class GeometryFromWKB | SharpMap",
    "keywords": "Class GeometryFromWKB Converts Well-known Binary representations to a GeoAPI.Geometries.IGeometry instance. Inheritance Object GeometryFromWKB Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Converters.WellKnownBinary Assembly : SharpMap.dll Syntax public class GeometryFromWKB Remarks The Well-known Binary Representation for GeoAPI.Geometries.IGeometry (WKBGeometry) provides a portable representation of a GeoAPI.Geometries.IGeometry value as a contiguous stream of bytes. It permits GeoAPI.Geometries.IGeometry values to be exchanged between an ODBC client and an SQL database in binary form. The Well-known Binary Representation for GeoAPI.Geometries.IGeometry is obtained by serializing a GeoAPI.Geometries.IGeometry instance as a sequence of numeric types drawn from the set {Unsigned Integer, Double} and then serializing each numeric type as a sequence of bytes using one of two well defined, standard, binary representations for numeric types (NDR, XDR). The specific binary encoding (NDR or XDR) used for a geometry byte stream is described by a one byte tag that precedes the serialized bytes. The only difference between the two encodings of geometry is one of byte order, the XDR encoding is Big Endian, the NDR encoding is Little Endian. Methods | Improve this Doc View Source Parse(Byte[], IGeometryFactory) Creates a GeoAPI.Geometries.IGeometry from the supplied byte[] containing the Well-known Binary representation. Declaration public static IGeometry Parse(byte[] bytes, IGeometryFactory factory) Parameters Type Name Description Byte [] bytes byte[] containing the Well-known Binary representation. GeoAPI.Geometries.IGeometryFactory factory The factory to create the result geometry Returns Type Description GeoAPI.Geometries.IGeometry A GeoAPI.Geometries.IGeometry bases on the supplied Well-known Binary representation. | Improve this Doc View Source Parse(BinaryReader, IGeometryFactory) Creates a GeoAPI.Geometries.IGeometry based on the Well-known binary representation. Declaration public static IGeometry Parse(BinaryReader reader, IGeometryFactory factory) Parameters Type Name Description BinaryReader reader A BinaryReader used to read the Well-known binary representation. GeoAPI.Geometries.IGeometryFactory factory The factory to create the result geometry Returns Type Description GeoAPI.Geometries.IGeometry A GeoAPI.Geometries.IGeometry based on the Well-known binary representation."
  },
  "api/SharpMap.Converters.WellKnownBinary.GeometryToWKB.html": {
    "href": "api/SharpMap.Converters.WellKnownBinary.GeometryToWKB.html",
    "title": "Class GeometryToWKB | SharpMap",
    "keywords": "Class GeometryToWKB Converts a GeoAPI.Geometries.IGeometry instance to a Well-known Binary string representation. Inheritance Object GeometryToWKB Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Converters.WellKnownBinary Assembly : SharpMap.dll Syntax public class GeometryToWKB Remarks The Well-known Binary Representation for GeoAPI.Geometries.IGeometry (WKBGeometry) provides a portable representation of a GeoAPI.Geometries.IGeometry value as a contiguous stream of bytes. It permits GeoAPI.Geometries.IGeometry values to be exchanged between an ODBC client and an SQL database in binary form. The Well-known Binary Representation for GeoAPI.Geometries.IGeometry is obtained by serializing a GeoAPI.Geometries.IGeometry instance as a sequence of numeric types drawn from the set {Unsigned Integer, Double} and then serializing each numeric type as a sequence of bytes using one of two well defined, standard, binary representations for numeric types (NDR, XDR). The specific binary encoding (NDR or XDR) used for a geometry byte stream is described by a one byte tag that precedes the serialized bytes. The only difference between the two encodings of geometry is one of byte order, the XDR encoding is Big Endian, the NDR encoding is Little Endian. Methods | Improve this Doc View Source Write(IGeometry) Writes a geometry to a byte array using little endian byte encoding Declaration public static byte[] Write(IGeometry g) Parameters Type Name Description GeoAPI.Geometries.IGeometry g The geometry to write Returns Type Description Byte [] WKB representation of the geometry | Improve this Doc View Source Write(IGeometry, WkbByteOrder) Writes a geometry to a byte array using the specified encoding. Declaration public static byte[] Write(IGeometry g, WkbByteOrder wkbByteOrder) Parameters Type Name Description GeoAPI.Geometries.IGeometry g The geometry to write WkbByteOrder wkbByteOrder Byte order Returns Type Description Byte [] WKB representation of the geometry"
  },
  "api/SharpMap.Converters.WellKnownBinary.html": {
    "href": "api/SharpMap.Converters.WellKnownBinary.html",
    "title": "Namespace SharpMap.Converters.WellKnownBinary | SharpMap",
    "keywords": "Namespace SharpMap.Converters.WellKnownBinary Classes GeometryFromWKB Converts Well-known Binary representations to a GeoAPI.Geometries.IGeometry instance. GeometryToWKB Converts a GeoAPI.Geometries.IGeometry instance to a Well-known Binary string representation. Enums WkbByteOrder Specifies the specific binary encoding (NDR or XDR) used for a geometry byte stream"
  },
  "api/SharpMap.Converters.WellKnownBinary.WkbByteOrder.html": {
    "href": "api/SharpMap.Converters.WellKnownBinary.WkbByteOrder.html",
    "title": "Enum WkbByteOrder | SharpMap",
    "keywords": "Enum WkbByteOrder Specifies the specific binary encoding (NDR or XDR) used for a geometry byte stream Namespace : SharpMap.Converters.WellKnownBinary Assembly : SharpMap.dll Syntax public enum WkbByteOrder : byte Fields Name Description Ndr NDR (Little Endian) Encoding of Numeric Types Xdr XDR (Big Endian) Encoding of Numeric Types"
  },
  "api/SharpMap.Converters.WellKnownText.GeometryFromWKT.html": {
    "href": "api/SharpMap.Converters.WellKnownText.GeometryFromWKT.html",
    "title": "Class GeometryFromWKT | SharpMap",
    "keywords": "Class GeometryFromWKT Converts a Well-known Text representation to a GeoAPI.Geometries.IGeometry instance. Inheritance Object GeometryFromWKT Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Converters.WellKnownText Assembly : SharpMap.dll Syntax public class GeometryFromWKT Remarks The Well-Known Text (WKT) representation of Geometry is designed to exchange geometry data in ASCII form. Examples of WKT representations of geometry objects are: Geometry WKT Representation A Point POINT(15 20) Note that point coordinates are specified with no separating comma. A LineString with four points: LINESTRING(0 0, 10 10, 20 25, 50 60) A Polygon with one exterior ring and one interior ring: POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7, 5 5)) A MultiPoint with three Point values: MULTIPOINT(0 0, 20 20, 60 60) A MultiLineString with two LineString values: MULTILINESTRING((10 10, 20 20), (15 15, 30 15)) A MultiPolygon with two Polygon values: MULTIPOLYGON(((0 0,10 0,10 10,0 10,0 0)),((5 5,7 5,7 7,5 7, 5 5))) A GeometryCollection consisting of two Point values and one LineString: GEOMETRYCOLLECTION(POINT(10 10), POINT(30 30), LINESTRING(15 15, 20 20)) Methods | Improve this Doc View Source Parse(TextReader) Converts a Well-known Text representation to a GeoAPI.Geometries.IGeometry . Declaration public static IGeometry Parse(TextReader reader) Parameters Type Name Description TextReader reader A Reader which will return a Geometry Tagged Text string (see the OpenGIS Simple Features Specification) Returns Type Description GeoAPI.Geometries.IGeometry Returns a GeoAPI.Geometries.IGeometry read from StreamReader. An exception will be thrown if there is a parsing problem. | Improve this Doc View Source Parse(String) Converts a Well-known text representation to a GeoAPI.Geometries.IGeometry . Declaration public static IGeometry Parse(string wellKnownText) Parameters Type Name Description String wellKnownText A GeoAPI.Geometries.IGeometry tagged text string ( see the OpenGIS Simple Features Specification. Returns Type Description GeoAPI.Geometries.IGeometry Returns a GeoAPI.Geometries.IGeometry specified by wellKnownText. Throws an exception if there is a parsing problem."
  },
  "api/SharpMap.Converters.WellKnownText.GeometryToWKT.html": {
    "href": "api/SharpMap.Converters.WellKnownText.GeometryToWKT.html",
    "title": "Class GeometryToWKT | SharpMap",
    "keywords": "Class GeometryToWKT Outputs the textual representation of a GeoAPI.Geometries.IGeometry instance. Inheritance Object GeometryToWKT Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Converters.WellKnownText Assembly : SharpMap.dll Syntax public class GeometryToWKT Remarks The Well-Known Text (WKT) representation of Geometry is designed to exchange geometry data in ASCII form. Examples of WKT representations of geometry objects are: Geometry WKT Representation A Point POINT(15 20) Note that point coordinates are specified with no separating comma. A LineString with four points: LINESTRING(0 0, 10 10, 20 25, 50 60) A Polygon with one exterior ring and one interior ring: POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7, 5 5)) A MultiPoint with three Point values: MULTIPOINT(0 0, 20 20, 60 60) A MultiLineString with two LineString values: MULTILINESTRING((10 10, 20 20), (15 15, 30 15)) A MultiPolygon with two Polygon values: MULTIPOLYGON(((0 0,10 0,10 10,0 10,0 0)),((5 5,7 5,7 7,5 7, 5 5))) A GeometryCollection consisting of two Point values and one LineString: GEOMETRYCOLLECTION(POINT(10 10), POINT(30 30), LINESTRING(15 15, 20 20)) Methods | Improve this Doc View Source Write(IGeometry) Converts a Geometry to its Well-known Text representation. Declaration public static string Write(IGeometry geometry) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry A Geometry to write. Returns Type Description String A <Geometry Tagged Text> string (see the OpenGIS Simple Features Specification) | Improve this Doc View Source Write(IGeometry, StringWriter) Converts a Geometry to its Well-known Text representation. Declaration public static void Write(IGeometry geometry, StringWriter writer) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry A geometry to process. StringWriter writer Stream to write out the geometry's text representation. Remarks Geometry is written to the output stream as <Geometry Tagged Text> string (see the OpenGIS Simple Features Specification)."
  },
  "api/SharpMap.Converters.WellKnownText.html": {
    "href": "api/SharpMap.Converters.WellKnownText.html",
    "title": "Namespace SharpMap.Converters.WellKnownText | SharpMap",
    "keywords": "Namespace SharpMap.Converters.WellKnownText Classes GeometryFromWKT Converts a Well-known Text representation to a GeoAPI.Geometries.IGeometry instance. GeometryToWKT Outputs the textual representation of a GeoAPI.Geometries.IGeometry instance. SpatialReference Converts spatial reference IDs to a Well-Known Text representation."
  },
  "api/SharpMap.Converters.WellKnownText.SpatialReference.html": {
    "href": "api/SharpMap.Converters.WellKnownText.SpatialReference.html",
    "title": "Class SpatialReference | SharpMap",
    "keywords": "Class SpatialReference Converts spatial reference IDs to a Well-Known Text representation. Inheritance Object SpatialReference Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Converters.WellKnownText Assembly : SharpMap.dll Syntax public class SpatialReference Methods | Improve this Doc View Source GetAllReferenceSystems() Returns an IEnumerable with all the SRID/WKT pairs known. Declaration public static IEnumerable<KeyValuePair<int, string>> GetAllReferenceSystems() Returns Type Description IEnumerable < KeyValuePair < Int32 , String >> | Improve this Doc View Source SridToProj4(Int32) Converts a Spatial Reference ID to a Well-known Text representation Declaration public static string SridToProj4(int srid) Parameters Type Name Description Int32 srid Spatial Reference ID Returns Type Description String Well-known text | Improve this Doc View Source SridToWkt(Int32) Converts a Spatial Reference ID to a Well-known Text representation Declaration public static string SridToWkt(int srid) Parameters Type Name Description Int32 srid Spatial Reference ID Returns Type Description String Well-known text"
  },
  "api/SharpMap.CoordinateSystems.AxisOrderRegistry.html": {
    "href": "api/SharpMap.CoordinateSystems.AxisOrderRegistry.html",
    "title": "Class AxisOrderRegistry | SharpMap",
    "keywords": "Class AxisOrderRegistry A registry for the axis order of coordinate systems as defined in EPSG 8.4 dataset Inheritance Object AxisOrderRegistry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.CoordinateSystems Assembly : SharpMap.dll Syntax public sealed class AxisOrderRegistry Properties | Improve this Doc View Source Item[String] Gets the axis order for all EPSG defined coordinate reference systems with an srid less than 32768 Declaration public int[] this[string identifier] { get; } Parameters Type Name Description String identifier The identifier Property Value Type Description Int32 [] The axis order"
  },
  "api/SharpMap.CoordinateSystems.CoordinateSystemExtensions.html": {
    "href": "api/SharpMap.CoordinateSystems.CoordinateSystemExtensions.html",
    "title": "Class CoordinateSystemExtensions | SharpMap",
    "keywords": "Class CoordinateSystemExtensions Extension methods to get hold of coordinate systems Inheritance Object CoordinateSystemExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.CoordinateSystems Assembly : SharpMap.dll Syntax public static class CoordinateSystemExtensions Methods | Improve this Doc View Source GetCoordinateSystem(IGeometry) Gets a coordinate system for the map based on the GeoAPI.Geometries.IGeometry.SRID property Declaration public static ICoordinateSystem GetCoordinateSystem(this IGeometry self) Parameters Type Name Description GeoAPI.Geometries.IGeometry self The layer Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem A coordinate system | Improve this Doc View Source GetCoordinateSystem(IProvider) Gets a coordinate system for the map based on the SRID property Declaration public static ICoordinateSystem GetCoordinateSystem(this IProvider self) Parameters Type Name Description IProvider self The provider Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem A coordinate system | Improve this Doc View Source GetCoordinateSystem(ILayer) Gets a coordinate system for the map based on the SRID property Declaration public static ICoordinateSystem GetCoordinateSystem(this ILayer self) Parameters Type Name Description ILayer self The layer Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem A coordinate system | Improve this Doc View Source GetCoordinateSystem(Map) Gets a coordinate system for the map based on the SRID property Declaration public static ICoordinateSystem GetCoordinateSystem(this Map self) Parameters Type Name Description Map self The map Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem A coordinate system | Improve this Doc View Source GetFactory(IProvider) Method to get a GeoAPI.Geometries.IGeometryFactory for the specified self Declaration public static IGeometryFactory GetFactory(this IProvider self) Parameters Type Name Description IProvider self The provider Returns Type Description GeoAPI.Geometries.IGeometryFactory A geometry factory | Improve this Doc View Source GetFactory(ILayer) Method to get a GeoAPI.Geometries.IGeometryFactory for the specified self Declaration public static IGeometryFactory GetFactory(this ILayer self) Parameters Type Name Description ILayer self The layer Returns Type Description GeoAPI.Geometries.IGeometryFactory A geometry factory | Improve this Doc View Source GetFactory(Map) Method to get a GeoAPI.Geometries.IGeometryFactory for the specified self Declaration public static IGeometryFactory GetFactory(this Map self) Parameters Type Name Description Map self The map Returns Type Description GeoAPI.Geometries.IGeometryFactory A geometry factory"
  },
  "api/SharpMap.CoordinateSystems.CoordinateSystemServices.html": {
    "href": "api/SharpMap.CoordinateSystems.CoordinateSystemServices.html",
    "title": "Class CoordinateSystemServices | SharpMap",
    "keywords": "Class CoordinateSystemServices A coordinate system services class Inheritance Object CoordinateSystemServices Implements GeoAPI.ICoordinateSystemServices ICoordinateSystemRepository IEnumerable < KeyValuePair < Int32 , GeoAPI.CoordinateSystems.ICoordinateSystem >> IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.CoordinateSystems Assembly : SharpMap.dll Syntax public class CoordinateSystemServices : ICoordinateSystemServices, ICoordinateSystemRepository, IEnumerable<KeyValuePair<int, ICoordinateSystem>>, IEnumerable Constructors | Improve this Doc View Source CoordinateSystemServices(ICoordinateSystemFactory, ICoordinateTransformationFactory) Creates an instance of this class using the provided coordinateSystemFactory , coordinateTransformationFactory and enumeration of Declaration public CoordinateSystemServices(ICoordinateSystemFactory coordinateSystemFactory, ICoordinateTransformationFactory coordinateTransformationFactory) Parameters Type Name Description GeoAPI.CoordinateSystems.ICoordinateSystemFactory coordinateSystemFactory The factory to use for creating a coordinate system. GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformationFactory coordinateTransformationFactory The factory to use for creating a coordinate transformation. | Improve this Doc View Source CoordinateSystemServices(ICoordinateSystemFactory, ICoordinateTransformationFactory, IEnumerable<KeyValuePair<Int32, String>>) Creates an instance of this class using the provided coordinateSystemFactory , coordinateTransformationFactory and enumeration of Declaration public CoordinateSystemServices(ICoordinateSystemFactory coordinateSystemFactory, ICoordinateTransformationFactory coordinateTransformationFactory, IEnumerable<KeyValuePair<int, string>> enumerable) Parameters Type Name Description GeoAPI.CoordinateSystems.ICoordinateSystemFactory coordinateSystemFactory The factory to use for creating a coordinate system. GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformationFactory coordinateTransformationFactory The factory to use for creating a coordinate transformation. IEnumerable < KeyValuePair < Int32 , String >> enumerable An enumeration if spatial reference ids and coordinate system definition strings pairs Properties | Improve this Doc View Source Count Gets a value indicating the number of unique coordinate systems in the repository Declaration public virtual int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Gets a value indicating that this coordinate system repository is readonly Declaration public virtual bool IsReadOnly { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddCoordinateSystem(Int32, ICoordinateSystem) Method to add coordinateSystem to the service and register it with the srid value. Declaration public virtual void AddCoordinateSystem(int srid, ICoordinateSystem coordinateSystem) Parameters Type Name Description Int32 srid The identifier for the coordinateSystem in the store. GeoAPI.CoordinateSystems.ICoordinateSystem coordinateSystem The coordinate system. | Improve this Doc View Source AddCoordinateSystems(IEnumerable<KeyValuePair<Int32, String>>) Method to add an enumeration of spatial reference id and coordinate system definition pairs to the repository. Declaration public void AddCoordinateSystems(IEnumerable<KeyValuePair<int, string>> coordinateSystems) Parameters Type Name Description IEnumerable < KeyValuePair < Int32 , String >> coordinateSystems An enumeration of spatial reference id and coordinate system definition pairs. | Improve this Doc View Source Clear() Method to remove all coordinate systems from the service Declaration public virtual void Clear() | Improve this Doc View Source CreateCoordinateSystem(String) Method to create a coordinate system based on the wellKnownText coordinate system definition. Declaration public ICoordinateSystem CreateCoordinateSystem(string wellKnownText) Parameters Type Name Description String wellKnownText Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem A coordinate system, null if no coordinate system could be created. | Improve this Doc View Source CreateTransformation(ICoordinateSystem, ICoordinateSystem) Method to create a coordinate tranformation between two spatial reference systems Declaration public ICoordinateTransformation CreateTransformation(ICoordinateSystem source, ICoordinateSystem target) Parameters Type Name Description GeoAPI.CoordinateSystems.ICoordinateSystem source The source spatial reference system. GeoAPI.CoordinateSystems.ICoordinateSystem target The target spatial reference system. Returns Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation A coordinate transformation, null if no transformation could be created. | Improve this Doc View Source CreateTransformation(Int32, Int32) Method to create a coordinate tranformation between two spatial reference systems, defined by their identifiers Declaration public ICoordinateTransformation CreateTransformation(int sourceSrid, int targetSrid) Parameters Type Name Description Int32 sourceSrid The identifier for the source spatial reference system. Int32 targetSrid The identifier for the target spatial reference system. Returns Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation A coordinate transformation, null if no transformation could be created. Remarks This is a convenience function for GeoAPI.ICoordinateSystemServices.CreateTransformation(GeoAPI.CoordinateSystems.ICoordinateSystem, GeoAPI.CoordinateSystems.ICoordinateSystem) . | Improve this Doc View Source FromSpatialRefSys(ICoordinateSystemFactory, ICoordinateTransformationFactory) Creates a CoordinateSystemServices built with all the values coming from the SpatialRefSys.xml Declaration public static ICoordinateSystemServices FromSpatialRefSys(ICoordinateSystemFactory coordinateSystemFactory, ICoordinateTransformationFactory coordinateTransformationFactory) Parameters Type Name Description GeoAPI.CoordinateSystems.ICoordinateSystemFactory coordinateSystemFactory A coordinate system factory GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformationFactory coordinateTransformationFactory A coordinate transformation factory Returns Type Description GeoAPI.ICoordinateSystemServices A coordinate system services instance. Exceptions Type Condition ArgumentNullException Thrown, if either coordinateSystemFactory or coordinateTransformationFactory is null. | Improve this Doc View Source GetCoordinateSystem(Int32) Returns the coordinate system by srid identifier Declaration public virtual ICoordinateSystem GetCoordinateSystem(int srid) Parameters Type Name Description Int32 srid The initialization for the coordinate system Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem The coordinate system. | Improve this Doc View Source GetCoordinateSystem(String, Int64) Returns the coordinate system by authority and code . Declaration public virtual ICoordinateSystem GetCoordinateSystem(string authority, long code) Parameters Type Name Description String authority The authority for the coordinate system Int64 code The code assigned to the coordinate system by authority . Returns Type Description GeoAPI.CoordinateSystems.ICoordinateSystem The coordinate system. | Improve this Doc View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public virtual IEnumerator<KeyValuePair<int, ICoordinateSystem>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < Int32 , GeoAPI.CoordinateSystems.ICoordinateSystem >> A IEnumerator<T> that can be used to iterate through the collection. | Improve this Doc View Source GetSRID(String, Int64) Method to get the identifier, by which this coordinate system can be accessed. Declaration public virtual int? GetSRID(string authority, long authorityCode) Parameters Type Name Description String authority The authority name Int64 authorityCode The code assigned by authority Returns Type Description Nullable < Int32 > The identifier or null | Improve this Doc View Source RemoveCoordinateSystem(Int32) Method to remove a coordinate system form the service by its srid identifier Declaration public virtual bool RemoveCoordinateSystem(int srid) Parameters Type Name Description Int32 srid The identifier of the coordinate system to remove Returns Type Description Boolean true if the coordinate system was removed successfully, otherwise false Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements GeoAPI.ICoordinateSystemServices ICoordinateSystemRepository System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpMap.CoordinateSystems.html": {
    "href": "api/SharpMap.CoordinateSystems.html",
    "title": "Namespace SharpMap.CoordinateSystems | SharpMap",
    "keywords": "Namespace SharpMap.CoordinateSystems Classes AxisOrderRegistry A registry for the axis order of coordinate systems as defined in EPSG 8.4 dataset CoordinateSystemExtensions Extension methods to get hold of coordinate systems CoordinateSystemServices A coordinate system services class"
  },
  "api/SharpMap.Data.FeatureDataRow.html": {
    "href": "api/SharpMap.Data.FeatureDataRow.html",
    "title": "Class FeatureDataRow | SharpMap",
    "keywords": "Class FeatureDataRow Represents a row of data in a FeatureDataTable. Inheritance Object DataRow FeatureDataRow Inherited Members DataRow.AcceptChanges() DataRow.BeginEdit() DataRow.CancelEdit() DataRow.ClearErrors() DataRow.Delete() DataRow.EndEdit() DataRow.GetChildRows(DataRelation) DataRow.GetChildRows(DataRelation, DataRowVersion) DataRow.GetChildRows(String) DataRow.GetChildRows(String, DataRowVersion) DataRow.GetColumnError(DataColumn) DataRow.GetColumnError(Int32) DataRow.GetColumnError(String) DataRow.GetColumnsInError() DataRow.GetParentRow(DataRelation) DataRow.GetParentRow(DataRelation, DataRowVersion) DataRow.GetParentRow(String) DataRow.GetParentRow(String, DataRowVersion) DataRow.GetParentRows(DataRelation) DataRow.GetParentRows(DataRelation, DataRowVersion) DataRow.GetParentRows(String) DataRow.GetParentRows(String, DataRowVersion) DataRow.HasVersion(DataRowVersion) DataRow.IsNull(DataColumn) DataRow.IsNull(DataColumn, DataRowVersion) DataRow.IsNull(Int32) DataRow.IsNull(String) DataRow.RejectChanges() DataRow.SetAdded() DataRow.SetColumnError(DataColumn, String) DataRow.SetColumnError(Int32, String) DataRow.SetColumnError(String, String) DataRow.SetModified() DataRow.SetNull(DataColumn) DataRow.SetParentRow(DataRow) DataRow.SetParentRow(DataRow, DataRelation) DataRow.HasErrors DataRow.Item[DataColumn] DataRow.Item[DataColumn, DataRowVersion] DataRow.Item[Int32] DataRow.Item[Int32, DataRowVersion] DataRow.Item[String] DataRow.Item[String, DataRowVersion] DataRow.ItemArray DataRow.RowError DataRow.RowState DataRow.Table Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax [Serializable] public class FeatureDataRow : DataRow Constructors | Improve this Doc View Source FeatureDataRow(DataRowBuilder) Creates an instance of this class Declaration public FeatureDataRow(DataRowBuilder rb) Parameters Type Name Description DataRowBuilder rb The row builder Properties | Improve this Doc View Source Geometry The geometry of the current feature Declaration public IGeometry Geometry { get; set; } Property Value Type Description GeoAPI.Geometries.IGeometry Methods | Improve this Doc View Source IsFeatureGeometryNull() Returns true of the geometry is null Declaration public bool IsFeatureGeometryNull() Returns Type Description Boolean | Improve this Doc View Source SetFeatureGeometryNull() Sets the geometry column to null Declaration public void SetFeatureGeometryNull()"
  },
  "api/SharpMap.Data.FeatureDataRowChangeEventArgs.html": {
    "href": "api/SharpMap.Data.FeatureDataRowChangeEventArgs.html",
    "title": "Class FeatureDataRowChangeEventArgs | SharpMap",
    "keywords": "Class FeatureDataRowChangeEventArgs Occurs after a FeatureDataRow has been changed successfully. Inheritance Object EventArgs FeatureDataRowChangeEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax public class FeatureDataRowChangeEventArgs : EventArgs Constructors | Improve this Doc View Source FeatureDataRowChangeEventArgs(FeatureDataRow, DataRowAction) Initializes a new instance of the FeatureDataRowChangeEventArgs class. Declaration public FeatureDataRowChangeEventArgs(FeatureDataRow row, DataRowAction action) Parameters Type Name Description FeatureDataRow row DataRowAction action Properties | Improve this Doc View Source Action Gets the action that has occurred on a FeatureDataRow. Declaration public DataRowAction Action { get; } Property Value Type Description DataRowAction | Improve this Doc View Source Row Gets the row upon which an action has occurred. Declaration public FeatureDataRow Row { get; } Property Value Type Description FeatureDataRow"
  },
  "api/SharpMap.Data.FeatureDataRowChangeEventHandler.html": {
    "href": "api/SharpMap.Data.FeatureDataRowChangeEventHandler.html",
    "title": "Delegate FeatureDataRowChangeEventHandler | SharpMap",
    "keywords": "Delegate FeatureDataRowChangeEventHandler Represents the method that will handle the RowChanging, RowChanged, RowDeleting, and RowDeleted events of a FeatureDataTable. Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax public delegate void FeatureDataRowChangeEventHandler(object sender, FeatureDataRowChangeEventArgs e); Parameters Type Name Description Object sender FeatureDataRowChangeEventArgs e"
  },
  "api/SharpMap.Data.FeatureDataSet.html": {
    "href": "api/SharpMap.Data.FeatureDataSet.html",
    "title": "Class FeatureDataSet | SharpMap",
    "keywords": "Class FeatureDataSet Represents an in-memory cache of spatial data. The FeatureDataSet is an extension of System.Data.DataSet Inheritance Object MarshalByValueComponent DataSet FeatureDataSet Implements IComponent IDisposable IServiceProvider IListSource ISupportInitializeNotification ISupportInitialize IXmlSerializable ISerializable Inherited Members DataSet.AcceptChanges() DataSet.BeginInit() DataSet.Clear() DataSet.Copy() DataSet.CreateDataReader() DataSet.CreateDataReader(DataTable[]) DataSet.DetermineSchemaSerializationMode(SerializationInfo, StreamingContext) DataSet.DetermineSchemaSerializationMode(XmlReader) DataSet.EndInit() DataSet.GetChanges() DataSet.GetChanges(DataRowState) DataSet.GetDataSetSchema(XmlSchemaSet) DataSet.GetObjectData(SerializationInfo, StreamingContext) DataSet.GetSchemaSerializable() DataSet.GetSerializationData(SerializationInfo, StreamingContext) DataSet.GetXml() DataSet.GetXmlSchema() DataSet.HasChanges() DataSet.HasChanges(DataRowState) DataSet.InferXmlSchema(Stream, String[]) DataSet.InferXmlSchema(TextReader, String[]) DataSet.InferXmlSchema(String, String[]) DataSet.InferXmlSchema(XmlReader, String[]) DataSet.InitializeDerivedDataSet() DataSet.IsBinarySerialized(SerializationInfo, StreamingContext) DataSet.Load(IDataReader, LoadOption, DataTable[]) DataSet.Load(IDataReader, LoadOption, FillErrorEventHandler, DataTable[]) DataSet.Load(IDataReader, LoadOption, String[]) DataSet.Merge(DataRow[]) DataSet.Merge(DataRow[], Boolean, MissingSchemaAction) DataSet.Merge(DataSet) DataSet.Merge(DataSet, Boolean) DataSet.Merge(DataSet, Boolean, MissingSchemaAction) DataSet.Merge(DataTable) DataSet.Merge(DataTable, Boolean, MissingSchemaAction) DataSet.OnPropertyChanging(PropertyChangedEventArgs) DataSet.OnRemoveRelation(DataRelation) DataSet.OnRemoveTable(DataTable) DataSet.RaisePropertyChanging(String) DataSet.ReadXml(Stream) DataSet.ReadXml(Stream, XmlReadMode) DataSet.ReadXml(TextReader) DataSet.ReadXml(TextReader, XmlReadMode) DataSet.ReadXml(String) DataSet.ReadXml(String, XmlReadMode) DataSet.ReadXml(XmlReader) DataSet.ReadXml(XmlReader, XmlReadMode) DataSet.ReadXmlSchema(Stream) DataSet.ReadXmlSchema(TextReader) DataSet.ReadXmlSchema(String) DataSet.ReadXmlSchema(XmlReader) DataSet.ReadXmlSerializable(XmlReader) DataSet.RejectChanges() DataSet.Reset() DataSet.ShouldSerializeRelations() DataSet.ShouldSerializeTables() DataSet.IListSource.GetList() DataSet.IXmlSerializable.GetSchema() DataSet.IXmlSerializable.ReadXml(XmlReader) DataSet.IXmlSerializable.WriteXml(XmlWriter) DataSet.WriteXml(Stream) DataSet.WriteXml(Stream, XmlWriteMode) DataSet.WriteXml(TextWriter) DataSet.WriteXml(TextWriter, XmlWriteMode) DataSet.WriteXml(String) DataSet.WriteXml(String, XmlWriteMode) DataSet.WriteXml(XmlWriter) DataSet.WriteXml(XmlWriter, XmlWriteMode) DataSet.WriteXmlSchema(Stream) DataSet.WriteXmlSchema(Stream, Converter<Type, String>) DataSet.WriteXmlSchema(TextWriter) DataSet.WriteXmlSchema(TextWriter, Converter<Type, String>) DataSet.WriteXmlSchema(String) DataSet.WriteXmlSchema(String, Converter<Type, String>) DataSet.WriteXmlSchema(XmlWriter) DataSet.WriteXmlSchema(XmlWriter, Converter<Type, String>) DataSet.CaseSensitive DataSet.DataSetName DataSet.DefaultViewManager DataSet.EnforceConstraints DataSet.ExtendedProperties DataSet.HasErrors DataSet.IsInitialized DataSet.Locale DataSet.Namespace DataSet.Prefix DataSet.Relations DataSet.RemotingFormat DataSet.SchemaSerializationMode DataSet.Site DataSet.IListSource.ContainsListCollection DataSet.Initialized DataSet.MergeFailed MarshalByValueComponent.Dispose() MarshalByValueComponent.Dispose(Boolean) MarshalByValueComponent.GetService(Type) MarshalByValueComponent.ToString() MarshalByValueComponent.Container MarshalByValueComponent.DesignMode MarshalByValueComponent.Events MarshalByValueComponent.Disposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax [Serializable] public class FeatureDataSet : DataSet, IComponent, IDisposable, IServiceProvider, IListSource, ISupportInitializeNotification, ISupportInitialize, IXmlSerializable, ISerializable Remarks Serialization is achieved using the approach described in http://support.microsoft.com/kb/829740/en-us Constructors | Improve this Doc View Source FeatureDataSet() Initializes a new instance of the FeatureDataSet class. Declaration public FeatureDataSet() | Improve this Doc View Source FeatureDataSet(SerializationInfo, StreamingContext) Initializes a new instance of the FeatureDataSet class. Declaration protected FeatureDataSet(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info serialization info StreamingContext context streaming context Properties | Improve this Doc View Source Tables Gets the collection of tables contained in the FeatureDataSet Declaration public FeatureTableCollection Tables { get; } Property Value Type Description FeatureTableCollection Methods | Improve this Doc View Source Clone() Copies the structure of the FeatureDataSet, including all FeatureDataTable schemas, relations, and constraints. Does not copy any data. Declaration public FeatureDataSet Clone() Returns Type Description FeatureDataSet Explicit Interface Implementations | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.ComponentModel.IComponent System.IDisposable System.IServiceProvider System.ComponentModel.IListSource System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize System.Xml.Serialization.IXmlSerializable System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Data.FeatureDataTable.html": {
    "href": "api/SharpMap.Data.FeatureDataTable.html",
    "title": "Class FeatureDataTable | SharpMap",
    "keywords": "Class FeatureDataTable Represents one feature table of in-memory spatial data. Inheritance Object MarshalByValueComponent DataTable FeatureDataTable Implements IComponent IDisposable IServiceProvider IListSource ISupportInitializeNotification ISupportInitialize ISerializable IXmlSerializable IEnumerable Inherited Members DataTable.fInitInProgress DataTable.AcceptChanges() DataTable.BeginInit() DataTable.BeginLoadData() DataTable.Clear() DataTable.Compute(String, String) DataTable.Copy() DataTable.CreateDataReader() DataTable.EndInit() DataTable.EndLoadData() DataTable.GetChanges() DataTable.GetChanges(DataRowState) DataTable.GetDataTableSchema(XmlSchemaSet) DataTable.GetErrors() DataTable.GetSchema() DataTable.ImportRow(DataRow) DataTable.Load(IDataReader) DataTable.Load(IDataReader, LoadOption) DataTable.Load(IDataReader, LoadOption, FillErrorEventHandler) DataTable.LoadDataRow(Object[], Boolean) DataTable.LoadDataRow(Object[], LoadOption) DataTable.Merge(DataTable) DataTable.Merge(DataTable, Boolean) DataTable.Merge(DataTable, Boolean, MissingSchemaAction) DataTable.NewRowArray(Int32) DataTable.OnColumnChanged(DataColumnChangeEventArgs) DataTable.OnColumnChanging(DataColumnChangeEventArgs) DataTable.OnPropertyChanging(PropertyChangedEventArgs) DataTable.OnRemoveColumn(DataColumn) DataTable.OnTableCleared(DataTableClearEventArgs) DataTable.OnTableClearing(DataTableClearEventArgs) DataTable.OnTableNewRow(DataTableNewRowEventArgs) DataTable.ReadXml(Stream) DataTable.ReadXml(TextReader) DataTable.ReadXml(String) DataTable.ReadXml(XmlReader) DataTable.ReadXmlSchema(Stream) DataTable.ReadXmlSchema(TextReader) DataTable.ReadXmlSchema(String) DataTable.ReadXmlSchema(XmlReader) DataTable.ReadXmlSerializable(XmlReader) DataTable.RejectChanges() DataTable.Reset() DataTable.Select() DataTable.Select(String) DataTable.Select(String, String) DataTable.Select(String, String, DataViewRowState) DataTable.IListSource.GetList() DataTable.IXmlSerializable.GetSchema() DataTable.IXmlSerializable.ReadXml(XmlReader) DataTable.IXmlSerializable.WriteXml(XmlWriter) DataTable.ToString() DataTable.WriteXml(Stream) DataTable.WriteXml(Stream, Boolean) DataTable.WriteXml(Stream, XmlWriteMode) DataTable.WriteXml(Stream, XmlWriteMode, Boolean) DataTable.WriteXml(TextWriter) DataTable.WriteXml(TextWriter, Boolean) DataTable.WriteXml(TextWriter, XmlWriteMode) DataTable.WriteXml(TextWriter, XmlWriteMode, Boolean) DataTable.WriteXml(String) DataTable.WriteXml(String, Boolean) DataTable.WriteXml(String, XmlWriteMode) DataTable.WriteXml(String, XmlWriteMode, Boolean) DataTable.WriteXml(XmlWriter) DataTable.WriteXml(XmlWriter, Boolean) DataTable.WriteXml(XmlWriter, XmlWriteMode) DataTable.WriteXml(XmlWriter, XmlWriteMode, Boolean) DataTable.WriteXmlSchema(Stream) DataTable.WriteXmlSchema(Stream, Boolean) DataTable.WriteXmlSchema(TextWriter) DataTable.WriteXmlSchema(TextWriter, Boolean) DataTable.WriteXmlSchema(String) DataTable.WriteXmlSchema(String, Boolean) DataTable.WriteXmlSchema(XmlWriter) DataTable.WriteXmlSchema(XmlWriter, Boolean) DataTable.CaseSensitive DataTable.ChildRelations DataTable.Columns DataTable.Constraints DataTable.DataSet DataTable.DefaultView DataTable.DisplayExpression DataTable.ExtendedProperties DataTable.HasErrors DataTable.IsInitialized DataTable.Locale DataTable.MinimumCapacity DataTable.Namespace DataTable.ParentRelations DataTable.Prefix DataTable.PrimaryKey DataTable.RemotingFormat DataTable.Rows DataTable.Site DataTable.IListSource.ContainsListCollection DataTable.TableName DataTable.ColumnChanged DataTable.ColumnChanging DataTable.Initialized DataTable.RowChanged DataTable.RowChanging DataTable.RowDeleted DataTable.RowDeleting DataTable.TableCleared DataTable.TableClearing DataTable.TableNewRow MarshalByValueComponent.Dispose() MarshalByValueComponent.Dispose(Boolean) MarshalByValueComponent.GetService(Type) MarshalByValueComponent.Container MarshalByValueComponent.DesignMode MarshalByValueComponent.Events MarshalByValueComponent.Disposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax [Serializable] public class FeatureDataTable : DataTable, IComponent, IDisposable, IServiceProvider, IListSource, ISupportInitializeNotification, ISupportInitialize, ISerializable, IXmlSerializable, IEnumerable Constructors | Improve this Doc View Source FeatureDataTable() Initializes a new instance of the FeatureDataTable class with no arguments. Declaration public FeatureDataTable() | Improve this Doc View Source FeatureDataTable(DataTable) Initializes a new instance of the FeatureDataTable class with the specified table name. Declaration public FeatureDataTable(DataTable table) Parameters Type Name Description DataTable table | Improve this Doc View Source FeatureDataTable(SerializationInfo, StreamingContext) Creates an instance of this class from serialization Declaration public FeatureDataTable(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info StreamingContext context The streaming context Properties | Improve this Doc View Source Count Gets the number of rows in the table Declaration [Browsable(false)] public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Gets the feature data row at the specified index Declaration public FeatureDataRow this[int index] { get; } Parameters Type Name Description Int32 index row index Property Value Type Description FeatureDataRow FeatureDataRow Methods | Improve this Doc View Source AddRow(FeatureDataRow) Adds a row to the FeatureDataTable Declaration public void AddRow(FeatureDataRow row) Parameters Type Name Description FeatureDataRow row | Improve this Doc View Source Clone() Clones the structure of the FeatureDataTable, including all FeatureDataTable schemas and constraints. Declaration public FeatureDataTable Clone() Returns Type Description FeatureDataTable | Improve this Doc View Source CreateInstance() Declaration protected override DataTable CreateInstance() Returns Type Description DataTable Overrides DataTable.CreateInstance() | Improve this Doc View Source GetEnumerator() Returns an enumerator for enumerating the rows of the FeatureDataTable Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Populates a serialization information object with the data needed to serialize the DataTable . Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info A SerializationInfo object that holds the serialized data associated with the DataTable . StreamingContext context A StreamingContext object that contains the source and destination of the serialized stream associated with the DataTable . Overrides DataTable.GetObjectData(SerializationInfo, StreamingContext) Exceptions Type Condition ArgumentNullException The info parameter is a null reference (Nothing in Visual Basic). | Improve this Doc View Source GetRowType() Declaration protected override Type GetRowType() Returns Type Description Type Overrides DataTable.GetRowType() | Improve this Doc View Source NewRow() Creates a new FeatureDataRow with the same schema as the table. Declaration public FeatureDataRow NewRow() Returns Type Description FeatureDataRow | Improve this Doc View Source NewRowFromBuilder(DataRowBuilder) Creates a new FeatureDataRow with the same schema as the table, based on a datarow builder Declaration protected override DataRow NewRowFromBuilder(DataRowBuilder builder) Parameters Type Name Description DataRowBuilder builder Returns Type Description DataRow Overrides DataTable.NewRowFromBuilder(DataRowBuilder) | Improve this Doc View Source OnRowChanged(DataRowChangeEventArgs) Raises the FeatureDataRowChanged event. Declaration protected override void OnRowChanged(DataRowChangeEventArgs e) Parameters Type Name Description DataRowChangeEventArgs e Overrides DataTable.OnRowChanged(DataRowChangeEventArgs) | Improve this Doc View Source OnRowChanging(DataRowChangeEventArgs) Raises the FeatureDataRowChanging event. Declaration protected override void OnRowChanging(DataRowChangeEventArgs e) Parameters Type Name Description DataRowChangeEventArgs e Overrides DataTable.OnRowChanging(DataRowChangeEventArgs) | Improve this Doc View Source OnRowDeleted(DataRowChangeEventArgs) Raises the FeatureDataRowDeleted event Declaration protected override void OnRowDeleted(DataRowChangeEventArgs e) Parameters Type Name Description DataRowChangeEventArgs e Overrides DataTable.OnRowDeleted(DataRowChangeEventArgs) | Improve this Doc View Source OnRowDeleting(DataRowChangeEventArgs) Raises the FeatureDataRowDeleting event. Declaration protected override void OnRowDeleting(DataRowChangeEventArgs e) Parameters Type Name Description DataRowChangeEventArgs e Overrides DataTable.OnRowDeleting(DataRowChangeEventArgs) | Improve this Doc View Source RemoveRow(FeatureDataRow) Removes the row from the table Declaration public void RemoveRow(FeatureDataRow row) Parameters Type Name Description FeatureDataRow row Row to remove Events | Improve this Doc View Source FeatureDataRowChanged Occurs after a FeatureDataRow has been changed successfully. Declaration public event FeatureDataRowChangeEventHandler FeatureDataRowChanged Event Type Type Description FeatureDataRowChangeEventHandler | Improve this Doc View Source FeatureDataRowChanging Occurs when a FeatureDataRow is changing. Declaration public event FeatureDataRowChangeEventHandler FeatureDataRowChanging Event Type Type Description FeatureDataRowChangeEventHandler | Improve this Doc View Source FeatureDataRowDeleted Occurs after a row in the table has been deleted. Declaration public event FeatureDataRowChangeEventHandler FeatureDataRowDeleted Event Type Type Description FeatureDataRowChangeEventHandler | Improve this Doc View Source FeatureDataRowDeleting Occurs before a row in the table is about to be deleted. Declaration public event FeatureDataRowChangeEventHandler FeatureDataRowDeleting Event Type Type Description FeatureDataRowChangeEventHandler Implements System.ComponentModel.IComponent System.IDisposable System.IServiceProvider System.ComponentModel.IListSource System.ComponentModel.ISupportInitializeNotification System.ComponentModel.ISupportInitialize System.Runtime.Serialization.ISerializable System.Xml.Serialization.IXmlSerializable System.Collections.IEnumerable"
  },
  "api/SharpMap.Data.FeatureTableCollection.html": {
    "href": "api/SharpMap.Data.FeatureTableCollection.html",
    "title": "Class FeatureTableCollection | SharpMap",
    "keywords": "Class FeatureTableCollection Represents the collection of tables for the FeatureDataSet. It is a proxy to the Tables object. It filters out those DataTable that are FeatureDataTable s. Inheritance Object FeatureTableCollection Implements ICollection < FeatureDataTable > IEnumerable < FeatureDataTable > IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data Assembly : SharpMap.dll Syntax public class FeatureTableCollection : ICollection<FeatureDataTable>, IEnumerable<FeatureDataTable>, IEnumerable Properties | Improve this Doc View Source Count Gets the number of elements contained in the ICollection<T> . Declaration public int Count { get; } Property Value Type Description Int32 The number of elements contained in the ICollection<T> . | Improve this Doc View Source IsReadOnly Gets a value indicating whether the ICollection<T> is read-only. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean true if the ICollection<T> is read-only; otherwise, false. | Improve this Doc View Source Item[Int32] An indexer to the feature data tables in this set Declaration public FeatureDataTable this[int index] { get; } Parameters Type Name Description Int32 index The index of the feature data table to get Property Value Type Description FeatureDataTable The feature data table at index index . Exceptions Type Condition ArgumentOutOfRangeException Thrown, if the index is not in the valid range. Methods | Improve this Doc View Source Add(FeatureDataTable) Method to add a FeatureDataTable to this set. Declaration public void Add(FeatureDataTable item) Parameters Type Name Description FeatureDataTable item The feature data table to add Remarks If item belongs to a different FeatureDataSet , this method attempts to remove it from that. If that is not possible, item is copied ( Copy() ) and the copy is then added. | Improve this Doc View Source AddRange(IEnumerable<FeatureDataTable>) Method to add a range of FeatureDataTable s to the (Feature)DataTableCollection. Declaration public void AddRange(IEnumerable<FeatureDataTable> items) Parameters Type Name Description IEnumerable < FeatureDataTable > items The tables to add | Improve this Doc View Source Clear() Removes all items from the ICollection<T> . Declaration public void Clear() Exceptions Type Condition NotSupportedException The ICollection<T> is read-only. | Improve this Doc View Source Contains(FeatureDataTable) Determines whether the ICollection<T> contains a specific value. Declaration public bool Contains(FeatureDataTable item) Parameters Type Name Description FeatureDataTable item The object to locate in the ICollection<T> . Returns Type Description Boolean true if item is found in the ICollection<T> ; otherwise, false. | Improve this Doc View Source CopyTo(FeatureDataTable[], Int32) Copies the elements of the ICollection<T> to an Array , starting at a particular Array index. Declaration public void CopyTo(FeatureDataTable[] array, int arrayIndex) Parameters Type Name Description FeatureDataTable [] array The one-dimensional Array that is the destination of the elements copied from ICollection<T> . The Array must have zero-based indexing. Int32 arrayIndex The zero-based index in array at which copying begins. Exceptions Type Condition ArgumentNullException array is null. ArgumentOutOfRangeException arrayIndex is less than 0. ArgumentException The number of elements in the source ICollection<T> is greater than the available space from arrayIndex to the end of the destination array . | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<FeatureDataTable> GetEnumerator() Returns Type Description IEnumerator < FeatureDataTable > | Improve this Doc View Source Remove(FeatureDataTable) Removes the first occurrence of a specific object from the ICollection<T> . Declaration public bool Remove(FeatureDataTable item) Parameters Type Name Description FeatureDataTable item The object to remove from the ICollection<T> . Returns Type Description Boolean true if item was successfully removed from the ICollection<T> ; otherwise, false. This method also returns false if item is not found in the original ICollection<T> . Exceptions Type Condition NotSupportedException The ICollection<T> is read-only. | Improve this Doc View Source RemoveAt(Int32) Remove the feature data table at the provided index Declaration public bool RemoveAt(int index) Parameters Type Name Description Int32 index The index of the table to remove Returns Type Description Boolean true if the table was successfully removed Exceptions Type Condition ArgumentOutOfRangeException Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Returns an enumerator that iterates through a collection. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator An IEnumerator object that can be used to iterate through the collection. Implements System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/SharpMap.Data.html": {
    "href": "api/SharpMap.Data.html",
    "title": "Namespace SharpMap.Data | SharpMap",
    "keywords": "Namespace SharpMap.Data Classes FeatureDataRow Represents a row of data in a FeatureDataTable. FeatureDataRowChangeEventArgs Occurs after a FeatureDataRow has been changed successfully. FeatureDataSet Represents an in-memory cache of spatial data. The FeatureDataSet is an extension of System.Data.DataSet FeatureDataTable Represents one feature table of in-memory spatial data. FeatureTableCollection Represents the collection of tables for the FeatureDataSet. It is a proxy to the Tables object. It filters out those DataTable that are FeatureDataTable s. Delegates FeatureDataRowChangeEventHandler Represents the method that will handle the RowChanging, RowChanged, RowDeleting, and RowDeleted events of a FeatureDataTable."
  },
  "api/SharpMap.Data.Providers.BaseProvider.html": {
    "href": "api/SharpMap.Data.Providers.BaseProvider.html",
    "title": "Class BaseProvider | SharpMap",
    "keywords": "Class BaseProvider Abstract base provider that handles geometry factory based on SRID Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider SpatialDbProvider SqlServer2008 Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public abstract class BaseProvider : DisposableObject, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Constructors | Improve this Doc View Source BaseProvider() Creates an instance of this class. The ConnectionID is set to Empty , the spatial reference id to 0 and an appropriate factory is chosen. Declaration protected BaseProvider() | Improve this Doc View Source BaseProvider(Int32) Creates an instance of this class. The ConnectionID is set to Empty , the spatial reference id to srid and an appropriate factory is chosen. Declaration protected BaseProvider(int srid) Parameters Type Name Description Int32 srid The spatial reference id Properties | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration public string ConnectionID { get; protected set; } Property Value Type Description String Remarks The ConnectionID should be unique to the datasource (for instance the filename or the connectionstring), and is meant to be used for connection pooling. If connection pooling doesn't apply to this datasource, the ConnectionID should return String.Empty | Improve this Doc View Source Factory Gets or sets the factory to create geometries. Declaration public IGeometryFactory Factory { get; protected set; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public virtual bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public int SRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source CloneTableStructure(FeatureDataTable) Method to clone the feature data tables schema. Declaration protected static FeatureDataTable CloneTableStructure(FeatureDataTable baseTable) Parameters Type Name Description FeatureDataTable baseTable The feature data table Returns Type Description FeatureDataTable An empty feature data table, having the same schema as baseTable | Improve this Doc View Source Close() Closes the datasource Declaration public virtual void Close() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public abstract void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() Function to return the GeoAPI.Geometries.Envelope of dataset Declaration public abstract Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The extent of the dataset | Improve this Doc View Source GetFeature(UInt32) Function to return a FeatureDataRow based on rowId Declaration public abstract FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId The unique identifier of the row Returns Type Description FeatureDataRow datarow | Improve this Doc View Source GetFeatureCount() Function to return the total number of features in the dataset Declaration public abstract int GetFeatureCount() Returns Type Description Int32 The number of features | Improve this Doc View Source GetGeometriesInView(Envelope) Gets the features within the specified GeoAPI.Geometries.Envelope Declaration public abstract Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Features within the specified GeoAPI.Geometries.Envelope | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public abstract IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose GeoAPI.Geometries.Envelope intersects 'bbox'. Declaration public abstract Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Box that objects should intersect Returns Type Description Collection < UInt32 > Remarks This method is usually much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their GeoAPI.Geometries.Envelope , and using the Spatial Index | Improve this Doc View Source OnBeginExecuteIntersectionQuery(IGeometry) Method to perform preparatory things for executing an intersection query against the data source Declaration protected virtual void OnBeginExecuteIntersectionQuery(IGeometry geom) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter. | Improve this Doc View Source OnEndExecuteIntersectionQuery() Method to do cleanup work after having performed the intersection query against the data source Declaration protected virtual void OnEndExecuteIntersectionQuery() | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Method to perform the intersection query against the data source Declaration protected abstract void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter FeatureDataSet ds The feature data set to store the results in | Improve this Doc View Source OnSridChanged(EventArgs) Handler method to handle changes of SRID . Declaration protected virtual void OnSridChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs Event arguments. | Improve this Doc View Source Open() Opens the datasource Declaration public virtual void Open() | Improve this Doc View Source ReleaseManagedResources() Releases all managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Events | Improve this Doc View Source SridChanged Event raised when SRID has changed Declaration public event EventHandler SridChanged Event Type Type Description EventHandler Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.BaseProvider-1.html": {
    "href": "api/SharpMap.Data.Providers.BaseProvider-1.html",
    "title": "Class BaseProvider<TOid> | SharpMap",
    "keywords": "Class BaseProvider<TOid> Abstract base provider that handles geometry factory based on SRID Inheritance Object DisposableObject BaseProvider<TOid> Implements IDisposableEx IProvider <TOid> IBaseProvider IDisposable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public abstract class BaseProvider<TOid> : DisposableObject, IDisposableEx, IProvider<TOid>, IBaseProvider, IDisposable where TOid : IComparable<TOid> Type Parameters Name Description TOid Constructors | Improve this Doc View Source BaseProvider() Creates an instance of this class. The ConnectionID is set to Empty , the spatial reference id to 0 and an appropriate factory is chosen. Declaration protected BaseProvider() | Improve this Doc View Source BaseProvider(Int32) Creates an instance of this class. The ConnectionID is set to Empty , the spatial reference id to srid and an appropriate factory is chosen. Declaration protected BaseProvider(int srid) Parameters Type Name Description Int32 srid The spatial reference id Properties | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration public string ConnectionID { get; protected set; } Property Value Type Description String Remarks The ConnectionID should be unique to the datasource (for instance the filename or the connectionstring), and is meant to be used for connection pooling. If connection pooling doesn't apply to this datasource, the ConnectionID should return String.Empty | Improve this Doc View Source Factory Gets or sets the factory to create geometries. Declaration public IGeometryFactory Factory { get; protected set; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public virtual bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public int SRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source CloneTableStructure(FeatureDataTable) Method to clone the feature data tables schema. Declaration protected static FeatureDataTable CloneTableStructure(FeatureDataTable baseTable) Parameters Type Name Description FeatureDataTable baseTable The feature data table Returns Type Description FeatureDataTable An empty feature data table, having the same schema as baseTable | Improve this Doc View Source Close() Closes the datasource Declaration public virtual void Close() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public abstract void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() Function to return the GeoAPI.Geometries.Envelope of dataset Declaration public abstract Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The extent of the dataset | Improve this Doc View Source GetFeature(TOid) Function to return a FeatureDataRow based on rowId Declaration public abstract FeatureDataRow GetFeature(TOid rowId) Parameters Type Name Description TOid rowId The unique identifier of the row Returns Type Description FeatureDataRow datarow | Improve this Doc View Source GetFeatureCount() Function to return the total number of features in the dataset Declaration public abstract int GetFeatureCount() Returns Type Description Int32 The number of features | Improve this Doc View Source GetGeometriesInView(Envelope) Gets the features within the specified GeoAPI.Geometries.Envelope Declaration public abstract Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Features within the specified GeoAPI.Geometries.Envelope | Improve this Doc View Source GetGeometryByID(TOid) Returns the geometry corresponding to the Object ID Declaration public abstract IGeometry GetGeometryByID(TOid oid) Parameters Type Name Description TOid oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose GeoAPI.Geometries.Envelope intersects 'bbox'. Declaration public abstract Collection<TOid> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Box that objects should intersect Returns Type Description Collection <TOid> Remarks This method is usually much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their GeoAPI.Geometries.Envelope , and using the Spatial Index | Improve this Doc View Source OnBeginExecuteIntersectionQuery(IGeometry) Method to perform preparatory things for executing an intersection query against the data source Declaration protected virtual void OnBeginExecuteIntersectionQuery(IGeometry geom) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter. | Improve this Doc View Source OnEndExecuteIntersectionQuery() Method to do cleanup work after having performed the intersection query against the data source Declaration protected virtual void OnEndExecuteIntersectionQuery() | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Method to perform the intersection query against the data source Declaration protected abstract void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter FeatureDataSet ds The feature data set to store the results in | Improve this Doc View Source OnSridChanged(EventArgs) Handler method to handle changes of SRID . Declaration protected virtual void OnSridChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs Event arguments. | Improve this Doc View Source Open() Opens the datasource Declaration public virtual void Open() | Improve this Doc View Source ReleaseManagedResources() Releases all managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Events | Improve this Doc View Source SridChanged Event raised when SRID has changed Declaration public event EventHandler SridChanged Event Type Type Description EventHandler Implements IDisposableEx IProvider<TOid> IBaseProvider System.IDisposable"
  },
  "api/SharpMap.Data.Providers.DbaseReader.html": {
    "href": "api/SharpMap.Data.Providers.DbaseReader.html",
    "title": "Class DbaseReader | SharpMap",
    "keywords": "Class DbaseReader Straight forward Dbase file reader Inheritance Object DbaseReader Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public class DbaseReader : IDisposable Remarks NOTE: This implementation assumes that the record index starts with 0 (Zero) instead of 1. Constructors | Improve this Doc View Source DbaseReader(String) Creates an instance of this class Declaration public DbaseReader(string filename) Parameters Type Name Description String filename The shapefile to open Exceptions Type Condition FileNotFoundException Thrown if the file is not present. Properties | Improve this Doc View Source CurrentRecordOid Gets or sets the current object id Declaration public uint CurrentRecordOid { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Encoding Gets or sets the Encoding used for parsing strings from the DBase DBF file. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding Remarks If the encoding type isn't set, the dbase driver will try to determine the correct Encoding . | Improve this Doc View Source IncludeOid Gets or sets a value indicating whether the object's id should be included in attribute data or not. The default value is false Declaration public bool IncludeOid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsOpen Gets a value indicating whether the Stream to the Dbase file is open or not. Declaration public bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source LastUpdate Gets the date this file was last updated. Declaration public DateTime LastUpdate { get; } Property Value Type Description DateTime | Improve this Doc View Source NewTable Gets an empty table that matches the dbase structure Declaration public FeatureDataTable NewTable { get; } Property Value Type Description FeatureDataTable Methods | Improve this Doc View Source Close() Closes the dbase file stream Declaration public void Close() | Improve this Doc View Source CreateDbfIndex<T>(Int32) Indexes a DBF column in a binary tree [NOT COMPLETE] Declaration public BinaryTree<T, uint> CreateDbfIndex<T>(int columnId) where T : IComparable<T> Parameters Type Name Description Int32 columnId Column to index Returns Type Description BinaryTree <T, UInt32 > Type Parameters Name Description T datatype to be indexed | Improve this Doc View Source Dispose() Method to perform cleanup work for unmanaged resources Declaration public void Dispose() | Improve this Doc View Source GetSchemaTable() Returns a DataTable that describes the column metadata of the DBase file. Declaration public DataTable GetSchemaTable() Returns Type Description DataTable A DataTable that describes the column metadata. | Improve this Doc View Source GetValues(UInt32) Gets all attribute values for data record oid Declaration public object[] GetValues(uint oid) Parameters Type Name Description UInt32 oid Returns Type Description Object [] | Improve this Doc View Source OnEncodingChanged(EventArgs) Event invoker for EncodingChanged event. Declaration protected virtual void OnEncodingChanged(EventArgs e) Parameters Type Name Description EventArgs e The event's arguments Remarks When overridden, make sure to call base.OnEncodingChanged in order to make sure that subscribers are notified. | Improve this Doc View Source OnIncludeOidChanged(EventArgs) Event invoker for IncludeOidChanged event. Declaration protected virtual void OnIncludeOidChanged(EventArgs e) Parameters Type Name Description EventArgs e The event's arguments Remarks When overridden, make sure to call base.OnIncludeOidChanged in order to make sure that subscribers are notified. | Improve this Doc View Source Open() Opens the dbase stream Declaration public void Open() | Improve this Doc View Source RecordDeleted(UInt32) Declaration public bool RecordDeleted(uint oid) Parameters Type Name Description UInt32 oid Returns Type Description Boolean Exceptions Type Condition ApplicationException ArgumentException Events | Improve this Doc View Source EncodingChanged Event raised when the Encoding property has changed Declaration public event EventHandler EncodingChanged Event Type Type Description EventHandler | Improve this Doc View Source IncludeOidChanged Event raised when the IncludeOid property has changed Declaration public event EventHandler IncludeOidChanged Event Type Type Description EventHandler Implements System.IDisposable"
  },
  "api/SharpMap.Data.Providers.DbPoint.html": {
    "href": "api/SharpMap.Data.Providers.DbPoint.html",
    "title": "Class DbPoint | SharpMap",
    "keywords": "Class DbPoint The DbPoint provider is used for rendering point data from an ADO.NET compatible data source. Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider DbPoint OleDbPoint Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members PreparedGeometryProvider.PreparedGeometry PreparedGeometryProvider.ReleaseManagedResources() PreparedGeometryProvider.OnBeginExecuteIntersectionQuery(IGeometry) PreparedGeometryProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) PreparedGeometryProvider.OnEndExecuteIntersectionQuery() BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class DbPoint : PreparedGeometryProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The data source will need to have two double-type columns, xColumn and yColumn that contains the coordinates of the point, and an integer-type column containing a unique identifier for each row. To get good performance, make sure you have applied indexes on ID, xColumn and yColumns in your data source table. Adding a SQLite data source to a layer: Layers.VectorLayer myLayer = new Layers.VectorLayer(\"My layer\"); string connStr = @\"Data Source=MyDatabaseFile.sqlite\"; myLayer.DataSource = new Data.Providers.DbPoint(System.Data.SQLite.SQLiteFactory.Instance, connStr, \"myTable\", \"OidColumn\", \"X\", \"Y\"); Adding a SQL Server datasource to a layer: Layers.VectorLayer myLayer = new Layers.VectorLayer(\"My layer\"); string connStr = @\"Data Source=(local);Initial Catalog=MyDatabase;Integrated Security=True;\"; myLayer.DataSource = new Data.Providers.DbPoint(System.Data.SqlClient.SqlClientFactory.Instance, connStr, \"myTable\", \"OidColumn\", \"X\", \"Y\"); Constructors | Improve this Doc View Source DbPoint(DbProviderFactory, String, String, String, String, String) Initializes a new instance of the DbPoint provider Declaration public DbPoint(DbProviderFactory providerFactory, string connectionString, string tableName, string oidColumnName, string xColumn, string yColumn) Parameters Type Name Description DbProviderFactory providerFactory The ADO.NET database provider factory String connectionString The connection string String tableName The name of the table String oidColumnName The name of the object id column String xColumn The name of the x-ordinates column String yColumn The name of the y-ordinates column Properties | Improve this Doc View Source ConnectionString Gets or sets a value indicating the connection string Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source DefinitionQuery Definition query used for limiting the data set Declaration public string DefinitionQuery { get; set; } Property Value Type Description String | Improve this Doc View Source ObjectIdColumn Name of column that contains the Object ID Declaration public string ObjectIdColumn { get; set; } Property Value Type Description String | Improve this Doc View Source Table Data table name Declaration public string Table { get; set; } Property Value Type Description String | Improve this Doc View Source XColumn Name of column that contains X coordinate Declaration public string XColumn { get; set; } Property Value Type Description String | Improve this Doc View Source YColumn Name of column that contains Y coordinate Declaration public string YColumn { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns all features with the view box Declaration public override void ExecuteIntersectionQuery(Envelope bbox, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox view box FeatureDataSet ds FeatureDataSet to fill data into Overrides BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) | Improve this Doc View Source GetExtents() Function to return the GeoAPI.Geometries.Envelope of dataset Declaration public override Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The extent of the dataset Overrides BaseProvider.GetExtents() | Improve this Doc View Source GetFeature(UInt32) Returns a datarow based on a RowID Declaration public override FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId Returns Type Description FeatureDataRow datarow Overrides BaseProvider.GetFeature(UInt32) | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public override int GetFeatureCount() Returns Type Description Int32 Total number of features Overrides BaseProvider.GetFeatureCount() | Improve this Doc View Source GetGeometriesInView(Envelope) Returns geometries within the specified bounding box Declaration public override Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Overrides BaseProvider.GetGeometriesInView(Envelope) | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public override IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry Overrides BaseProvider.GetGeometryByID(UInt32) | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public override Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > Overrides BaseProvider.GetObjectIDsInView(Envelope) Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.DbTwoPointLine.html": {
    "href": "api/SharpMap.Data.Providers.DbTwoPointLine.html",
    "title": "Class DbTwoPointLine | SharpMap",
    "keywords": "Class DbTwoPointLine The DbTwoPointLine provider is used for rendering line data from an ADO.NET compatible data source. Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider DbTwoPointLine Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members PreparedGeometryProvider.PreparedGeometry PreparedGeometryProvider.ReleaseManagedResources() PreparedGeometryProvider.OnBeginExecuteIntersectionQuery(IGeometry) PreparedGeometryProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) PreparedGeometryProvider.OnEndExecuteIntersectionQuery() BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class DbTwoPointLine : PreparedGeometryProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The data source will need to have two double-type columns, xColumn and yColumn that contains the coordinates of the point, and an integer-type column containing a unique identifier for each row. To get good performance, make sure you have applied indexes on ID, xColumn and yColumns in your data source table. Constructors | Improve this Doc View Source DbTwoPointLine(DbProviderFactory, String, String, String, String, String, String, String) Initializes a new instance of the DbTwoPointLine provider Declaration public DbTwoPointLine(DbProviderFactory provider, string connectionString, string tableName, string oidColumnName, string xColumnBegin, string yColumnBegin, string xColumnEnd, string yColumnEnd) Parameters Type Name Description DbProviderFactory provider The ADO.NET database provider factory String connectionString The connection string String tableName The name of the table String oidColumnName The name of the object id column String xColumnBegin The name of the x-ordinates column of the beginning of the line String yColumnBegin The name of the y-ordinates column of the beginning of the line String xColumnEnd The name of the x-ordinates column of the end of the line String yColumnEnd The name of the y-ordinates column of the end of the line Properties | Improve this Doc View Source ConnectionString Gets or sets a value indicating the connection string Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source DefinitionQuery Definition query used for limiting data set Declaration public string DefinitionQuery { get; set; } Property Value Type Description String | Improve this Doc View Source EntityDecorator Gets or sets an entity decorator. Declaration public string EntityDecorator { get; set; } Property Value Type Description String Remarks For Access this would e.g. be \"[{0}]\", for SQLite, Postgres or SqlServer \"&quot;{0}&quot;\" | Improve this Doc View Source ObjectIdColumn Name of column that contains the Object ID Declaration public string ObjectIdColumn { get; set; } Property Value Type Description String | Improve this Doc View Source Table Data table name Declaration public string Table { get; set; } Property Value Type Description String | Improve this Doc View Source XColumnBegin Name of column that contains X coordinate start Declaration public string XColumnBegin { get; set; } Property Value Type Description String | Improve this Doc View Source XColumnEnd Name of column that contains X coordinate start Declaration public string XColumnEnd { get; set; } Property Value Type Description String | Improve this Doc View Source YColumnBegin Name of column that contains Y coordinate start Declaration public string YColumnBegin { get; set; } Property Value Type Description String | Improve this Doc View Source YColumnEnd Name of column that contains Y coordinate start Declaration public string YColumnEnd { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns all features with the view box Declaration public override void ExecuteIntersectionQuery(Envelope bbox, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox view box FeatureDataSet ds FeatureDataSet to fill data into Overrides BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) | Improve this Doc View Source GetExtents() Function to return the GeoAPI.Geometries.Envelope of dataset Declaration public override Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The extent of the dataset Overrides BaseProvider.GetExtents() | Improve this Doc View Source GetFeature(UInt32) Returns a datarow based on a RowID Declaration public override FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId Returns Type Description FeatureDataRow datarow Overrides BaseProvider.GetFeature(UInt32) | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public override int GetFeatureCount() Returns Type Description Int32 Total number of features Overrides BaseProvider.GetFeatureCount() | Improve this Doc View Source GetGeometriesInView(Envelope) Returns geometries within the specified bounding box Declaration public override Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Overrides BaseProvider.GetGeometriesInView(Envelope) | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public override IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry Overrides BaseProvider.GetGeometryByID(UInt32) | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public override Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > Overrides BaseProvider.GetObjectIDsInView(Envelope) Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.FilterProvider.FilterMethod.html": {
    "href": "api/SharpMap.Data.Providers.FilterProvider.FilterMethod.html",
    "title": "Delegate FilterProvider.FilterMethod | SharpMap",
    "keywords": "Delegate FilterProvider.FilterMethod Filter Delegate Method Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public delegate bool FilterMethod(FeatureDataRow dr); Parameters Type Name Description FeatureDataRow dr FeatureDataRow to test on Returns Type Description Boolean true if this feature should be included, false if it should be filtered Remarks The FilterMethod delegate is used for applying a method that filters data from the dataset. The method should return 'true' if the feature should be included and false if not. See the FilterDelegate property for more info See Also FilterDelegate"
  },
  "api/SharpMap.Data.Providers.FilterProvider.html": {
    "href": "api/SharpMap.Data.Providers.FilterProvider.html",
    "title": "Class FilterProvider | SharpMap",
    "keywords": "Class FilterProvider Abstract class for providers which support the FilterMethod Delegate Inheritance Object FilterProvider GeometryFeatureProvider ShapeFile Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public abstract class FilterProvider Properties | Improve this Doc View Source FilterDelegate Filter Delegate Method for limiting the datasource Declaration public FilterProvider.FilterMethod FilterDelegate { get; set; } Property Value Type Description FilterProvider.FilterMethod Remarks Using an anonymous method for filtering all features where the NAME column starts with S: myShapeDataSource.FilterDelegate = new SharpMap.Data.Providers.ShapeFile.FilterMethod(delegate(SharpMap.Data.FeatureDataRow row) { return (!row[\"NAME\"].ToString().StartsWith(\"S\")); }); Declaring a delegate method for filtering (multi)polygon-features whose area is larger than 5. myShapeDataSource.FilterDelegate = CountryFilter; [...] public static bool CountryFilter(SharpMap.Data.FeatureDataRow row) { if(row.Geometry.GetType()==typeof(GeoAPI.Geometries.IPolygon)) return ((row.Geometry as GeoAPI.Geometries.IPolygon).Area>5); if (row.Geometry.GetType() == typeof(GeoAPI.Geometries.IMultiPolygon)) return ((row.Geometry as GeoAPI.Geometries.IMultiPolygon).Area > 5); else return true; } See Also FilterProvider.FilterMethod"
  },
  "api/SharpMap.Data.Providers.GeometryFeatureProvider.html": {
    "href": "api/SharpMap.Data.Providers.GeometryFeatureProvider.html",
    "title": "Class GeometryFeatureProvider | SharpMap",
    "keywords": "Class GeometryFeatureProvider Datasource for storing a limited set of geometries. Inheritance Object FilterProvider GeometryFeatureProvider Implements IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members FilterProvider.FilterDelegate Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public class GeometryFeatureProvider : FilterProvider, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The GeometryProvider doesn’t utilize performance optimizations of spatial indexing, and thus is primarily meant for rendering a limited set of Geometries. A common use of the GeometryProvider is for highlighting a set of selected features. The following example gets data within a BoundingBox of another datasource and adds it to the map. List<Geometry> geometries = myMap.Layers[0].DataSource.GetGeometriesInView(myBox); VectorLayer laySelected = new VectorLayer(\"Selected Features\"); laySelected.DataSource = new GeometryFeatureProvider(geometries); laySelected.Style.Outline = new Pen(Color.Magenta, 3f); laySelected.Style.EnableOutline = true; myMap.Layers.Add(laySelected); Adding points of interest to the map. This is useful for vehicle tracking etc. GeoAPI.Geometries.IGeometryFactory gf = new NetTopologySuite.Geometries.GeometryFactory(); List<GeoAPI.Geometries.IGeometry> geometries = new List<GeoAPI.Geometries.IGeometry>(); //Add two points geometries.Add(gf.CreatePoint(23.345,64.325)); geometries.Add(gf.CreatePoint(23.879,64.194)); SharpMap.Layers.VectorLayer layerVehicles = new SharpMap.Layers.VectorLayer(\"Vehicles\"); layerVehicles.DataSource = new SharpMap.Data.Providers.GeometryFeatureProvider(geometries); layerVehicles.Style.Symbol = Bitmap.FromFile(@\"C:\\data\\car.gif\"); myMap.Layers.Add(layerVehicles); Constructors | Improve this Doc View Source GeometryFeatureProvider(IGeometry) Initializes a new instance of the GeometryProvider Declaration public GeometryFeatureProvider(IGeometry geometry) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to be in this datasource | Improve this Doc View Source GeometryFeatureProvider(FeatureDataTable) Initializes a new instance of the GeometryProvider Declaration public GeometryFeatureProvider(FeatureDataTable features) Parameters Type Name Description FeatureDataTable features Features to be included in this datasource | Improve this Doc View Source GeometryFeatureProvider(IEnumerable<IGeometry>) Initializes a new instance of the GeometryProvider Declaration public GeometryFeatureProvider(IEnumerable<IGeometry> geometries) Parameters Type Name Description IEnumerable < GeoAPI.Geometries.IGeometry > geometries Set of geometries that this datasource should contain Properties | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration public virtual string ConnectionID { get; } Property Value Type Description String Remarks The ConnectionID is meant for Connection Pooling which doesn't apply to this datasource. Instead String.Empty is returned. | Improve this Doc View Source Features Access to underlying FeatureDataTable Declaration public FeatureDataTable Features { get; } Property Value Type Description FeatureDataTable | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public int SRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Close() Closes the datasource Declaration public void Close() | Improve this Doc View Source Dispose() Disposes the object Declaration public void Dispose() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Add datatable to dataset and populate with interesecting features Declaration public void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Add datatable to dataset and populate with intersecting features (perform bounding box intersect followed by geom intersect) Declaration public void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() Boundingbox of dataset Declaration public Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope boundingbox | Improve this Doc View Source GetFeature(UInt32) Gets a specific feature from the data source by its rowId Declaration public FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId The row index or OID (if primary key enabled) of the feature Returns Type Description FeatureDataRow A feature data row | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public int GetFeatureCount() Returns Type Description Int32 number of features | Improve this Doc View Source GetGeometriesInView(Envelope) Returns features within the specified bounding box Declaration public Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose boundingbox intersects 'bbox'. Declaration public Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > | Improve this Doc View Source Open() Opens the datasource Declaration public void Open() Implements IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.GeometryProvider.html": {
    "href": "api/SharpMap.Data.Providers.GeometryProvider.html",
    "title": "Class GeometryProvider | SharpMap",
    "keywords": "Class GeometryProvider Datasource for storing a limited set of geometries. Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider GeometryProvider Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members PreparedGeometryProvider.PreparedGeometry PreparedGeometryProvider.OnBeginExecuteIntersectionQuery(IGeometry) PreparedGeometryProvider.OnEndExecuteIntersectionQuery() BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class GeometryProvider : PreparedGeometryProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The GeometryProvider doesn’t utilize performance optimizations of spatial indexing, and thus is primarily meant for rendering a limited set of Geometries. A common use of the GeometryProvider is for highlighting a set of selected features. The following example gets data within a BoundingBox of another datasource and adds it to the map. List<Geometry> geometries = myMap.Layers[0].DataSource.GetGeometriesInView(myBox); VectorLayer laySelected = new VectorLayer(\"Selected Features\"); laySelected.DataSource = new GeometryProvider(geometries); laySelected.Style.Outline = new Pen(Color.Magenta, 3f); laySelected.Style.EnableOutline = true; myMap.Layers.Add(laySelected); Adding points of interest to the map. This is useful for vehicle tracking etc. GeoAPI.Geometries.IGeometryFactory gf = new NetTopologySuite.Geometries.GeometryFactory(); List<GeoAPI.Geometries.IGeometry> geometries = new List<GeoAPI.Geometries.IGeometry>(); //Add two points geometries.Add(new gf.CreatePoint(23.345,64.325)); geometries.Add(new gf.CreatePoint(23.879,64.194)); SharpMap.Layers.VectorLayer layerVehicles = new SharpMap.Layers.VectorLayer(\"Vehicles\"); layerVehicles.DataSource = new SharpMap.Data.Providers.GeometryProvider(geometries); layerVehicles.Style.Symbol = Bitmap.FromFile(@\"C:\\data\\car.gif\"); myMap.Layers.Add(layerVehicles); Constructors | Improve this Doc View Source GeometryProvider(IGeometry) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(IGeometry geometry) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to be in this datasource | Improve this Doc View Source GeometryProvider(FeatureDataRow) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(FeatureDataRow feature) Parameters Type Name Description FeatureDataRow feature Feature to be in this datasource | Improve this Doc View Source GeometryProvider(FeatureDataTable) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(FeatureDataTable features) Parameters Type Name Description FeatureDataTable features Features to be included in this datasource | Improve this Doc View Source GeometryProvider(Byte[]) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(byte[] wellKnownBinaryGeometry) Parameters Type Name Description Byte [] wellKnownBinaryGeometry GeoAPI.Geometries.IGeometry as Well-known Binary to be included in this datasource | Improve this Doc View Source GeometryProvider(IEnumerable<IGeometry>) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(IEnumerable<IGeometry> geometries) Parameters Type Name Description IEnumerable < GeoAPI.Geometries.IGeometry > geometries Set of geometries that this datasource should contain | Improve this Doc View Source GeometryProvider(String) Initializes a new instance of the GeometryProvider Declaration public GeometryProvider(string wellKnownTextGeometry) Parameters Type Name Description String wellKnownTextGeometry GeoAPI.Geometries.IGeometry as Well-known Text to be included in this datasource Properties | Improve this Doc View Source Geometries Gets or sets the geometries this datasource contains Declaration public IList<IGeometry> Geometries { get; set; } Property Value Type Description IList < GeoAPI.Geometries.IGeometry > Methods | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Throws an NotSupportedException. Attribute data is not supported by this datasource Declaration public override void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box FeatureDataSet ds FeatureDataSet to fill data into Overrides BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) | Improve this Doc View Source GetExtents() Boundingbox of dataset Declaration public override Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope boundingbox Overrides BaseProvider.GetExtents() | Improve this Doc View Source GetFeature(UInt32) Throws an NotSupportedException. Attribute data is not supported by this datasource Declaration public override FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId Returns Type Description FeatureDataRow Overrides BaseProvider.GetFeature(UInt32) | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public override int GetFeatureCount() Returns Type Description Int32 number of features Overrides BaseProvider.GetFeatureCount() | Improve this Doc View Source GetGeometriesInView(Envelope) Returns features within the specified bounding box Declaration public override Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Overrides BaseProvider.GetGeometriesInView(Envelope) | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public override IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry Overrides BaseProvider.GetGeometryByID(UInt32) | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose boundingbox intersects 'bbox'. Declaration public override Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > Overrides BaseProvider.GetObjectIDsInView(Envelope) | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Throws an NotSupportedException. Attribute data is not supported by this datasource Declaration protected override void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom FeatureDataSet ds FeatureDataSet to fill data into Overrides PreparedGeometryProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) | Improve this Doc View Source ReleaseManagedResources() Disposes the object Declaration protected override void ReleaseManagedResources() Overrides PreparedGeometryProvider.ReleaseManagedResources() Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.html": {
    "href": "api/SharpMap.Data.Providers.html",
    "title": "Namespace SharpMap.Data.Providers | SharpMap",
    "keywords": "Namespace SharpMap.Data.Providers Classes BaseProvider Abstract base provider that handles geometry factory based on SRID BaseProvider<TOid> Abstract base provider that handles geometry factory based on SRID DbaseReader Straight forward Dbase file reader DbPoint The DbPoint provider is used for rendering point data from an ADO.NET compatible data source. DbTwoPointLine The DbTwoPointLine provider is used for rendering line data from an ADO.NET compatible data source. FilterProvider Abstract class for providers which support the FilterMethod Delegate GeometryFeatureProvider Datasource for storing a limited set of geometries. GeometryProvider Datasource for storing a limited set of geometries. MsSql Microsoft SQL data provider MsSqlSpatial Microsoft SQL Server 2005 / MsSqlSpatial dataprovider OleDbPoint The OleDbPoint provider is used for rendering point data from an OleDb compatible data source. PreparedGeometryProvider Abstract base provider that provides GeoAPI.Geometries.Prepared.IPreparedGeometry for faster accurate topology evaluation ShapeFile Shapefile dataprovider ShapeFileProviderConfiguration Shapefile provider configuration class SharpMapFeatureColumn Feature column class SharpMapFeatureColumns Collection of SharpMapFeatureColumn s used to create the SQL statement SpatialDbProvider Abstract provider for spatially enabled databases SpatialDbUtility Database entity decorator object SqlServer2008 SQL Server 2008 data provider SqlServer2008Configuration Configuration class for SqlServer 2008 providers WFS WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Interfaces IBaseProvider Base interface for providers IGuidProvider Interface for data provider implementations with a Guid as unique identifier IProvider Interface for data providers that have an uint key IProvider<TOid> Interface for data providers IProviderConfiguration Interface for all classes that create a provider Enums ShapeFile.SpatialIndexCreation Options to create the QuadTree spatial index ShapeType Shapefile geometry type. SqlServer2008ExtentsMode Method used to determine extents of all features SqlServerSpatialObjectType Possible spatial object types on SqlServer WFS.WFSVersionEnum This enumeration consists of expressions denoting WFS versions. Delegates FilterProvider.FilterMethod Filter Delegate Method"
  },
  "api/SharpMap.Data.Providers.IBaseProvider.html": {
    "href": "api/SharpMap.Data.Providers.IBaseProvider.html",
    "title": "Interface IBaseProvider | SharpMap",
    "keywords": "Interface IBaseProvider Base interface for providers Inherited Members IDisposable.Dispose() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public interface IBaseProvider : IDisposable Properties | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration string ConnectionID { get; } Property Value Type Description String Remarks The ConnectionID should be unique to the datasource (for instance the filename or the connectionstring), and is meant to be used for connection pooling. If connection pooling doesn't apply to this datasource, the ConnectionID should return String.Empty | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration int SRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Close() Closes the datasource Declaration void Close() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() GeoAPI.Geometries.Envelope of dataset Declaration Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The 2d extent of the layer | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration int GetFeatureCount() Returns Type Description Int32 number of features | Improve this Doc View Source GetGeometriesInView(Envelope) Gets the features within the specified GeoAPI.Geometries.Envelope Declaration Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Features within the specified GeoAPI.Geometries.Envelope | Improve this Doc View Source Open() Opens the datasource Declaration void Open()"
  },
  "api/SharpMap.Data.Providers.IGuidProvider.html": {
    "href": "api/SharpMap.Data.Providers.IGuidProvider.html",
    "title": "Interface IGuidProvider | SharpMap",
    "keywords": "Interface IGuidProvider Interface for data provider implementations with a Guid as unique identifier Inherited Members IProvider<Guid>.GetObjectIDsInView(Envelope) IProvider<Guid>.GetGeometryByID(Guid) IProvider<Guid>.GetFeature(Guid) IBaseProvider.ConnectionID IBaseProvider.IsOpen IBaseProvider.SRID IBaseProvider.GetGeometriesInView(Envelope) IBaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) IBaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) IBaseProvider.GetFeatureCount() IBaseProvider.GetExtents() IBaseProvider.Open() IBaseProvider.Close() IDisposable.Dispose() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public interface IGuidProvider : IProvider<Guid>, IBaseProvider, IDisposable"
  },
  "api/SharpMap.Data.Providers.IProvider.html": {
    "href": "api/SharpMap.Data.Providers.IProvider.html",
    "title": "Interface IProvider | SharpMap",
    "keywords": "Interface IProvider Interface for data providers that have an uint key Inherited Members IProvider<UInt32>.GetObjectIDsInView(Envelope) IProvider<UInt32>.GetGeometryByID(UInt32) IProvider<UInt32>.GetFeature(UInt32) IBaseProvider.ConnectionID IBaseProvider.IsOpen IBaseProvider.SRID IBaseProvider.GetGeometriesInView(Envelope) IBaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) IBaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) IBaseProvider.GetFeatureCount() IBaseProvider.GetExtents() IBaseProvider.Open() IBaseProvider.Close() IDisposable.Dispose() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public interface IProvider : IProvider<uint>, IBaseProvider, IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.IProvider-1.html": {
    "href": "api/SharpMap.Data.Providers.IProvider-1.html",
    "title": "Interface IProvider<TOid> | SharpMap",
    "keywords": "Interface IProvider<TOid> Interface for data providers Inherited Members IBaseProvider.ConnectionID IBaseProvider.IsOpen IBaseProvider.SRID IBaseProvider.GetGeometriesInView(Envelope) IBaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) IBaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) IBaseProvider.GetFeatureCount() IBaseProvider.GetExtents() IBaseProvider.Open() IBaseProvider.Close() IDisposable.Dispose() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public interface IProvider<TOid> : IBaseProvider, IDisposable where TOid : IComparable<TOid> Type Parameters Name Description TOid Methods | Improve this Doc View Source GetFeature(TOid) Returns a FeatureDataRow based on a RowID Declaration FeatureDataRow GetFeature(TOid rowId) Parameters Type Name Description TOid rowId The id of the row. Returns Type Description FeatureDataRow datarow | Improve this Doc View Source GetGeometryByID(TOid) Returns the geometry corresponding to the Object ID Declaration IGeometry GetGeometryByID(TOid oid) Parameters Type Name Description TOid oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose GeoAPI.Geometries.Envelope intersects 'bbox'. Declaration Collection<TOid> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Box that objects should intersect Returns Type Description Collection <TOid> Remarks This method is usually much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their GeoAPI.Geometries.Envelope , and using the Spatial Index"
  },
  "api/SharpMap.Data.Providers.IProviderConfiguration.html": {
    "href": "api/SharpMap.Data.Providers.IProviderConfiguration.html",
    "title": "Interface IProviderConfiguration | SharpMap",
    "keywords": "Interface IProviderConfiguration Interface for all classes that create a provider Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public interface IProviderConfiguration Methods | Improve this Doc View Source Create() Create the provider provider Declaration IProvider Create() Returns Type Description IProvider The created provider"
  },
  "api/SharpMap.Data.Providers.MsSql.html": {
    "href": "api/SharpMap.Data.Providers.MsSql.html",
    "title": "Class MsSql | SharpMap",
    "keywords": "Class MsSql Microsoft SQL data provider Inheritance Object MsSql Implements IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] [Obsolete(\"Use MsSqlSpatial provider instead\")] public class MsSql : IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The SQL data table MUST contain five data columns: A binary or image column (a Geometry Column) for storing WKB formatted geometries, and four real values holding the boundingbox of the geometry. These must be named: Envelope_MinX, Envelope_MinY, Envelope_MaxX and Envelope_MaxY. Any extra columns will be returns as feature data. For creating a valid MS SQL datatable for SharpMap, see CreateDataTable(IProvider, String, String) for creating and uploading a datasource to MS SQL Server. Adding a datasource to a layer: SharpMap.Layers.VectorLayer myLayer = new SharpMap.Layers.VectorLayer(\"My layer\"); string ConnStr = @\"Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|GeoDatabase.mdf;Integrated Security=True;User Instance=True\"; myLayer.DataSource = new SharpMap.Data.Providers.MsSql(ConnStr, \"myTable\"); Constructors | Improve this Doc View Source MsSql(String, String, String, String) Initializes a new connection to MS Sql Server Declaration public MsSql(string ConnectionStr, string tablename, string geometryColumnName, string OID_ColumnName) Parameters Type Name Description String ConnectionStr Connectionstring String tablename Name of data table String geometryColumnName Name of geometry column String OID_ColumnName Name of column with unique identifier Properties | Improve this Doc View Source Columns Gets a collection of columns in the dataset Declaration public DataColumnCollection Columns { get; } Property Value Type Description DataColumnCollection | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration public string ConnectionID { get; } Property Value Type Description String | Improve this Doc View Source ConnectionString Connectionstring Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source DefinitionQuery Definition query used for limiting dataset Declaration public string DefinitionQuery { get; set; } Property Value Type Description String | Improve this Doc View Source Factory Gets or sets the geometry factory used to create geometries Declaration public IGeometryFactory Factory { get; set; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source GeometryColumn Name of geometry column Declaration public string GeometryColumn { get; set; } Property Value Type Description String | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source ObjectIdColumn Name of column that contains the Object ID Declaration public string ObjectIdColumn { get; set; } Property Value Type Description String | Improve this Doc View Source SRID Spacial Reference ID Declaration public int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Table Data table name Declaration public string Table { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Close() Closes the datasource Declaration public void Close() | Improve this Doc View Source CreateDataTable(IProvider, String, String) Creates a new table in a Microsoft SQL Server database and copies rows from an existing datasource. Declaration public static int CreateDataTable(IProvider datasource, string tablename, string connstr) Parameters Type Name Description IProvider datasource Datasource to upload String tablename Name of table to create (existing table will be overwritten!) String connstr Connection string to database Returns Type Description Int32 Number or rows inserted, -1 if failed and 0 if table created but no rows inserted. Remarks The datatable created will contain six extra columns besides the attribute data: \"OID\" (Object ID row), \"WKB_Geometry\" (Geometry stored as WKB), and Envelope_MinX, Envelope_MinY, Envelope_MaxX, Envelope_MaxY for geometry bounding box. Upload a ShapeFile to a database: public void CreateDatabase(string shapeFile) { if (!System.IO.File.Exists(shapeFile)) { MessageBox.Show(\"File not found\"); return; } ShapeFile shp = new ShapeFile(shapeFile, false); //Create tablename from filename string tablename = shapeFile.Substring(shapeFile.LastIndexOf('\\\\') + 1, shapeFile.LastIndexOf('.') - shapeFile.LastIndexOf('\\\\') - 1); //Create connectionstring string connstr = @\"Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|GeoDatabase.mdf;Integrated Security=True;User Instance=True\"; int count = SharpMap.Data.Providers.MsSql.CreateDataTable(shp, tablename, connstr); MessageBox.Show(\"Uploaded \" + count.ToString() + \" features to datatable '\" + tablename + \"'\"); } | Improve this Doc View Source Dispose() Disposes the object Declaration public void Dispose() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns all features with the view box Declaration public void ExecuteIntersectionQuery(Envelope bbox, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox view box FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the features that intersects with 'geom' [NOT IMPLEMENTED] Declaration public void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source Finalize() Finalizer Declaration protected void Finalize() | Improve this Doc View Source GetExtents() Boundingbox of dataset Declaration public Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope boundingbox | Improve this Doc View Source GetFeature(UInt32) Returns a datarow based on a RowID Declaration public FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId Returns Type Description FeatureDataRow datarow | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public int GetFeatureCount() Returns Type Description Int32 number of features | Improve this Doc View Source GetGeometriesInView(Envelope) Returns geometries within the specified bounding box Declaration public Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > | Improve this Doc View Source Open() Opens the datasource Declaration public void Open() Implements IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.MsSqlSpatial.html": {
    "href": "api/SharpMap.Data.Providers.MsSqlSpatial.html",
    "title": "Class MsSqlSpatial | SharpMap",
    "keywords": "Class MsSqlSpatial Microsoft SQL Server 2005 / MsSqlSpatial dataprovider Inheritance Object DisposableObject BaseProvider SpatialDbProvider MsSqlSpatial Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members SpatialDbProvider.DbUtility SpatialDbProvider.From SpatialDbProvider.SchemaChanged SpatialDbProvider.OnSchemaChanged(EventArgs) SpatialDbProvider.TableChanged SpatialDbProvider.OnTableChanged(EventArgs) SpatialDbProvider.OidColumnChanged SpatialDbProvider.OnOidColumnChanged(EventArgs) SpatialDbProvider.GeometryColumnChanged SpatialDbProvider.OnGeometryColumnChanged(EventArgs) SpatialDbProvider.DefinitionQueryChanged SpatialDbProvider.OnDefinitionQueryChanged(EventArgs) SpatialDbProvider.FeatureColumnsChanged SpatialDbProvider.TargetSridChanged SpatialDbProvider.OnTargetSridChanged(EventArgs) SpatialDbProvider.AreaOfInterestChanged SpatialDbProvider.OnAreaOfInterestChanged(EventArgs) SpatialDbProvider.ReleaseManagedResources() SpatialDbProvider.Initialize() SpatialDbProvider.InitializeInternal() SpatialDbProvider.ConnectionString SpatialDbProvider.Schema SpatialDbProvider.Table SpatialDbProvider.ObjectIdColumn SpatialDbProvider.GeometryColumn SpatialDbProvider.FeatureColumns SpatialDbProvider.DefinitionQuery SpatialDbProvider.OrderQuery SpatialDbProvider.GeometryExpression SpatialDbProvider.AreaOfInterest SpatialDbProvider.TargetSRID SpatialDbProvider.NeedsTransform SpatialDbProvider.GetExtents() SpatialDbProvider.GetFeatureCount() SpatialDbProvider.GetFeatureCountInternal() SpatialDbProvider.GetFeature(UInt32) SpatialDbProvider.Name SpatialDbProvider.CreateNewTable() SpatialDbProvider.CreateNewTable(Boolean) SpatialDbProvider.GetFeatureInternal(UInt32) SpatialDbProvider.GetGeometryByID(UInt32) SpatialDbProvider.GetGeometryByIDInternal(UInt32) SpatialDbProvider.GetGeometriesInView(Envelope) SpatialDbProvider.GetGeometriesInViewInternal(Envelope) SpatialDbProvider.GetObjectIDsInView(Envelope) SpatialDbProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) SpatialDbProvider.ExecuteIntersectionQueryInternal(Object, FeatureDataSet) SpatialDbProvider.GetFrom(Envelope, DbCommand) SpatialDbProvider.GetFrom(IGeometry, DbCommand) SpatialDbProvider.OnBeginExecuteIntersectionQuery(IGeometry) SpatialDbProvider.ExecuteIntersectionQueryInternal(Envelope, FeatureDataSet) SpatialDbProvider.OnBeginExecuteIntersectionQueryInternal(IGeometry) SpatialDbProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) SpatialDbProvider.OnSridChanged(EventArgs) BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.OnEndExecuteIntersectionQuery() BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class MsSqlSpatial : SpatialDbProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Examples Adding a datasource to a layer: SharpMap.Layers.VectorLayer myLayer = new SharpMap.Layers.VectorLayer(\"My layer\"); string ConnStr = @\"Data Source=localhost\\sqlexpress;Initial Catalog=myGisDb;Integrated Security=SSPI;\"; myLayer.DataSource = new SharpMap.Data.Providers.MsSqlSpatial(ConnStr, \"myTable\", \"myId\"); Constructors | Improve this Doc View Source MsSqlSpatial(String, String, String) Initializes a new connection to MsSqlSpatial Declaration public MsSqlSpatial(string connectionString, string tableName, string identifierColumnName) Parameters Type Name Description String connectionString Connectionstring String tableName Name of data table String identifierColumnName Name of column with unique identifier | Improve this Doc View Source MsSqlSpatial(String, String, String, String) Initializes a new connection to MsSqlSpatial Declaration public MsSqlSpatial(string connectionString, string tableName, string geometryColumnName, string identifierColumnName) Parameters Type Name Description String connectionString Connectionstring String tableName Name of data table String geometryColumnName Name of geometry column String identifierColumnName Name of column with unique identifier Properties | Improve this Doc View Source Columns Gets a collection of columns in the dataset Declaration public DataColumnCollection Columns { get; } Property Value Type Description DataColumnCollection Methods | Improve this Doc View Source CreateDataAdapter() Convenience function to create a data adapter. Declaration protected override DbDataAdapter CreateDataAdapter() Returns Type Description DbDataAdapter An open connection to the database backend. Overrides SpatialDbProvider.CreateDataAdapter() | Improve this Doc View Source CreateOpenDbConnection() Convenience function to create and open a connection to the database backend. Declaration protected override DbConnection CreateOpenDbConnection() Returns Type Description DbConnection An open connection to the database backend. Overrides SpatialDbProvider.CreateOpenDbConnection() | Improve this Doc View Source CreateSpatialDbUtility() Creates a new SpatialDbUtility to handle database backends specifics Declaration protected static SpatialDbUtility CreateSpatialDbUtility() Returns Type Description SpatialDbUtility A SpatialDbUtility | Improve this Doc View Source Finalize() Finalizer Declaration protected void Finalize() | Improve this Doc View Source GetExtentsInternal() Boundingbox of dataset Declaration protected override Envelope GetExtentsInternal() Returns Type Description GeoAPI.Geometries.Envelope boundingbox Overrides SpatialDbProvider.GetExtentsInternal() | Improve this Doc View Source GetObjectIDsInViewInternal(Envelope) Gets the object of features that lie within the specified GeoAPI.Geometries.Envelope Declaration protected override Collection<uint> GetObjectIDsInViewInternal(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box Returns Type Description Collection < UInt32 > A collection of object ids Overrides SpatialDbProvider.GetObjectIDsInViewInternal(Envelope) | Improve this Doc View Source GetSpatialWhere(Envelope, DbCommand) Function to generate a spatial where clause for the intersection queries. Declaration protected override string GetSpatialWhere(Envelope bbox, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box DbCommand command The command object, that is supposed to execute the query. Returns Type Description String The spatial component of a SQL where clause Overrides SpatialDbProvider.GetSpatialWhere(Envelope, DbCommand) | Improve this Doc View Source GetSpatialWhere(IGeometry, DbCommand) Function to generate a spatial where clause for the intersection queries. Declaration protected override string GetSpatialWhere(IGeometry bbox, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.IGeometry bbox The geometry DbCommand command The command object, that is supposed to execute the query. Returns Type Description String The spatial component of a SQL where clause Overrides SpatialDbProvider.GetSpatialWhere(IGeometry, DbCommand) Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.OleDbPoint.html": {
    "href": "api/SharpMap.Data.Providers.OleDbPoint.html",
    "title": "Class OleDbPoint | SharpMap",
    "keywords": "Class OleDbPoint The OleDbPoint provider is used for rendering point data from an OleDb compatible data source. Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider DbPoint OleDbPoint Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members DbPoint.Table DbPoint.ObjectIdColumn DbPoint.XColumn DbPoint.YColumn DbPoint.ConnectionString DbPoint.DefinitionQuery DbPoint.GetGeometriesInView(Envelope) DbPoint.GetObjectIDsInView(Envelope) DbPoint.GetGeometryByID(UInt32) DbPoint.ExecuteIntersectionQuery(Envelope, FeatureDataSet) DbPoint.GetFeatureCount() DbPoint.GetFeature(UInt32) DbPoint.GetExtents() PreparedGeometryProvider.PreparedGeometry PreparedGeometryProvider.ReleaseManagedResources() PreparedGeometryProvider.OnBeginExecuteIntersectionQuery(IGeometry) PreparedGeometryProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) PreparedGeometryProvider.OnEndExecuteIntersectionQuery() BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class OleDbPoint : DbPoint, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The data source will need to have two double-type columns, xColumn and yColumn that contains the coordinates of the point, and an integer-type column containing a unique identifier for each row. To get good performance, make sure you have applied indexes on ID, xColumn and yColumns in your data source table. Constructors | Improve this Doc View Source OleDbPoint(String, String, String, String, String) Initializes a new instance of the OleDbPoint provider Declaration public OleDbPoint(string connectionString, string tableName, string oidColumnName, string xColumn, string yColumn) Parameters Type Name Description String connectionString The connection string String tableName The name of the table String oidColumnName The name of the object id column String xColumn The name of the x-ordinates column String yColumn The name of the y-ordinates column Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.PreparedGeometryProvider.html": {
    "href": "api/SharpMap.Data.Providers.PreparedGeometryProvider.html",
    "title": "Class PreparedGeometryProvider | SharpMap",
    "keywords": "Class PreparedGeometryProvider Abstract base provider that provides GeoAPI.Geometries.Prepared.IPreparedGeometry for faster accurate topology evaluation Inheritance Object DisposableObject BaseProvider PreparedGeometryProvider DbPoint DbTwoPointLine GeometryProvider Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.GetGeometriesInView(Envelope) BaseProvider.GetObjectIDsInView(Envelope) BaseProvider.GetGeometryByID(UInt32) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) BaseProvider.GetFeatureCount() BaseProvider.GetFeature(UInt32) BaseProvider.GetExtents() BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public abstract class PreparedGeometryProvider : BaseProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Constructors | Improve this Doc View Source PreparedGeometryProvider() Creates an instance of this class. SRID is set to 0 . Declaration protected PreparedGeometryProvider() | Improve this Doc View Source PreparedGeometryProvider(Int32) Creates an instance of this class. SRID is set to srid . Declaration protected PreparedGeometryProvider(int srid) Parameters Type Name Description Int32 srid The spatial reference id Properties | Improve this Doc View Source PreparedGeometry Gets or sets a value indicating the GeoAPI.Geometries.Prepared.IPreparedGeometry . Declaration protected IPreparedGeometry PreparedGeometry { get; set; } Property Value Type Description GeoAPI.Geometries.Prepared.IPreparedGeometry Methods | Improve this Doc View Source OnBeginExecuteIntersectionQuery(IGeometry) Method to perform preparatory things for executing an intersection query against the data source Declaration protected override void OnBeginExecuteIntersectionQuery(IGeometry geom) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter. Overrides BaseProvider.OnBeginExecuteIntersectionQuery(IGeometry) | Improve this Doc View Source OnEndExecuteIntersectionQuery() Method to do cleanup work after having performed the intersection query against the data source Declaration protected override void OnEndExecuteIntersectionQuery() Overrides BaseProvider.OnEndExecuteIntersectionQuery() | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Method to perform the intersection query against the data source Declaration protected override void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter FeatureDataSet ds The feature data set to store the results in Overrides BaseProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) | Improve this Doc View Source ReleaseManagedResources() Releases all managed resources Declaration protected override void ReleaseManagedResources() Overrides BaseProvider.ReleaseManagedResources() Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.ShapeFile.html": {
    "href": "api/SharpMap.Data.Providers.ShapeFile.html",
    "title": "Class ShapeFile | SharpMap",
    "keywords": "Class ShapeFile Shapefile dataprovider Inheritance Object FilterProvider ShapeFile Implements IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members FilterProvider.FilterDelegate Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public class ShapeFile : FilterProvider, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks The ShapeFile provider is used for accessing ESRI ShapeFiles. The ShapeFile should at least contain the [filename].shp, [filename].idx, and if feature-data is to be used, also [filename].dbf file. The first time the ShapeFile is accessed, SharpMap will automatically create a spatial index of the shp-file, and save it as [filename].shp.sidx. If you change or update the contents of the .shp file, delete the .sidx file to force SharpMap to rebuilt it. In web applications, the index will automatically be cached to memory for faster access, so to reload the index, you will need to restart the web application as well. M values in a shapefile are ignored by SharpMap. Examples Adding a datasource to a layer: SharpMap.Layers.VectorLayer myLayer = new SharpMap.Layers.VectorLayer(\"My layer\"); myLayer.DataSource = new SharpMap.Data.Providers.ShapeFile(@\"C:\\data\\MyShapeData.shp\"); Constructors | Improve this Doc View Source ShapeFile(String) Initializes a ShapeFile DataProvider without a file-based spatial index. Declaration public ShapeFile(string filename) Parameters Type Name Description String filename Path to shape file | Improve this Doc View Source ShapeFile(String, Boolean) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex) Parameters Type Name Description String filename Path to shape file Boolean fileBasedIndex Use file-based spatial index Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. | Improve this Doc View Source ShapeFile(String, Boolean, Boolean) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex, bool useMemoryCache) Parameters Type Name Description String filename Path to shape file Boolean fileBasedIndex Use file-based spatial index Boolean useMemoryCache Use the memory cache. BEWARE in case of large shapefiles Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. | Improve this Doc View Source ShapeFile(String, Boolean, Boolean, Int32) Initializes a ShapeFile DataProvider. Declaration public ShapeFile(string filename, bool fileBasedIndex, bool useMemoryCache, int srid) Parameters Type Name Description String filename Path to shape file Boolean fileBasedIndex Use file-based spatial index Boolean useMemoryCache Use the memory cache. BEWARE in case of large shapefiles Int32 srid The spatial reference id Remarks If FileBasedIndex is true, the spatial index will be read from a local copy. If it doesn't exist, it will be generated and saved to [filename] + '.sidx'. Using a file-based index is especially recommended for ASP.NET applications which will speed up start-up time when the cache has been emptied. Properties | Improve this Doc View Source CheckIfRecordIsDeleted Gets or sets a value indicating that the provider should check if geometry belongs to a deleted record. Declaration public bool CheckIfRecordIsDeleted { get; set; } Property Value Type Description Boolean Remarks This really slows rendering performance down | Improve this Doc View Source ConnectionID Gets the connection ID of the datasource Declaration public string ConnectionID { get; } Property Value Type Description String Remarks The connection ID of a shapefile is its filename | Improve this Doc View Source CoordinateSystem Gets or sets the coordinate system of the ShapeFile. If a shapefile has a corresponding [filename].prj file containing a Well-Known Text description of the coordinate system this will automatically be read. If this is not the case, the coordinate system will default to null. Declaration public ICoordinateSystem CoordinateSystem { get; set; } Property Value Type Description GeoAPI.CoordinateSystems.ICoordinateSystem Exceptions Type Condition ApplicationException An exception is thrown if the coordinate system is read from file. | Improve this Doc View Source DoTrueIntersectionQuery Gets or sets a value indicating that for ExecuteIntersectionQuery(Envelope, FeatureDataSet) the intersection of the geometries and the envelope should be tested. Declaration public bool DoTrueIntersectionQuery { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Encoding Gets or sets the encoding used for parsing strings from the DBase DBF file. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding Remarks The DBase default encoding is UTF8 . | Improve this Doc View Source Factory Gets or sets the geometry factory Declaration protected IGeometryFactory Factory { get; set; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source Filename Gets or sets the filename of the shapefile Declaration public string Filename { get; set; } Property Value Type Description String Remarks If the filename changes, indexes will be rebuilt | Improve this Doc View Source IncludeOid Gets or sets a value indicating whether the object's id should be included in attribute data or not. The default value is false Declaration public bool IncludeOid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source MemoryCacheLimit Gets or sets a value indicating how many features are allowed for memory cache approach Declaration protected static int MemoryCacheLimit { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ShapeType Gets the ShapeType in this shapefile. Declaration public ShapeType ShapeType { get; } Property Value Type Description ShapeType Remarks The property isn't set until the first time the datasource has been opened, and will throw an exception if this property has been called since initialization. All the non-Null shapes in a shapefile are required to be of the same shape type. | Improve this Doc View Source SpatialIndexCreationOption The Spatial index create Declaration [Obsolete(\"Use SpatialIndexFactory\")] public static ShapeFile.SpatialIndexCreation SpatialIndexCreationOption { get; set; } Property Value Type Description ShapeFile.SpatialIndexCreation | Improve this Doc View Source SpatialIndexFactory Gets or sets a value indicating the spatial index factory Declaration public static ISpatialIndexFactory<uint> SpatialIndexFactory { get; set; } Property Value Type Description ISpatialIndexFactory < UInt32 > | Improve this Doc View Source SRID Gets or sets the spatial reference ID (CRS) Declaration public virtual int SRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source Close() Closes the datasource Declaration public void Close() | Improve this Doc View Source Dispose() Disposes the object Declaration public void Dispose() | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns all objects whose boundingbox intersects bbox. Declaration public void ExecuteIntersectionQuery(Envelope bbox, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox FeatureDataSet ds Remarks Please note that this method doesn't guarantee that the geometries returned actually intersect 'bbox', but only that their boundingbox intersects 'bbox'. | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by geom . Declaration public virtual void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to test intersection for FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source Finalize() Finalizes the object Declaration protected void Finalize() | Improve this Doc View Source GetExtents() Returns the extents of the datasource Declaration public Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source GetFeature(UInt32) Gets a FeatureDataRow from the datasource at the specified index Please note well: It is not checked whether Declaration public FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId The object identifier for the record Returns Type Description FeatureDataRow The feature data row | Improve this Doc View Source GetFeature(UInt32, FeatureDataTable) Gets a datarow from the datasource at the specified index belonging to the specified datatable Please note well: It is not checked whether Declaration public FeatureDataRow GetFeature(uint rowId, FeatureDataTable dt) Parameters Type Name Description UInt32 rowId The object identifier for the record FeatureDataTable dt The datatable the feature should belong to. Returns Type Description FeatureDataRow The feature data row | Improve this Doc View Source GetFeatureCount() Returns the total number of features in the datasource (without any filter applied) Declaration public int GetFeatureCount() Returns Type Description Int32 | Improve this Doc View Source GetGeometriesInView(Envelope) Returns geometries whose bounding box intersects 'bbox' Declaration public Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Remarks Please note that this method doesn't guarantee that the geometries returned actually intersect 'bbox', but only that their boundingbox intersects 'bbox'. This method is much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their boundingbox, and using the Spatial Index. | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry The geometry at the Id Remarks FilterDelegate is no longer applied to this ge | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > | Improve this Doc View Source Open() Opens the datasource Declaration public void Open() | Improve this Doc View Source RebuildSpatialIndex() Forces a rebuild of the spatial index. If the instance of the ShapeFile provider uses a file-based index the file is rewritten to disk. Declaration public void RebuildSpatialIndex() Implements IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.ShapeFile.SpatialIndexCreation.html": {
    "href": "api/SharpMap.Data.Providers.ShapeFile.SpatialIndexCreation.html",
    "title": "Enum ShapeFile.SpatialIndexCreation | SharpMap",
    "keywords": "Enum ShapeFile.SpatialIndexCreation Options to create the QuadTree spatial index Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public enum SpatialIndexCreation Fields Name Description Custom A custom implementation for the creation of an ISpatialIndex<TOid> Linear Creates a root node by the bounds of the ShapeFile and adds each node one-by-one- Recursive Loads all the bounding boxes in builds the QuadTree from the list of nodes. This is memory expensive!"
  },
  "api/SharpMap.Data.Providers.ShapeFileProviderConfiguration.html": {
    "href": "api/SharpMap.Data.Providers.ShapeFileProviderConfiguration.html",
    "title": "Class ShapeFileProviderConfiguration | SharpMap",
    "keywords": "Class ShapeFileProviderConfiguration Shapefile provider configuration class Inheritance Object ShapeFileProviderConfiguration Implements IProviderConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class ShapeFileProviderConfiguration : IProviderConfiguration Properties | Improve this Doc View Source Filename Gets or sets the filename of the ShapeFile Declaration public string Filename { get; set; } Property Value Type Description String | Improve this Doc View Source SpatialIndexCreationOption Gets or sets a value indicating how to create Declaration public ShapeFile.SpatialIndexCreation SpatialIndexCreationOption { get; set; } Property Value Type Description ShapeFile.SpatialIndexCreation | Improve this Doc View Source UseFilebasedIndex Gets or sets a value indicating whether a spatial index should be reused Declaration public bool UseFilebasedIndex { get; set; } Property Value Type Description Boolean | Improve this Doc View Source UseMemoryCache Gets or sets a value if the shapefile should be used as a MemoryMappedFile Declaration public bool UseMemoryCache { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Create() Creates a Shapefile provider Declaration public IProvider Create() Returns Type Description IProvider Implements IProviderConfiguration"
  },
  "api/SharpMap.Data.Providers.ShapeType.html": {
    "href": "api/SharpMap.Data.Providers.ShapeType.html",
    "title": "Enum ShapeType | SharpMap",
    "keywords": "Enum ShapeType Shapefile geometry type. Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public enum ShapeType Fields Name Description MultiPatch A MultiPatch consists of a number of surface patches. Each surface patch describes a surface. The surface patches of a MultiPatch are referred to as its parts, and the type of part controls how the order of vertices of an MultiPatch part is interpreted. SharpMap doesn't support this feature type. Multipoint A MultiPoint represents a set of points. SharpMap interprets this as GeoAPI.Geometries.IMultiPoint MultiPointM A MultiPointM represents a set of PointM s. SharpMap interprets this as GeoAPI.Geometries.IMultiPoint MultiPointZ A MultiPointZ represents a set of PointZ s. SharpMap interprets this as GeoAPI.Geometries.IMultiPoint Null Null shape with no geometric data Point A point consists of a pair of double-precision coordinates. SharpMap interprets this as GeoAPI.Geometries.IPoint PointM A PointM consists of a pair of double-precision coordinates in the order X, Y, plus a measure M. SharpMap interprets this as GeoAPI.Geometries.IPoint PointZ A PointZ consists of a triplet of double-precision coordinates plus a measure. SharpMap interprets this as GeoAPI.Geometries.IPoint Polygon A polygon consists of one or more rings. A ring is a connected sequence of four or more points that form a closed, non-self-intersecting loop. A polygon may contain multiple outer rings. The order of vertices or orientation for a ring indicates which side of the ring is the interior of the polygon. The neighborhood to the right of an observer walking along the ring in vertex order is the neighborhood inside the polygon. Vertices of rings defining holes in polygons are in a counterclockwise direction. Vertices for a single, ringed polygon are, therefore, always in clockwise order. The rings of a polygon are referred to as its parts. SharpMap interprets this as either GeoAPI.Geometries.IPolygon or GeoAPI.Geometries.IMultiPolygon PolygonM A PolygonM consists of a number of rings. A ring is a closed, non-self-intersecting loop. SharpMap interprets this as either GeoAPI.Geometries.IPolygon or GeoAPI.Geometries.IMultiPolygon PolygonZ A PolygonZ consists of a number of rings. A ring is a closed, non-self-intersecting loop. A PolygonZ may contain multiple outer rings. The rings of a PolygonZ are referred to as its parts. SharpMap interprets this as either GeoAPI.Geometries.IPolygon or GeoAPI.Geometries.IMultiPolygon PolyLine PolyLine is an ordered set of vertices that consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. SharpMap interprets this as either GeoAPI.Geometries.ILineString or GeoAPI.Geometries.IMultiLineString PolyLineM A shapefile PolyLineM consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. SharpMap interprets this as GeoAPI.Geometries.ILineString or GeoAPI.Geometries.IMultiLineString PolyLineZ A PolyLineZ consists of one or more parts. A part is a connected sequence of two or more points. Parts may or may not be connected to one another. Parts may or may not intersect one another. SharpMap interprets this as GeoAPI.Geometries.ILineString or GeoAPI.Geometries.IMultiLineString"
  },
  "api/SharpMap.Data.Providers.SharpMapFeatureColumn.html": {
    "href": "api/SharpMap.Data.Providers.SharpMapFeatureColumn.html",
    "title": "Class SharpMapFeatureColumn | SharpMap",
    "keywords": "Class SharpMapFeatureColumn Feature column class Inheritance Object SharpMapFeatureColumn Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class SharpMapFeatureColumn Constructors | Improve this Doc View Source SharpMapFeatureColumn() Default constructor, forcing Display to be true by default Declaration public SharpMapFeatureColumn() Properties | Improve this Doc View Source As Gets or sets the name the Column should have in the output If this is null or string.Empty , Column remains unchanged. Declaration public string As { get; set; } Property Value Type Description String | Improve this Doc View Source Column Gets or sets the name of the column to get from the table Declaration public string Column { get; set; } Property Value Type Description String | Improve this Doc View Source Constraint A constraint for the column Declaration public string Constraint { get; set; } Property Value Type Description String Remarks The constraint must be rhs of the column name, since it is added DecorateEntity(String) ( Column ) + Constraint If a Function is applied to Column that is included. | Improve this Doc View Source DbType Gets or sets the type used in database Declaration public DbType DbType { get; set; } Property Value Type Description DbType | Improve this Doc View Source Display Declaration public bool Display { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Function The name of the function to apply to Column Declaration public string Function { get; set; } Property Value Type Description String | Improve this Doc View Source FunctionParameters The additional parameters Declaration public string[] FunctionParameters { get; set; } Property Value Type Description String [] | Improve this Doc View Source GroupBy Gets or sets whether this column should appear in the group by section Declaration public bool GroupBy { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OrderBy Gets or sets the order applied to the Column Declaration public string OrderBy { get; set; } Property Value Type Description String | Improve this Doc View Source Ordinal Gets or sets the ordinal (index) Declaration public int Ordinal { get; set; } Property Value Type Description Int32"
  },
  "api/SharpMap.Data.Providers.SharpMapFeatureColumns.html": {
    "href": "api/SharpMap.Data.Providers.SharpMapFeatureColumns.html",
    "title": "Class SharpMapFeatureColumns | SharpMap",
    "keywords": "Class SharpMapFeatureColumns Collection of SharpMapFeatureColumn s used to create the SQL statement Inheritance Object Collection < SharpMapFeatureColumn > SharpMapFeatureColumns Implements IList < SharpMapFeatureColumn > ICollection < SharpMapFeatureColumn > IReadOnlyList < SharpMapFeatureColumn > IReadOnlyCollection < SharpMapFeatureColumn > IEnumerable < SharpMapFeatureColumn > IList ICollection IEnumerable Inherited Members System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.System.Collections.IList.set_Item(System.Int32, System.Object) Collection<SharpMapFeatureColumn>.Add(SharpMapFeatureColumn) Collection<SharpMapFeatureColumn>.Clear() Collection<SharpMapFeatureColumn>.Contains(SharpMapFeatureColumn) Collection<SharpMapFeatureColumn>.CopyTo(SharpMapFeatureColumn[], Int32) Collection<SharpMapFeatureColumn>.GetEnumerator() Collection<SharpMapFeatureColumn>.IndexOf(SharpMapFeatureColumn) Collection<SharpMapFeatureColumn>.Insert(Int32, SharpMapFeatureColumn) Collection<SharpMapFeatureColumn>.Remove(SharpMapFeatureColumn) Collection<SharpMapFeatureColumn>.RemoveAt(Int32) Collection<SharpMapFeatureColumn>.ICollection.CopyTo(Array, Int32) Collection<SharpMapFeatureColumn>.IEnumerable.GetEnumerator() Collection<SharpMapFeatureColumn>.IList.Add(Object) Collection<SharpMapFeatureColumn>.IList.Contains(Object) Collection<SharpMapFeatureColumn>.IList.IndexOf(Object) Collection<SharpMapFeatureColumn>.IList.Insert(Int32, Object) Collection<SharpMapFeatureColumn>.IList.Remove(Object) Collection<SharpMapFeatureColumn>.Count Collection<SharpMapFeatureColumn>.Item[Int32] Collection<SharpMapFeatureColumn>.Items Collection<SharpMapFeatureColumn>.ICollection<SharpMapFeatureColumn>.IsReadOnly Collection<SharpMapFeatureColumn>.ICollection.IsSynchronized Collection<SharpMapFeatureColumn>.ICollection.SyncRoot Collection<SharpMapFeatureColumn>.IList.IsFixedSize Collection<SharpMapFeatureColumn>.IList.IsReadOnly Collection<SharpMapFeatureColumn>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public class SharpMapFeatureColumns : Collection<SharpMapFeatureColumn>, IList<SharpMapFeatureColumn>, ICollection<SharpMapFeatureColumn>, IReadOnlyList<SharpMapFeatureColumn>, IReadOnlyCollection<SharpMapFeatureColumn>, IEnumerable<SharpMapFeatureColumn>, IList, ICollection, IEnumerable Constructors | Improve this Doc View Source SharpMapFeatureColumns(SpatialDbProvider, SpatialDbUtility) Creates an instance of this class Declaration public SharpMapFeatureColumns(SpatialDbProvider provider, SpatialDbUtility dbUtility) Parameters Type Name Description SpatialDbProvider provider The provider SpatialDbUtility dbUtility The db utility object Methods | Improve this Doc View Source ClearItems() Declaration protected override void ClearItems() Overrides System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.ClearItems() | Improve this Doc View Source GetGeometryColumn() Gets the geometry column Declaration public string GetGeometryColumn() Returns Type Description String The geometry column. | Improve this Doc View Source GetGeometryColumn(Boolean) Gets the geometry column Declaration public string GetGeometryColumn(bool usAs) Parameters Type Name Description Boolean usAs Uses AS Returns Type Description String The geometry column. | Improve this Doc View Source GetGroupByClause() Gets the SQL GROUP BY clause Declaration public string GetGroupByClause() Returns Type Description String The group by clause | Improve this Doc View Source GetOrderByClause() Gets the SQL ORDER BY clause. Declaration public string GetOrderByClause() Returns Type Description String The order by | Improve this Doc View Source GetSelectClause() Gets the main select clause Declaration public string GetSelectClause() Returns Type Description String The plain select clause without any constraints or order clauses | Improve this Doc View Source GetSelectClause(String) Gets the main select clause Declaration public string GetSelectClause(string from) Parameters Type Name Description String from The from clause to use (if it is not schema.table) Returns Type Description String The plain select clause without any constraints or order clauses | Improve this Doc View Source GetSelectColumnClause(DbCommand, SharpMapFeatureColumn) Gets a select clause for querying a column (mainly the geometry column is our focus) Declaration public string GetSelectColumnClause(DbCommand command, SharpMapFeatureColumn column) Parameters Type Name Description DbCommand command The command object SharpMapFeatureColumn column The column Returns Type Description String The sql string to select the column | Improve this Doc View Source GetSelectColumnClause(DbCommand, SharpMapFeatureColumn, String) Gets a select clause for querying a column (mainly the geometry column is our focus) Declaration public string GetSelectColumnClause(DbCommand command, SharpMapFeatureColumn column, string spatialWhere) Parameters Type Name Description DbCommand command The command object SharpMapFeatureColumn column The column String spatialWhere The (optional) spatial constraint Returns Type Description String The sql string to select the column | Improve this Doc View Source GetSelectColumnClause(DbCommand, SharpMapFeatureColumn, UInt32) Gets a select clause for querying a column (mainly the geometry column is our focus) Declaration public string GetSelectColumnClause(DbCommand command, SharpMapFeatureColumn column, uint oid) Parameters Type Name Description DbCommand command The command object SharpMapFeatureColumn column The column UInt32 oid The (optional) object id constraint Returns Type Description String The sql string to select the column | Improve this Doc View Source GetSelectColumnClause(DbCommand, SharpMapFeatureColumn, UInt32, String) Gets a select clause for querying a column (mainly the geometry column is our focus) Declaration public string GetSelectColumnClause(DbCommand command, SharpMapFeatureColumn column, uint oid, string spatialWhere) Parameters Type Name Description DbCommand command The command object SharpMapFeatureColumn column The column UInt32 oid The (optional) object id constraint String spatialWhere The (optional) spatial constraint Returns Type Description String The sql string to select the column | Improve this Doc View Source GetWhereClause() Gets the where clause Declaration public string GetWhereClause() Returns Type Description String | Improve this Doc View Source GetWhereClause(String) Gets the where clause Declaration public string GetWhereClause(string spatialWhere) Parameters Type Name Description String spatialWhere An optional spatial constraint Returns Type Description String The | Improve this Doc View Source InsertItem(Int32, SharpMapFeatureColumn) Declaration protected override void InsertItem(int index, SharpMapFeatureColumn item) Parameters Type Name Description Int32 index SharpMapFeatureColumn item Overrides System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.InsertItem(System.Int32, SharpMap.Data.Providers.SharpMapFeatureColumn) | Improve this Doc View Source RemoveItem(Int32) Declaration protected override void RemoveItem(int index) Parameters Type Name Description Int32 index Overrides System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.RemoveItem(System.Int32) | Improve this Doc View Source SetItem(Int32, SharpMapFeatureColumn) Declaration protected override void SetItem(int index, SharpMapFeatureColumn item) Parameters Type Name Description Int32 index SharpMapFeatureColumn item Overrides System.Collections.ObjectModel.Collection<SharpMap.Data.Providers.SharpMapFeatureColumn>.SetItem(System.Int32, SharpMap.Data.Providers.SharpMapFeatureColumn) Events | Improve this Doc View Source FeatureColumnsChanged Event raised when the Feature column Declaration public event EventHandler FeatureColumnsChanged Event Type Type Description EventHandler Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/SharpMap.Data.Providers.SpatialDbProvider.html": {
    "href": "api/SharpMap.Data.Providers.SpatialDbProvider.html",
    "title": "Class SpatialDbProvider | SharpMap",
    "keywords": "Class SpatialDbProvider Abstract provider for spatially enabled databases Inheritance Object DisposableObject BaseProvider SpatialDbProvider MsSqlSpatial Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.OnEndExecuteIntersectionQuery() BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public abstract class SpatialDbProvider : BaseProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Constructors | Improve this Doc View Source SpatialDbProvider(SpatialDbUtility, String, String) Creates an instance of this class Declaration protected SpatialDbProvider(SpatialDbUtility spatialDbUtility, string connectionString, string table) Parameters Type Name Description SpatialDbUtility spatialDbUtility The spatial db utility class String connectionString The connection string String table The table name | Improve this Doc View Source SpatialDbProvider(SpatialDbUtility, String, String, String) Creates an instance of this class Declaration protected SpatialDbProvider(SpatialDbUtility spatialDbUtility, string connectionString, string schema, string table) Parameters Type Name Description SpatialDbUtility spatialDbUtility The spatial db utility class String connectionString The connection string String schema The name of the schema String table The table name | Improve this Doc View Source SpatialDbProvider(SpatialDbUtility, String, String, String, String, String) Creates an instance of this class Declaration protected SpatialDbProvider(SpatialDbUtility spatialDbUtility, string connectionString, string schema, string table, string oidColumn, string geometryColumn) Parameters Type Name Description SpatialDbUtility spatialDbUtility The spatial db utility class String connectionString The connection string String schema The name of the schema String table The table name String oidColumn The object ID column String geometryColumn The geometry column Properties | Improve this Doc View Source AreaOfInterest Gets or sets the area of interest. Setting this property Declaration public Envelope AreaOfInterest { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ConnectionString Gets the connection string. Declaration public string ConnectionString { get; } Property Value Type Description String | Improve this Doc View Source DbUtility Gets or sets the SpatialDbUtility class. Declaration protected SpatialDbUtility DbUtility { get; set; } Property Value Type Description SpatialDbUtility Remarks This property can only be set once to a non- null value. | Improve this Doc View Source DefinitionQuery Gets or sets the definition query Declaration [Obsolete(\"Define constraints via FeatureColumns\")] public string DefinitionQuery { get; set; } Property Value Type Description String | Improve this Doc View Source FeatureColumns Gets or sets the name oft the geometry column Declaration public SharpMapFeatureColumns FeatureColumns { get; } Property Value Type Description SharpMapFeatureColumns | Improve this Doc View Source From Gets the SQL-FROM statement Declaration protected virtual string From { get; } Property Value Type Description String | Improve this Doc View Source GeometryColumn Gets or sets the name oft the geometry column Declaration public string GeometryColumn { get; set; } Property Value Type Description String | Improve this Doc View Source GeometryExpression Expression template for geometry column evaluation. Declaration public string GeometryExpression { get; set; } Property Value Type Description String Examples You could, for instance, simplify your geometries before they're displayed. Simplification helps to speed the rendering of big geometries. Here's a sample code to simplify geometries using 100 meters of threshold. datasource.GeometryExpression = \"ST.Simplify({0}, 100)\"; Also you could draw a 20 meters buffer around those little points: datasource.GeometryExpression = \"ST.Buffer({0}, 20)\"; | Improve this Doc View Source Name Gets a name describing the provider. This name is made up of Schema , Table and GeometryColumn . Declaration protected string Name { get; } Property Value Type Description String | Improve this Doc View Source NeedsTransform Gets whether the provider needs to use the transform function Declaration public bool NeedsTransform { get; } Property Value Type Description Boolean | Improve this Doc View Source ObjectIdColumn Gets or sets the name oft the object id (oid) column Declaration public string ObjectIdColumn { get; set; } Property Value Type Description String | Improve this Doc View Source OrderQuery Columns or T-SQL expressions for sorting (ORDER BY clause) Declaration [Obsolete(\"Define order by via FeatureColumns\")] public string OrderQuery { get; set; } Property Value Type Description String | Improve this Doc View Source Schema Gets or sets the name of the database schema Declaration public virtual string Schema { get; set; } Property Value Type Description String | Improve this Doc View Source Table Gets or sets the name oft the database table Declaration public string Table { get; set; } Property Value Type Description String | Improve this Doc View Source TargetSRID Gets or sets the target SRID. Setting this helps to avoid using on-the-fly reprojection Declaration public virtual int TargetSRID { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source CreateDataAdapter() Convenience function to create a data adapter. Declaration protected abstract DbDataAdapter CreateDataAdapter() Returns Type Description DbDataAdapter An open connection to the database backend. | Improve this Doc View Source CreateNewTable() Function to create a new, empty FeatureDataTable Declaration protected virtual FeatureDataTable CreateNewTable() Returns Type Description FeatureDataTable A feature data table | Improve this Doc View Source CreateNewTable(Boolean) Function to create a new, empty FeatureDataTable Declaration protected virtual FeatureDataTable CreateNewTable(bool force) Parameters Type Name Description Boolean force Value indicating that a new feature data table should be created, no matter what. Returns Type Description FeatureDataTable A feature data table | Improve this Doc View Source CreateOpenDbConnection() Convenience function to create and open a connection to the database backend. Declaration protected abstract DbConnection CreateOpenDbConnection() Returns Type Description DbConnection An open connection to the database backend. | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public override sealed void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into Overrides BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) | Improve this Doc View Source ExecuteIntersectionQueryInternal(Envelope, FeatureDataSet) Method to perform the actual intersection query against a bounding box Declaration protected virtual void ExecuteIntersectionQueryInternal(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box The bounding box FeatureDataSet ds The feature data set to store the results in. | Improve this Doc View Source ExecuteIntersectionQueryInternal(Object, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration protected virtual void ExecuteIntersectionQueryInternal(object spatialWhere, FeatureDataSet fds) Parameters Type Name Description Object spatialWhere Geometry to intersect with FeatureDataSet fds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() GeoAPI.Geometries.Envelope of dataset Declaration public override sealed Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope boundingbox Overrides BaseProvider.GetExtents() | Improve this Doc View Source GetExtentsInternal() Function to determine the extents of the datasource Declaration protected abstract Envelope GetExtentsInternal() Returns Type Description GeoAPI.Geometries.Envelope The extents | Improve this Doc View Source GetFeature(UInt32) Returns a FeatureDataRow based on a RowID Declaration public override sealed FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId The id of the row Returns Type Description FeatureDataRow The feature data row Overrides BaseProvider.GetFeature(UInt32) | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public override sealed int GetFeatureCount() Returns Type Description Int32 number of features Overrides BaseProvider.GetFeatureCount() | Improve this Doc View Source GetFeatureCountInternal() Method to get the number of features in the datasource Declaration protected virtual int GetFeatureCountInternal() Returns Type Description Int32 The number of features | Improve this Doc View Source GetFeatureInternal(UInt32) Function to get a specific feature from the database. Declaration protected virtual FeatureDataRow GetFeatureInternal(uint oid) Parameters Type Name Description UInt32 oid The object id Returns Type Description FeatureDataRow A feature data row | Improve this Doc View Source GetFrom(Envelope, DbCommand) Method to generate a SQL-From statement for a bounding box query Declaration protected virtual string GetFrom(Envelope envelope, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.Envelope envelope The envelope to query DbCommand command The command object that is supposed to perform the query Returns Type Description String A SQL From statement string | Improve this Doc View Source GetFrom(IGeometry, DbCommand) Method to generate a SQL-From statement for a geometry query Declaration protected virtual string GetFrom(IGeometry geometry, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry The envelope to query DbCommand command The command object that is supposed to perform the query Returns Type Description String A SQL From statement string | Improve this Doc View Source GetGeometriesInView(Envelope) Gets the geometries of features that lie within the specified GeoAPI.Geometries.Envelope Declaration public override sealed Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Geometries within the specified GeoAPI.Geometries.Envelope Overrides BaseProvider.GetGeometriesInView(Envelope) | Improve this Doc View Source GetGeometriesInViewInternal(Envelope) Gets the geometries of features that lie within the specified GeoAPI.Geometries.Envelope Declaration protected virtual Collection<IGeometry> GetGeometriesInViewInternal(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Geometries within the specified GeoAPI.Geometries.Envelope | Improve this Doc View Source GetGeometryByID(UInt32) Function to get a specific feature's geometry from the database. Declaration public override sealed IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid The object id Returns Type Description GeoAPI.Geometries.IGeometry A geometry Overrides BaseProvider.GetGeometryByID(UInt32) | Improve this Doc View Source GetGeometryByIDInternal(UInt32) Function to get a specific feature's geometry from the database. Declaration protected virtual IGeometry GetGeometryByIDInternal(uint oid) Parameters Type Name Description UInt32 oid The object id Returns Type Description GeoAPI.Geometries.IGeometry A geometry | Improve this Doc View Source GetObjectIDsInView(Envelope) Gets the object of features that lie within the specified GeoAPI.Geometries.Envelope Declaration public override sealed Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box Returns Type Description Collection < UInt32 > A collection of object ids Overrides BaseProvider.GetObjectIDsInView(Envelope) | Improve this Doc View Source GetObjectIDsInViewInternal(Envelope) Gets the object ids of features that lie within the specified GeoAPI.Geometries.Envelope Declaration protected virtual Collection<uint> GetObjectIDsInViewInternal(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box Returns Type Description Collection < UInt32 > A collection of object ids | Improve this Doc View Source GetSpatialWhere(Envelope, DbCommand) Function to generate a spatial where clause for the intersection queries. Declaration protected abstract string GetSpatialWhere(Envelope bbox, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox The bounding box DbCommand command The command object, that is supposed to execute the query. Returns Type Description String The spatial component of a SQL where clause | Improve this Doc View Source GetSpatialWhere(IGeometry, DbCommand) Function to generate a spatial where clause for the intersection queries. Declaration protected abstract string GetSpatialWhere(IGeometry bbox, DbCommand command) Parameters Type Name Description GeoAPI.Geometries.IGeometry bbox The geometry DbCommand command The command object, that is supposed to execute the query. Returns Type Description String The spatial component of a SQL where clause | Improve this Doc View Source Initialize() Function to initialize the provider Declaration protected void Initialize() | Improve this Doc View Source InitializeInternal() Method to initialize the spatial provider Declaration protected virtual void InitializeInternal() | Improve this Doc View Source OnAreaOfInterestChanged(EventArgs) Method called when the AreaOfInterest has been changed. This invokes the AreaOfInterestChanged event. Declaration protected void OnAreaOfInterestChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnBeginExecuteIntersectionQuery(IGeometry) Method to perform preparatory things for executing an intersection query against the data source Declaration protected override sealed void OnBeginExecuteIntersectionQuery(IGeometry geom) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter. Overrides BaseProvider.OnBeginExecuteIntersectionQuery(IGeometry) | Improve this Doc View Source OnBeginExecuteIntersectionQueryInternal(IGeometry) Method to perform preparatory things for executing an intersection query against the data source Declaration protected virtual void OnBeginExecuteIntersectionQueryInternal(IGeometry geom) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter. | Improve this Doc View Source OnDefinitionQueryChanged(EventArgs) Method called when the DefinitionQuery has been changed. This invokes the DefinitionQueryChanged event. Declaration [Obsolete] protected virtual void OnDefinitionQueryChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Method to perform the intersection query against the data source Declaration protected override void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom The geometry to use as filter FeatureDataSet ds The feature data set to store the results in Overrides BaseProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) | Improve this Doc View Source OnGeometryColumnChanged(EventArgs) Method called when the GeometryColumn has been changed. This invokes the GeometryColumnChanged event. Declaration protected virtual void OnGeometryColumnChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnOidColumnChanged(EventArgs) Method called when the ObjectIdColumn has been changed. This invokes the OidColumnChanged event. Declaration protected virtual void OnOidColumnChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnSchemaChanged(EventArgs) Method called when the Schema has been changed. This invokes the SchemaChanged event. Declaration protected virtual void OnSchemaChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnSridChanged(EventArgs) Handler method to handle changes of SRID . Declaration protected override void OnSridChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs Event arguments. Overrides BaseProvider.OnSridChanged(EventArgs) | Improve this Doc View Source OnTableChanged(EventArgs) Method called when the Table has been changed. This invokes the TableChanged event. Declaration protected virtual void OnTableChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source OnTargetSridChanged(EventArgs) Method called when the TargetSRID has been changed. This invokes the TargetSridChanged event. Declaration protected virtual void OnTargetSridChanged(EventArgs e) Parameters Type Name Description EventArgs e The arguments associated with the event | Improve this Doc View Source ReleaseManagedResources() Releases all managed resources Declaration protected override void ReleaseManagedResources() Overrides BaseProvider.ReleaseManagedResources() Events | Improve this Doc View Source AreaOfInterestChanged Event raised when AreaOfInterest for this provider has changed Declaration public event EventHandler AreaOfInterestChanged Event Type Type Description EventHandler | Improve this Doc View Source DefinitionQueryChanged Event raised when the feature columns string for this provider has changed; Declaration public event EventHandler DefinitionQueryChanged Event Type Type Description EventHandler | Improve this Doc View Source FeatureColumnsChanged Event raised when the FeatureColumns string for this provider has changed; Declaration public event EventHandler FeatureColumnsChanged Event Type Type Description EventHandler | Improve this Doc View Source GeometryColumnChanged Event raised when the geometry column for this provider has changed; Declaration public event EventHandler GeometryColumnChanged Event Type Type Description EventHandler | Improve this Doc View Source OidColumnChanged Event raised when the object id (oid) column for this provider has changed; Declaration public event EventHandler OidColumnChanged Event Type Type Description EventHandler | Improve this Doc View Source SchemaChanged Event raised when the database schema for this provider has changed; Declaration public event EventHandler SchemaChanged Event Type Type Description EventHandler | Improve this Doc View Source TableChanged Event raised when the table for this provider has changed; Declaration public event EventHandler TableChanged Event Type Type Description EventHandler | Improve this Doc View Source TargetSridChanged Event raised when the TargetSRID for this provider has changed; Declaration public event EventHandler TargetSridChanged Event Type Type Description EventHandler Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.SpatialDbUtility.html": {
    "href": "api/SharpMap.Data.Providers.SpatialDbUtility.html",
    "title": "Class SpatialDbUtility | SharpMap",
    "keywords": "Class SpatialDbUtility Database entity decorator object Inheritance Object SpatialDbUtility Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class SpatialDbUtility Constructors | Improve this Doc View Source SpatialDbUtility() Creates an instance of this class using the default decorator strings Declaration public SpatialDbUtility() | Improve this Doc View Source SpatialDbUtility(String, String, String) Creates an instance of this class using the provided decorator strings Declaration public SpatialDbUtility(string entityDecoratorFormat, string literalDecoratorFormat, string parameterDecoratorFormat) Parameters Type Name Description String entityDecoratorFormat The format string to decorate database entities String literalDecoratorFormat The format string to decorate literals (strings) String parameterDecoratorFormat The format string to decorate parameters | Improve this Doc View Source SpatialDbUtility(String, String, String, IBinaryGeometryReader, IBinaryGeometryWriter) Creates an instance of this class using the provided decorator strings Declaration public SpatialDbUtility(string entityDecoratorFormat, string literalDecoratorFormat, string parameterDecoratorFormat, IBinaryGeometryReader reader, IBinaryGeometryWriter writer) Parameters Type Name Description String entityDecoratorFormat The format string to decorate database entities String literalDecoratorFormat The format string to decorate literals (strings) String parameterDecoratorFormat The format string to decorate parameters GeoAPI.IO.IBinaryGeometryReader reader GeoAPI.IO.IBinaryGeometryWriter writer Properties | Improve this Doc View Source EntityDecoratorFormat Gets the database entity decorator format. For e.g. PostgreSQL that would be \"\\\"{0}\\\"\", so that a table named smTable would be decorated to \"smTable\" Declaration public string EntityDecoratorFormat { get; } Property Value Type Description String | Improve this Doc View Source FromGeometryDecoratorFormat Decorator for the transformation of the geometry data, in case the Reader can only read a format (e.g. WKB) that does not match the backend's format. Declaration public string FromGeometryDecoratorFormat { get; set; } Property Value Type Description String Remarks The format must have | Improve this Doc View Source LiteralDecoratorFormat Gets the database literal (string) decorator Declaration public string LiteralDecoratorFormat { get; } Property Value Type Description String | Improve this Doc View Source ParameterDecoratorFormat Gets the database parameter decorator Declaration public string ParameterDecoratorFormat { get; } Property Value Type Description String | Improve this Doc View Source Reader Reader for geometry data Declaration public IBinaryGeometryReader Reader { get; } Property Value Type Description GeoAPI.IO.IBinaryGeometryReader | Improve this Doc View Source SetSridDecoratorFormat Decorator for the function to assign a specific SRID value to a geometry Declaration public string SetSridDecoratorFormat { get; set; } Property Value Type Description String Remarks The format must have //e.g. Postgis this.SetSridDecoratorFormat = \"ST_SetSrid({0}, {1})\"; | Improve this Doc View Source ToEnvelopeDecoratorFormat Decorator for the transformation of the envelope data, in case the Reader expects a specific format (e.g. WKB). Declaration public string ToEnvelopeDecoratorFormat { get; set; } Property Value Type Description String Remarks The format must have | Improve this Doc View Source ToGeometryDecoratorFormat Decorator for the transformation of the geometry data, in case the Writer produces a specific format (e.g. WKB) that does not match the backend's format. Declaration public string ToGeometryDecoratorFormat { get; set; } Property Value Type Description String Remarks The format must have | Improve this Doc View Source TransformDecoratorFormat Decorator for the format to transform a geometry to a specified Declaration public string TransformDecoratorFormat { get; set; } Property Value Type Description String Remarks The format must have //e.g. Postgis this.TransformDecoratorFormat = \"ST_Transform({0}, {1})\"; | Improve this Doc View Source Writer Writer for geometry Declaration public IBinaryGeometryWriter Writer { get; } Property Value Type Description GeoAPI.IO.IBinaryGeometryWriter Methods | Improve this Doc View Source DecorateAs(String) Renames an already decorated entity using the SQL AS statement Declaration public string DecorateAs(string decoratedEntity) Parameters Type Name Description String decoratedEntity The decorated entity Returns Type Description String The decorated entity | Improve this Doc View Source DecorateAs(String, String) Renames an already decorated entity using the SQL AS statement Declaration public string DecorateAs(string decoratedEntity, string asSuffix) Parameters Type Name Description String decoratedEntity The decorated entity String asSuffix The suffix Returns Type Description String The decorated entity | Improve this Doc View Source DecorateColumn(String) Decorates a column name, optionally with a prefix Declaration public string DecorateColumn(string columnName) Parameters Type Name Description String columnName The column name Returns Type Description String The decorated column name | Improve this Doc View Source DecorateColumn(String, String) Decorates a column name, optionally with a prefix Declaration public string DecorateColumn(string columnName, string prefix) Parameters Type Name Description String columnName The column name String prefix The (optional) prefix Returns Type Description String The decorated column name | Improve this Doc View Source DecorateEntity(String) Function to decorate a database entity Declaration public string DecorateEntity(string entity) Parameters Type Name Description String entity The name of the entity Returns Type Description String The decorated database entity | Improve this Doc View Source DecorateEntityConstraintWithParameter(DbCommand, SharpMapFeatureColumn, String, Object[]) Decorates a constraint with parameters Declaration public string DecorateEntityConstraintWithParameter(DbCommand command, SharpMapFeatureColumn entity, string constraint, params object[] parameters) Parameters Type Name Description DbCommand command The command object to add the parameters to. SharpMapFeatureColumn entity The entity String constraint Object [] parameters Returns Type Description String | Improve this Doc View Source DecorateTable(String, String) Decorates the table name Declaration public string DecorateTable(string schema, string table) Parameters Type Name Description String schema String table Returns Type Description String The decorated table name | Improve this Doc View Source DecorateTable(String, String, String) Decorates the table name Declaration public string DecorateTable(string schema, string table, string asSuffix) Parameters Type Name Description String schema String table String asSuffix Returns Type Description String The decorated table name | Improve this Doc View Source ToDbType(Object, DbType) Converts obj to the type required for the database Declaration public virtual object ToDbType(object obj, DbType type) Parameters Type Name Description Object obj The object DbType type The required type Returns Type Description Object The converted obj"
  },
  "api/SharpMap.Data.Providers.SqlServer2008.html": {
    "href": "api/SharpMap.Data.Providers.SqlServer2008.html",
    "title": "Class SqlServer2008 | SharpMap",
    "keywords": "Class SqlServer2008 SQL Server 2008 data provider Inheritance Object DisposableObject BaseProvider SqlServer2008 Implements IDisposableEx IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members BaseProvider.SridChanged BaseProvider.Factory BaseProvider.ReleaseManagedResources() BaseProvider.ConnectionID BaseProvider.IsOpen BaseProvider.SRID BaseProvider.OnSridChanged(EventArgs) BaseProvider.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseProvider.OnBeginExecuteIntersectionQuery(IGeometry) BaseProvider.OnEndExecuteIntersectionQuery() BaseProvider.Open() BaseProvider.Close() BaseProvider.CloneTableStructure(FeatureDataTable) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class SqlServer2008 : BaseProvider, IDisposableEx, IProvider, IProvider<uint>, IBaseProvider, IDisposable Remarks This provider was developed against the SQL Server 2008 November CTP. The platform may change significantly before release. Adding a datasource to a layer: Layers.VectorLayer myLayer = new Layers.VectorLayer(\"My layer\"); string ConnStr = @\"Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=myDB;Data Source=myServer\\myInstance\"; myLayer.DataSource = new Data.Providers.SqlServer2008(ConnStr, \"myTable\", \"GeomColumn\", \"OidColumn\"); SQL Server 2008 provider by Bill Dollins (dollins.bill@gmail.com). Based on the Oracle provider written by Humberto Ferreira. Constructors | Improve this Doc View Source SqlServer2008(String, String, String) Initializes a new connection to SQL Server for SqlServerSpatialObjectType .Geometry in column named SHAPE with default ExtentsMode Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string oidColumnName) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String oidColumnName Name of column with unique identifier | Improve this Doc View Source SqlServer2008(String, String, String, SqlServerSpatialObjectType) Initializes a new connection to SQL Server for spatial column named SHAPE with default ExtentsMode Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string oidColumnName, SqlServerSpatialObjectType spatialObjectType) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String oidColumnName Name of column with unique identifier SqlServerSpatialObjectType spatialObjectType The type of the spatial object to use for spatial queries | Improve this Doc View Source SqlServer2008(String, String, String, String) Initializes a new connection to SQL Server for SqlServerSpatialObjectType .Geometry with default ExtentsMode Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string geometryColumnName, string oidColumnName) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String geometryColumnName Name of geometry column String oidColumnName Name of column with unique identifier | Improve this Doc View Source SqlServer2008(String, String, String, String, SqlServerSpatialObjectType) Initializes a new connection to SQL Server with default ExtentsMode Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string spatialColumnName, string oidColumnName, SqlServerSpatialObjectType spatialObjectType) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String spatialColumnName Name of spatial column String oidColumnName Name of column with unique identifier SqlServerSpatialObjectType spatialObjectType spatial type (Geometry or Geography) | Improve this Doc View Source SqlServer2008(String, String, String, String, SqlServerSpatialObjectType, Boolean) Initializes a new connection to SQL Server Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string spatialColumnName, string oidColumnName, SqlServerSpatialObjectType spatialObjectType, bool useSpatialIndexExtentAsExtent) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String spatialColumnName Name of spatial column String oidColumnName Name of column with unique identifier SqlServerSpatialObjectType spatialObjectType spatial type (Geometry or Geography) Boolean useSpatialIndexExtentAsExtent True sets ExtentsMode to SqlServer2008ExtentsMode.SpatialIndex | Improve this Doc View Source SqlServer2008(String, String, String, String, SqlServerSpatialObjectType, Boolean, Int32) Initializes a new connection to SQL Server Declaration [Obsolete] public SqlServer2008(string connectionStr, string tablename, string spatialColumnName, string oidColumnName, SqlServerSpatialObjectType spatialObjectType, bool useSpatialIndexExtentAsExtent, int srid) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String spatialColumnName Name of spatial column String oidColumnName Name of column with unique identifier SqlServerSpatialObjectType spatialObjectType spatial type (Geometry or Geography) Boolean useSpatialIndexExtentAsExtent True sets ExtentsMode to SqlServer2008ExtentsMode.SpatialIndex Int32 srid The spatial reference id | Improve this Doc View Source SqlServer2008(String, String, String, String, SqlServerSpatialObjectType, Int32, SqlServer2008ExtentsMode) Initializes a new connection to SQL Server Declaration public SqlServer2008(string connectionStr, string tablename, string spatialColumnName, string oidColumnName, SqlServerSpatialObjectType spatialObjectType, int srid, SqlServer2008ExtentsMode extentsMode) Parameters Type Name Description String connectionStr Connectionstring String tablename Name of data table String spatialColumnName Name of spatial column String oidColumnName Name of column with unique identifier SqlServerSpatialObjectType spatialObjectType spatial type (Geometry or Geography) Int32 srid The spatial reference id SqlServer2008ExtentsMode extentsMode Mode for calculating full extents of the data Fields | Improve this Doc View Source _reorientObject T-SQL command to \"reorient\" a geography Declaration protected readonly string _reorientObject Field Value Type Description String Remarks SqlGeographypolygon interior defined by left hand/foot rule (anti-clockwise orientation) SqlGeometryorientation is irrelevant GeometryToWKT returns Envelope with clockwise ring, so need to call .ReorientObject() for WKT used to query SqlGeography | Improve this Doc View Source _spatialTypeString Used for static spatial methods in SQL string Declaration protected readonly string _spatialTypeString Field Value Type Description String | Improve this Doc View Source GeogMaxExtents Envelope required for restricting extents of WKT (eg bbox) used to query SqlGeography to work around error 24206 \"The specified input cannot be accepted because it contains an edge with antipodal points\" FullGlobe will be used when map extents exceed this envelope. Declaration protected static readonly Envelope GeogMaxExtents Field Value Type Description GeoAPI.Geometries.Envelope Properties | Improve this Doc View Source Columns Gets a collection of columns in the dataset Declaration public DataColumnCollection Columns { get; } Property Value Type Description DataColumnCollection | Improve this Doc View Source ConnectionString Connectionstring Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source DefinitionQuery Definition query used for limiting dataset Declaration public string DefinitionQuery { get; set; } Property Value Type Description String | Improve this Doc View Source ExtentsMode Gets or sets the method used in the GetExtents() method. Declaration public SqlServer2008ExtentsMode ExtentsMode { get; set; } Property Value Type Description SqlServer2008ExtentsMode | Improve this Doc View Source ForceIndex When set, forces use of the specified index, possibly over-riding ValidateGeometries . Declaration public string ForceIndex { get; set; } Property Value Type Description String | Improve this Doc View Source ForceSeekHint When true , uses the FORCESEEK table hint, possibly over-riding ValidateGeometries . Declaration public bool ForceSeekHint { get; set; } Property Value Type Description Boolean | Improve this Doc View Source GeometryColumn Name of geometry column Declaration public string GeometryColumn { get; } Property Value Type Description String | Improve this Doc View Source MaxDop If set, sends an Option MaxDop to the SQL-Server to override the Parallel Execution of indexes This can be used if Spatial indexes are not used on SQL-Servers with many processors. MaxDop = 0 // Default behaviour MaxDop = 1 // Suppress Parallel execution of Queryplan MaxDop = [2..n] // Use X cores in in execution plan Declaration public int MaxDop { get; set; } Property Value Type Description Int32 | Improve this Doc View Source NoLockHint When true , uses the NOLOCK table hint. Declaration public bool NoLockHint { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ObjectIdColumn Name of column that contains the Object ID Declaration public string ObjectIdColumn { get; } Property Value Type Description String | Improve this Doc View Source QualifiedTable Gets a value indicating the qualified schema table name in square brackets Declaration protected string QualifiedTable { get; } Property Value Type Description String | Improve this Doc View Source SpatialObjectType Spatial object type for Declaration public SqlServerSpatialObjectType SpatialObjectType { get; } Property Value Type Description SqlServerSpatialObjectType | Improve this Doc View Source Table Data table name Declaration public string Table { get; } Property Value Type Description String | Improve this Doc View Source TableSchema Data table schema Declaration public string TableSchema { get; } Property Value Type Description String | Improve this Doc View Source ValidateGeometries When true , attempts to repair invalid SqlServer spatial objects by appending .MakeValid() in SQL statements. Ignored for SqlServerSpatialObjectType .Geometry when ForceSeekHint or ForceIndex is enabled due to SQL Server query execution plan. Declaration public virtual bool ValidateGeometries { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source BuildTableHints() Builds the WITH clause containing all specified table hints Declaration protected string BuildTableHints() Returns Type Description String The WITH clause | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns all features with the view box Declaration public override void ExecuteIntersectionQuery(Envelope bbox, FeatureDataSet fds) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox view box FeatureDataSet fds FeatureDataSet to fill data into Overrides BaseProvider.ExecuteIntersectionQuery(Envelope, FeatureDataSet) | Improve this Doc View Source ExecuteIntersectionQuery(String, FeatureDataSet) Declaration protected virtual void ExecuteIntersectionQuery(string sql, FeatureDataSet fds) Parameters Type Name Description String sql FeatureDataSet fds | Improve this Doc View Source GetAttributeColumnNames() Method to get the name of the attribute columns Declaration protected string GetAttributeColumnNames() Returns Type Description String A | Improve this Doc View Source GetBoxFilterStr(Envelope) Returns the box filter string needed in SQL query Declaration protected string GetBoxFilterStr(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description String | Improve this Doc View Source GetExtents() Boundingbox of dataset Declaration public override Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope boundingbox Overrides BaseProvider.GetExtents() | Improve this Doc View Source GetExtraOptions() Function to transform MaxDop to sql for the query Declaration protected string GetExtraOptions() Returns Type Description String MAXDOP option striong | Improve this Doc View Source GetFeature(UInt32) Returns a datarow based on a RowID Declaration public override FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId Returns Type Description FeatureDataRow datarow Overrides BaseProvider.GetFeature(UInt32) | Improve this Doc View Source GetFeatureCount() Returns the number of records in the dataset (including NULL, EMPTY, and Invalid geometries) Declaration public override int GetFeatureCount() Returns Type Description Int32 number of features Overrides BaseProvider.GetFeatureCount() | Improve this Doc View Source GetGeometriesInView(Envelope) Returns geometries within the specified bounding box Declaration public override Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Overrides BaseProvider.GetGeometriesInView(Envelope) | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public override IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry Overrides BaseProvider.GetGeometryByID(UInt32) | Improve this Doc View Source GetMakeValidString() Gets the T-SQL string to enforce that a geometry is valid. Declaration protected string GetMakeValidString() Returns Type Description String | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns geometry Object IDs whose bounding box intersects 'bbox' Declaration public override Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < UInt32 > Overrides BaseProvider.GetObjectIDsInView(Envelope) | Improve this Doc View Source OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the features that intersects with 'geom' Declaration protected override void OnExecuteIntersectionQuery(IGeometry geom, FeatureDataSet fds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom FeatureDataSet fds FeatureDataSet to fill data into Overrides BaseProvider.OnExecuteIntersectionQuery(IGeometry, FeatureDataSet) | Improve this Doc View Source ParseTablename(String) Method to parse TableSchema and Table from a (fully qualified) tablename Declaration protected void ParseTablename(string tablename) Parameters Type Name Description String tablename The table name Implements IDisposableEx IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.SqlServer2008Configuration.html": {
    "href": "api/SharpMap.Data.Providers.SqlServer2008Configuration.html",
    "title": "Class SqlServer2008Configuration | SharpMap",
    "keywords": "Class SqlServer2008Configuration Configuration class for SqlServer 2008 providers Inheritance Object SqlServer2008Configuration Implements IProviderConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax [Serializable] public class SqlServer2008Configuration : IProviderConfiguration Properties | Improve this Doc View Source ConnectionString Gets or sets the connection string for the database Declaration public string ConnectionString { get; set; } Property Value Type Description String | Improve this Doc View Source ExtentsMode Gets or sets the way the spatial extent of the data source is evaluated Declaration public SqlServer2008ExtentsMode ExtentsMode { get; set; } Property Value Type Description SqlServer2008ExtentsMode | Improve this Doc View Source GeometryColumnName Gets or sets the Geometry column name Declaration public string GeometryColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source ObjectIdColumnName Gets or sets the ObjectIdColumn Declaration public string ObjectIdColumnName { get; set; } Property Value Type Description String | Improve this Doc View Source SchemaName Gets or sets the schema name Declaration public string SchemaName { get; set; } Property Value Type Description String | Improve this Doc View Source SpatialObjectType Gets or sets the spatial object type Declaration public SqlServerSpatialObjectType SpatialObjectType { get; set; } Property Value Type Description SqlServerSpatialObjectType | Improve this Doc View Source SRID Gets or sets a value indicating the spatial reference id Declaration public int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source TableName Gets or sets the TableName Declaration public string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source UseSpatialIndexForEnvelope Gets or sets a value indicating whether or not to use the spatial index Declaration [Obsolete(\"Use ExtentsMode\")] public bool UseSpatialIndexForEnvelope { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Create() Create the provider provider Declaration public IProvider Create() Returns Type Description IProvider The created provider Implements IProviderConfiguration"
  },
  "api/SharpMap.Data.Providers.SqlServer2008ExtentsMode.html": {
    "href": "api/SharpMap.Data.Providers.SqlServer2008ExtentsMode.html",
    "title": "Enum SqlServer2008ExtentsMode | SharpMap",
    "keywords": "Enum SqlServer2008ExtentsMode Method used to determine extents of all features Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public enum SqlServer2008ExtentsMode Fields Name Description EnvelopeAggregate Uses Aggregate functions introduced in SQL Server 2012 (recommended, server aggregates data and returns single record to client) QueryIndividualFeatures Client retrieves and reads through all features in the table to determine extents SpatialIndex Supported by SqlServerSpatialObjectType .Geometry only, reading the bounds of the spatial index directly from the system tables (very fast, but does not take into account actual data extents or DefinitionQuery )"
  },
  "api/SharpMap.Data.Providers.SqlServerSpatialObjectType.html": {
    "href": "api/SharpMap.Data.Providers.SqlServerSpatialObjectType.html",
    "title": "Enum SqlServerSpatialObjectType | SharpMap",
    "keywords": "Enum SqlServerSpatialObjectType Possible spatial object types on SqlServer Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public enum SqlServerSpatialObjectType Fields Name Description Geography Geography Geometry Geometry"
  },
  "api/SharpMap.Data.Providers.WFS.html": {
    "href": "api/SharpMap.Data.Providers.WFS.html",
    "title": "Class WFS | SharpMap",
    "keywords": "Class WFS WFS dataprovider This provider can be used to obtain data from an OGC Web Feature Service. It performs the following requests: 'GetCapabilities', 'DescribeFeatureType' and 'GetFeature'. This class is optimized for performing requests to GeoServer ( http://geoserver.org ). Supported geometries are: PointPropertyType LineStringPropertyType PolygonPropertyType CurvePropertyType SurfacePropertyType MultiPointPropertyType MultiLineStringPropertyType MultiPolygonPropertyType MultiCurvePropertyType MultiSurfacePropertyType Inheritance Object WFS Implements IProvider IProvider < UInt32 > IBaseProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public class WFS : IProvider, IProvider<uint>, IBaseProvider, IDisposable Examples SharpMap.Map demoMap; const string getCapabilitiesURI = \"http://localhost:8080/geoserver/wfs\"; const string serviceURI = \"http://localhost:8080/geoserver/wfs\"; demoMap = new SharpMap.Map(new Size(600, 600)); demoMap.MinimumZoom = 0.005; demoMap.BackColor = Color.White; SharpMap.Layers.VectorLayer layer1 = new SharpMap.Layers.VectorLayer(\"States\"); SharpMap.Layers.VectorLayer layer2 = new SharpMap.Layers.VectorLayer(\"SelectedStatesAndHousholds\"); SharpMap.Layers.VectorLayer layer3 = new SharpMap.Layers.VectorLayer(\"New Jersey\"); SharpMap.Layers.VectorLayer layer4 = new SharpMap.Layers.VectorLayer(\"Roads\"); SharpMap.Layers.VectorLayer layer5 = new SharpMap.Layers.VectorLayer(\"Landmarks\"); SharpMap.Layers.VectorLayer layer6 = new SharpMap.Layers.VectorLayer(\"Poi\"); // Demo data from Geoserver 1.5.3 and Geoserver 1.6.0 WFS prov1 = new WFS(getCapabilitiesURI, \"topp\", \"states\", WFS.WFSVersionEnum.WFS1_0_0); // Bypass 'GetCapabilities' and 'DescribeFeatureType', if you know all necessary metadata. WfsFeatureTypeInfo featureTypeInfo = new WfsFeatureTypeInfo(serviceURI, \"topp\", null, \"states\", \"the_geom\"); // 'WFS.WFSVersionEnum.WFS1_1_0' supported by Geoserver 1.6.x WFS prov2 = new SharpMap.Data.Providers.WFS(featureTypeInfo, WFS.WFSVersionEnum.WFS1_1_0); // Bypass 'GetCapabilities' and 'DescribeFeatureType' again... // It's possible to specify the geometry type, if 'DescribeFeatureType' does not...(.e.g 'GeometryAssociationType') // This helps to accelerate the initialization process in case of unprecise geometry information. WFS prov3 = new WFS(serviceURI, \"topp\", \"http://www.openplans.org/topp\", \"states\", \"the_geom\", GeometryTypeEnum.MultiSurfacePropertyType, WFS.WFSVersionEnum.WFS1_1_0); // Get data-filled FeatureTypeInfo after initialization of dataprovider (useful in Web Applications for caching metadata. WfsFeatureTypeInfo info = prov1.FeatureTypeInfo; // Use cached 'GetCapabilities' response of prov1 (featuretype hosted by same service). // Compiled XPath expressions are re-used automatically! // If you use a cached 'GetCapabilities' response make sure the data provider uses the same version of WFS as the one providing the cache!!! WFS prov4 = new WFS(prov1.GetCapabilitiesCache, \"tiger\", \"tiger_roads\", WFS.WFSVersionEnum.WFS1_0_0); WFS prov5 = new WFS(prov1.GetCapabilitiesCache, \"tiger\", \"poly_landmarks\", WFS.WFSVersionEnum.WFS1_0_0); WFS prov6 = new WFS(prov1.GetCapabilitiesCache, \"tiger\", \"poi\", WFS.WFSVersionEnum.WFS1_0_0); // Clear cache of prov1 - data providers do not have any cache, if they use the one of another data provider prov1.GetCapabilitiesCache = null; //Filters IFilter filter1 = new PropertyIsEqualToFilter_FE1_1_0(\"STATE_NAME\", \"California\"); IFilter filter2 = new PropertyIsEqualToFilter_FE1_1_0(\"STATE_NAME\", \"Vermont\"); IFilter filter3 = new PropertyIsBetweenFilter_FE1_1_0(\"HOUSHOLD\", \"600000\", \"4000000\"); IFilter filter4 = new PropertyIsLikeFilter_FE1_1_0(\"STATE_NAME\", \"New*\"); // SelectedStatesAndHousholds: Green OGCFilterCollection filterCollection1 = new OGCFilterCollection(); filterCollection1.AddFilter(filter1); filterCollection1.AddFilter(filter2); OGCFilterCollection filterCollection2 = new OGCFilterCollection(); filterCollection2.AddFilter(filter3); filterCollection1.AddFilterCollection(filterCollection2); filterCollection1.Junctor = OGCFilterCollection.JunctorEnum.Or; prov2.OGCFilter = filterCollection1; // Like-Filter('New*'): Bisque prov3.OGCFilter = filter4; // Layer Style layer1.Style.Fill = new SolidBrush(Color.IndianRed); // States layer2.Style.Fill = new SolidBrush(Color.Green); // SelectedStatesAndHousholds layer3.Style.Fill = new SolidBrush(Color.Bisque); // e.g. New York, New Jersey,... layer5.Style.Fill = new SolidBrush(Color.LightBlue); // Labels // Labels are collected when parsing the geometry. So there's just one 'GetFeature' call necessary. // Otherwise (when calling twice for retrieving labels) there may be an inconsistent read... // If a label property is set, the quick geometry option is automatically set to 'false'. prov3.Label = \"STATE_NAME\"; SharpMap.Layers.LabelLayer layLabel = new SharpMap.Layers.LabelLayer(\"labels\"); layLabel.DataSource = prov3; layLabel.Enabled = true; layLabel.LabelColumn = prov3.Label; layLabel.Style = new SharpMap.Styles.LabelStyle(); layLabel.Style.CollisionDetection = false; layLabel.Style.CollisionBuffer = new SizeF(5, 5); layLabel.Style.ForeColor = Color.Black; layLabel.Style.Font = new Font(FontFamily.GenericSerif, 10); layLabel.MaxVisible = 90; layLabel.Style.HorizontalAlignment = SharpMap.Styles.LabelStyle.HorizontalAlignmentEnum.Center; // Options // Defaults: MultiGeometries: true, QuickGeometries: false, GetFeatureGETRequest: false // Render with validation... prov1.QuickGeometries = false; // Important when connecting to an UMN MapServer prov1.GetFeatureGETRequest = true; // Ignore multi-geometries... prov1.MultiGeometries = false; // Quick geometries // We need this option for prov2 since we have not passed a featuretype namespace prov2.QuickGeometries = true; prov4.QuickGeometries = true; prov5.QuickGeometries = true; prov6.QuickGeometries = true; layer1.DataSource = prov1; layer2.DataSource = prov2; layer3.DataSource = prov3; layer4.DataSource = prov4; layer5.DataSource = prov5; layer6.DataSource = prov6; demoMap.Layers.Add(layer1); demoMap.Layers.Add(layer2); demoMap.Layers.Add(layer3); demoMap.Layers.Add(layer4); demoMap.Layers.Add(layer5); demoMap.Layers.Add(layer6); demoMap.Layers.Add(layLabel); demoMap.Center = new GeoAPI.Geometries.Coordinate(-74.0, 40.7); demoMap.Zoom = 10; // Alternatively zoom closer // demoMap.Zoom = 0.2; // Render map this.mapImage1.Image = demoMap.GetMap(); Constructors | Improve this Doc View Source WFS(IXPathQueryManager, String, String, WFS.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFS(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, WFS.WFSVersionEnum wfsVersion) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type WFS.WFSVersionEnum wfsVersion The desired WFS Server version. | Improve this Doc View Source WFS(IXPathQueryManager, String, String, GeometryTypeEnum, WFS.WFSVersionEnum, String) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFS(IXPathQueryManager getCapabilitiesCache, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFS.WFSVersionEnum wfsVersion, string proxyUrl = null) Parameters Type Name Description IXPathQueryManager getCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process, if the geometry type in 'DescribeFeatureType is unprecise. WFS.WFSVersionEnum wfsVersion The desired WFS Server version. String proxyUrl Optional proxy url | Improve this Doc View Source WFS(WfsFeatureTypeInfo, WFS.WFSVersionEnum) Use this constructor for initializing this dataprovider with a WfsFeatureTypeInfo object, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFS(WfsFeatureTypeInfo featureTypeInfo, WFS.WFSVersionEnum wfsVersion) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo WFS.WFSVersionEnum wfsVersion | Improve this Doc View Source WFS(String, String, String, WFS.WFSVersionEnum) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFS(string getCapabilitiesURI, string nsPrefix, string featureType, WFS.WFSVersionEnum wfsVersion) Parameters Type Name Description String getCapabilitiesURI The URL for the 'GetCapabilities' request. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type WFS.WFSVersionEnum wfsVersion The desired WFS Server version. | Improve this Doc View Source WFS(String, String, String, GeometryTypeEnum, WFS.WFSVersionEnum, String) Use this constructor for initializing this dataprovider with all necessary parameters to gather metadata from 'GetCapabilities' contract. Declaration public WFS(string getCapabilitiesURI, string nsPrefix, string featureType, GeometryTypeEnum geometryType, WFS.WFSVersionEnum wfsVersion, string proxyUrl = null) Parameters Type Name Description String getCapabilitiesURI The URL for the 'GetCapabilities' request. String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureType The name of the feature type GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process, if the geometry type in 'DescribeFeatureType is unprecise. WFS.WFSVersionEnum wfsVersion The desired WFS Server version. String proxyUrl Optional Proxy url | Improve this Doc View Source WFS(String, String, String, String, String, WFS.WFSVersionEnum) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFS(string serviceURI, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, WFS.WFSVersionEnum wfsVersion) Parameters Type Name Description String serviceURI The service URL String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The name of the feature type String geometryName The name of the geometry WFS.WFSVersionEnum wfsVersion The desired WFS Server version. | Improve this Doc View Source WFS(String, String, String, String, String, GeometryTypeEnum, WFS.WFSVersionEnum) Use this constructor for initializing this dataprovider with all mandatory metadata for retrieving a featuretype, so that 'GetCapabilities' and 'DescribeFeatureType' can be bypassed. Declaration public WFS(string serviceURI, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType, WFS.WFSVersionEnum wfsVersion) Parameters Type Name Description String serviceURI The service URL String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The name of the feature type String geometryName The name of the geometry. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. WFS.WFSVersionEnum wfsVersion The desired WFS Server version. Fields | Improve this Doc View Source SpatialIndexFactory Gets or sets a value indicating the spatial index factory Declaration public static ISpatialIndexFactory<uint> SpatialIndexFactory Field Value Type Description ISpatialIndexFactory < UInt32 > Properties | Improve this Doc View Source AxisOrder Gets or sets a value indicating the axis order Declaration public int[] AxisOrder { get; set; } Property Value Type Description Int32 [] Remarks The axis order is an array of array offsets. It can be einter {0, 1} or {1, 0}. If not set explictly, AxisOrderRegistry is asked for a value based on SRID . | Improve this Doc View Source ConnectionID Gets the service-qualified name of the featuretype. The service-qualified name enables the differentiation between featuretypes from different services with an equal qualified name and therefore can be regarded as an ID for the featuretype. Declaration public string ConnectionID { get; } Property Value Type Description String | Improve this Doc View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source FeatureTypeInfo Gets feature metadata Declaration public WfsFeatureTypeInfo FeatureTypeInfo { get; } Property Value Type Description WfsFeatureTypeInfo | Improve this Doc View Source GetCapabilitiesCache This cache (obtained from an already instantiated dataprovider that retrieves a featuretype hosted by the same service) helps to speed up gathering metadata. It caches the 'GetCapabilities' response. Declaration public IXPathQueryManager GetCapabilitiesCache { get; set; } Property Value Type Description IXPathQueryManager | Improve this Doc View Source GetFeatureGETRequest Gets or sets a value indicating whether the 'GetFeature' request should be done with HTTP GET. This option can be important when obtaining data from a WFS provided by an UMN MapServer. Declaration public bool GetFeatureGETRequest { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsOpen Returns true if the datasource is currently open Declaration public bool IsOpen { get; } Property Value Type Description Boolean | Improve this Doc View Source Label Gets or sets the property of the featuretype responsible for labels Declaration public string Label { get; set; } Property Value Type Description String | Improve this Doc View Source MultiGeometries Gets or sets a value indicating whether the 'GetFeature' parser should ignore multi-geometries (MultiPoint, MultiLineString, MultiCurve, MultiPolygon, MultiSurface). By default it does not. Ignoring multi-geometries can lead to a better performance. Declaration public bool MultiGeometries { get; set; } Property Value Type Description Boolean | Improve this Doc View Source OGCFilter Gets or sets an OGC Filter. Declaration public IFilter OGCFilter { get; set; } Property Value Type Description IFilter | Improve this Doc View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string ProxyUrl { get; set; } Property Value Type Description String | Improve this Doc View Source QuickGeometries Gets or sets a value indicating whether extracting geometry information from 'GetFeature' response shall be done quickly without paying attention to context validation, polygon boundaries and multi-geometries. This option accelerates the geometry parsing process, but in scarce cases can lead to errors. Declaration public bool QuickGeometries { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public virtual int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source UseCache Gets or sets a value indicating whether caching is enabled. Declaration public bool UseCache { get; set; } Property Value Type Description Boolean Remarks When cache is enabled all geometries are downloaded from server depending on the OGC filter set, and then cached on client to fullfill next requests. Methods | Improve this Doc View Source Close() Closes the datasource Declaration public virtual void Close() | Improve this Doc View Source Dispose() Method to perform cleanup work Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Implementation of the Dispose patter Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing Flag indicating if called from Dispose() or a finalizer. | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public virtual void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public virtual void ExecuteIntersectionQuery(IGeometry geom, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geom Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetExtents() The GeoAPI.Geometries.Envelope of dataset Declaration public virtual Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope The 2d extent of the layer | Improve this Doc View Source GetFeature(UInt32) Returns a FeatureDataRow based on a RowID Declaration public virtual FeatureDataRow GetFeature(uint rowId) Parameters Type Name Description UInt32 rowId The id of the row. Returns Type Description FeatureDataRow datarow Exceptions Type Condition Exception Thrown in any case | Improve this Doc View Source GetFeatureCount() Returns the number of features in the dataset Declaration public virtual int GetFeatureCount() Returns Type Description Int32 number of features Exceptions Type Condition Exception Thrown in any case | Improve this Doc View Source GetGeometriesInView(Envelope) Gets the features within the specified GeoAPI.Geometries.Envelope Declaration public virtual Collection<IGeometry> GetGeometriesInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Returns Type Description Collection < GeoAPI.Geometries.IGeometry > Features within the specified GeoAPI.Geometries.Envelope | Improve this Doc View Source GetGeometryByID(UInt32) Returns the geometry corresponding to the Object ID Declaration public virtual IGeometry GetGeometryByID(uint oid) Parameters Type Name Description UInt32 oid Object ID Returns Type Description GeoAPI.Geometries.IGeometry geometry Exceptions Type Condition Exception Thrown in any case | Improve this Doc View Source GetObjectIDsInView(Envelope) Returns all objects whose GeoAPI.Geometries.Envelope intersects 'bbox'. Declaration public virtual Collection<uint> GetObjectIDsInView(Envelope bbox) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Box that objects should intersect Returns Type Description Collection < UInt32 > Remarks This method is usually much faster than the QueryFeatures method, because intersection tests are performed on objects simplified by their GeoAPI.Geometries.Envelope , and using the Spatial Index Exceptions Type Condition Exception Thrown in any case | Improve this Doc View Source Open() Opens the datasource Declaration public virtual void Open() Implements IProvider IProvider<TOid> IBaseProvider System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(IProvider) CoordinateSystemExtensions.GetFactory(IProvider)"
  },
  "api/SharpMap.Data.Providers.WFS.WFSVersionEnum.html": {
    "href": "api/SharpMap.Data.Providers.WFS.WFSVersionEnum.html",
    "title": "Enum WFS.WFSVersionEnum | SharpMap",
    "keywords": "Enum WFS.WFSVersionEnum This enumeration consists of expressions denoting WFS versions. Namespace : SharpMap.Data.Providers Assembly : SharpMap.dll Syntax public enum WFSVersionEnum Fields Name Description WFS1_0_0 Version 1.0.0 WFS1_1_0 Version 1.1.0"
  },
  "api/SharpMap.Drawing.Color.html": {
    "href": "api/SharpMap.Drawing.Color.html",
    "title": "Struct Color | SharpMap",
    "keywords": "Struct Color Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public struct Color"
  },
  "api/SharpMap.Drawing.html": {
    "href": "api/SharpMap.Drawing.html",
    "title": "Namespace SharpMap.Drawing | SharpMap",
    "keywords": "Namespace SharpMap.Drawing Classes Matrix Structs Color Point PointD PointF Enums MatrixOrder"
  },
  "api/SharpMap.Drawing.Matrix.html": {
    "href": "api/SharpMap.Drawing.Matrix.html",
    "title": "Class Matrix | SharpMap",
    "keywords": "Class Matrix Inheritance Object Matrix Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public sealed class Matrix Constructors | Improve this Doc View Source Matrix() Declaration public Matrix() | Improve this Doc View Source Matrix(Double[]) Declaration public Matrix(double[] elements) Parameters Type Name Description Double [] elements Properties | Improve this Doc View Source Elements Declaration public double[] Elements { get; } Property Value Type Description Double [] | Improve this Doc View Source Identity Declaration public static Matrix Identity { get; } Property Value Type Description Matrix | Improve this Doc View Source IsIdentity Declaration public bool IsIdentity { get; } Property Value Type Description Boolean | Improve this Doc View Source M11 Declaration public double M11 { get; set; } Property Value Type Description Double | Improve this Doc View Source M12 Declaration public double M12 { get; set; } Property Value Type Description Double | Improve this Doc View Source M21 Declaration public double M21 { get; set; } Property Value Type Description Double | Improve this Doc View Source M22 Declaration public double M22 { get; set; } Property Value Type Description Double | Improve this Doc View Source OffsetX Declaration public double OffsetX { get; set; } Property Value Type Description Double | Improve this Doc View Source OffsetY Declaration public double OffsetY { get; set; } Property Value Type Description Double | Improve this Doc View Source Perspective1 Declaration public double Perspective1 { get; set; } Property Value Type Description Double | Improve this Doc View Source Perspective2 Declaration public double Perspective2 { get; set; } Property Value Type Description Double | Improve this Doc View Source Perspective3 Declaration public double Perspective3 { get; set; } Property Value Type Description Double | Improve this Doc View Source ScaleX Declaration public double ScaleX { get; set; } Property Value Type Description Double | Improve this Doc View Source ScaleY Declaration public double ScaleY { get; set; } Property Value Type Description Double | Improve this Doc View Source ShearX Declaration public double ShearX { get; set; } Property Value Type Description Double | Improve this Doc View Source ShearY Declaration public double ShearY { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public Matrix Clone() Returns Type Description Matrix | Improve this Doc View Source Scale(Double, Double) Declaration public void Scale(double scaleX, double scaleY) Parameters Type Name Description Double scaleX Double scaleY | Improve this Doc View Source Scale(Double, Double, MatrixOrder) Declaration public void Scale(double scaleX, double scaleY, MatrixOrder matrixOrder) Parameters Type Name Description Double scaleX Double scaleY MatrixOrder matrixOrder | Improve this Doc View Source Transform(Point) Declaration public Point Transform(Point input) Parameters Type Name Description Point input Returns Type Description Point | Improve this Doc View Source Transform(PointD) Declaration public PointD Transform(PointD input) Parameters Type Name Description PointD input Returns Type Description PointD | Improve this Doc View Source Transform(PointF) Declaration public PointF Transform(PointF input) Parameters Type Name Description PointF input Returns Type Description PointF | Improve this Doc View Source Translate(Double, Double) Declaration public void Translate(double offsetX, double offsetY) Parameters Type Name Description Double offsetX Double offsetY"
  },
  "api/SharpMap.Drawing.MatrixOrder.html": {
    "href": "api/SharpMap.Drawing.MatrixOrder.html",
    "title": "Enum MatrixOrder | SharpMap",
    "keywords": "Enum MatrixOrder Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public enum MatrixOrder Fields Name Description Append Prepend"
  },
  "api/SharpMap.Drawing.Point.html": {
    "href": "api/SharpMap.Drawing.Point.html",
    "title": "Struct Point | SharpMap",
    "keywords": "Struct Point Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public struct Point Properties | Improve this Doc View Source X Declaration public int X { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Y Declaration public int Y { get; set; } Property Value Type Description Int32"
  },
  "api/SharpMap.Drawing.PointD.html": {
    "href": "api/SharpMap.Drawing.PointD.html",
    "title": "Struct PointD | SharpMap",
    "keywords": "Struct PointD Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public struct PointD Properties | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description Double"
  },
  "api/SharpMap.Drawing.PointF.html": {
    "href": "api/SharpMap.Drawing.PointF.html",
    "title": "Struct PointF | SharpMap",
    "keywords": "Struct PointF Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Drawing Assembly : SharpMap.dll Syntax public struct PointF Properties | Improve this Doc View Source Empty Declaration public PointF Empty { get; } Property Value Type Description PointF | Improve this Doc View Source X Declaration public float X { get; set; } Property Value Type Description Single | Improve this Doc View Source Y Declaration public float Y { get; set; } Property Value Type Description Single"
  },
  "api/SharpMap.html": {
    "href": "api/SharpMap.html",
    "title": "Namespace SharpMap | SharpMap",
    "keywords": "Namespace SharpMap Classes LayerRenderingEventArgs Layer rendering event arguments class Map Map class, the main holder for a MapObject in SharpMap MapViewport A Map utility class, that encapsulates all data required for rendering. MapViewPortGuard Utility class that checks Viewport min/max Zoom and constraint MapViewportLock Utility class to lock a map's viewport so it cannot be changed Session A SharpMap Session class Interfaces ISession A SharpMap session Delegates Map.LayersChangedEventHandler EventHandler for event fired when the maps layer list has been changed Map.MapRenderedEventHandler EventHandler for event fired when all layers have been rendered Map.MapRenderingEventHandler EventHandler for event fired when all layers are about to be rendered Map.MapViewChangedHandler EventHandler for event fired when the zoomlevel or the center point has been changed"
  },
  "api/SharpMap.ISession.html": {
    "href": "api/SharpMap.ISession.html",
    "title": "Interface ISession | SharpMap",
    "keywords": "Interface ISession A SharpMap session Namespace : SharpMap Assembly : SharpMap.dll Syntax public interface ISession Properties | Improve this Doc View Source CoordinateSystemRepository Gets the coordinate system repository Declaration ICoordinateSystemRepository CoordinateSystemRepository { get; } Property Value Type Description ICoordinateSystemRepository | Improve this Doc View Source CoordinateSystemServices Gets the coordinate system services instance Declaration ICoordinateSystemServices CoordinateSystemServices { get; } Property Value Type Description GeoAPI.ICoordinateSystemServices | Improve this Doc View Source GeometryServices The geometry services instance Declaration IGeometryServices GeometryServices { get; } Property Value Type Description GeoAPI.IGeometryServices Methods | Improve this Doc View Source SetCoordinateSystemRepository(ICoordinateSystemRepository) Method to set the CoordinateSystemRepository for a session Declaration ISession SetCoordinateSystemRepository(ICoordinateSystemRepository csRepository) Parameters Type Name Description ICoordinateSystemRepository csRepository The GeoAPI.CoordinateSystems.ICoordinateSystem s repository Returns Type Description ISession The updated session | Improve this Doc View Source SetCoordinateSystemServices(ICoordinateSystemServices) Method to set the CoordinateSystemServices for a session Declaration ISession SetCoordinateSystemServices(ICoordinateSystemServices csServices) Parameters Type Name Description GeoAPI.ICoordinateSystemServices csServices The GeoAPI.CoordinateSystems.ICoordinateSystem s services object Returns Type Description ISession The updated session | Improve this Doc View Source SetGeometryServices(IGeometryServices) Method to set the GeometryServices for a session Declaration ISession SetGeometryServices(IGeometryServices geometryServices) Parameters Type Name Description GeoAPI.IGeometryServices geometryServices The geometry services object Returns Type Description ISession The updated session"
  },
  "api/SharpMap.LayerRenderingEventArgs.html": {
    "href": "api/SharpMap.LayerRenderingEventArgs.html",
    "title": "Class LayerRenderingEventArgs | SharpMap",
    "keywords": "Class LayerRenderingEventArgs Layer rendering event arguments class Inheritance Object EventArgs LayerRenderingEventArgs Inherited Members EventArgs.Empty Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax public class LayerRenderingEventArgs : EventArgs Constructors | Improve this Doc View Source LayerRenderingEventArgs(ILayer, LayerCollectionType) Creates an instance of this class Declaration public LayerRenderingEventArgs(ILayer layer, LayerCollectionType layerCollectionType) Parameters Type Name Description ILayer layer The layer that is being or has been rendered LayerCollectionType layerCollectionType The layer collection type the layer belongs to. Fields | Improve this Doc View Source Layer The layer that is being or has been rendered Declaration public readonly ILayer Layer Field Value Type Description ILayer | Improve this Doc View Source LayerCollectionType The layer collection type the layer belongs to. Declaration public readonly LayerCollectionType LayerCollectionType Field Value Type Description LayerCollectionType"
  },
  "api/SharpMap.Layers.AsyncLayerProxyLayer.html": {
    "href": "api/SharpMap.Layers.AsyncLayerProxyLayer.html",
    "title": "Class AsyncLayerProxyLayer | SharpMap",
    "keywords": "Class AsyncLayerProxyLayer A proxy class to allow async tile rendering for static layers Inheritance Object AsyncLayerProxyLayer Implements ITileAsyncLayer IDisposable ICanQueryLayer ILayer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class AsyncLayerProxyLayer : ITileAsyncLayer, IDisposable, ICanQueryLayer, ILayer Examples var map = new SharpMap.Map(new System.Drawing.Size(1024, 786)); var provider = new SharpMap.Data.Providers.Shapefile(\"<Path to shapefile>\", true); var layer = new SharpMap.Layers.VectorLayer(\"LAYER1\", provider); map.BackgroundLayer.Add(AsyncLayerProxyLayer.Create(layer)); Properties | Improve this Doc View Source LayerTitle Optional title of the layer. It will be used for services like WMS where both Name and Title are supported. Declaration public string LayerTitle { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Create(ILayer, Nullable<Size>) Method to warp a usual layer in an async layer Declaration public static ILayer Create(ILayer layer, Size? tileSize = default(Size? )) Parameters Type Name Description ILayer layer The layer to wrap Nullable < Size > tileSize The size of the tile Returns Type Description ILayer A async tile layer | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source OnTileRendered(Point, Envelope, Bitmap) Method to raise the map tile available event Declaration protected virtual void OnTileRendered(Point ptInsert, Envelope env, Bitmap bmp) Parameters Type Name Description Point ptInsert GeoAPI.Geometries.Envelope env Bitmap bmp Events | Improve this Doc View Source DownloadProgressChanged Event raised when the rendering of tiles has made progress Declaration public event DownloadProgressHandler DownloadProgressChanged Event Type Type Description DownloadProgressHandler | Improve this Doc View Source MapNewTileAvaliable Event raised when a new tile has been rendered an is now avalable Declaration public event MapNewTileAvaliabledHandler MapNewTileAvaliable Event Type Type Description MapNewTileAvaliabledHandler Explicit Interface Implementations | Improve this Doc View Source ICanQueryLayer.ExecuteIntersectionQuery(Envelope, FeatureDataSet) Declaration void ICanQueryLayer.ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box FeatureDataSet ds | Improve this Doc View Source ICanQueryLayer.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Declaration void ICanQueryLayer.ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry FeatureDataSet ds | Improve this Doc View Source ICanQueryLayer.IsQueryEnabled Declaration bool ICanQueryLayer.IsQueryEnabled { get; set; } Returns Type Description Boolean | Improve this Doc View Source ILayer.Enabled Specifies whether this layer should be rendered or not Declaration bool ILayer.Enabled { get; set; } Returns Type Description Boolean | Improve this Doc View Source ILayer.Envelope Gets the boundingbox of the entire layer Declaration Envelope ILayer.Envelope { get; } Returns Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ILayer.LayerName Name of layer Declaration string ILayer.LayerName { get; set; } Returns Type Description String | Improve this Doc View Source ILayer.MaxVisible Declaration double ILayer.MaxVisible { get; set; } Returns Type Description Double | Improve this Doc View Source ILayer.MinVisible Declaration double ILayer.MinVisible { get; set; } Returns Type Description Double | Improve this Doc View Source ILayer.Proj4Projection Proj4 String Projection Declaration string ILayer.Proj4Projection { get; set; } Returns Type Description String | Improve this Doc View Source ILayer.Render(Graphics, Map) Renders the layer Declaration void ILayer.Render(Graphics g, Map map) Parameters Type Name Description Graphics g Graphics object reference Map map Map which is rendered | Improve this Doc View Source ILayer.Render(Graphics, MapViewport) Declaration void ILayer.Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map | Improve this Doc View Source ILayer.SRID The spatial reference ID (CRS) Declaration int ILayer.SRID { get; set; } Returns Type Description Int32 | Improve this Doc View Source ILayer.TargetSRID The spatial reference ID (CRS) that can be exposed externally. Declaration int ILayer.TargetSRID { get; } Returns Type Description Int32 Remarks TODO: explain better why I need this property | Improve this Doc View Source ILayer.VisibilityUnits Gets or Sets what level-reference the Min/Max values are defined in Declaration VisibilityUnits ILayer.VisibilityUnits { get; set; } Returns Type Description VisibilityUnits | Improve this Doc View Source ITileAsyncLayer.Cancel() Declaration void ITileAsyncLayer.Cancel() | Improve this Doc View Source ITileAsyncLayer.NumPendingDownloads Declaration int ITileAsyncLayer.NumPendingDownloads { get; } Returns Type Description Int32 | Improve this Doc View Source ITileAsyncLayer.OnlyRedrawWhenComplete Declaration bool ITileAsyncLayer.OnlyRedrawWhenComplete { get; set; } Returns Type Description Boolean Implements ITileAsyncLayer System.IDisposable ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.DownloadProgressHandler.html": {
    "href": "api/SharpMap.Layers.DownloadProgressHandler.html",
    "title": "Delegate DownloadProgressHandler | SharpMap",
    "keywords": "Delegate DownloadProgressHandler Delegate for notifying download of tiles Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate void DownloadProgressHandler(int tilesRemaining); Parameters Type Name Description Int32 tilesRemaining"
  },
  "api/SharpMap.Layers.DuplicateLayerException.html": {
    "href": "api/SharpMap.Layers.DuplicateLayerException.html",
    "title": "Class DuplicateLayerException | SharpMap",
    "keywords": "Class DuplicateLayerException Exception thrown when a layer with a name which is the same as an existing layer is added to a LayerCollection . Inheritance Object Exception SystemException InvalidOperationException DuplicateLayerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class DuplicateLayerException : InvalidOperationException, ISerializable Constructors | Improve this Doc View Source DuplicateLayerException(SerializationInfo, StreamingContext) Creates a new instance of DuplicateLayerException from serialized data, info . Declaration protected DuplicateLayerException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization data. StreamingContext context Serialization context. | Improve this Doc View Source DuplicateLayerException(String) Creates a new instance of DuplicateLayerException, indicating the duplicate layer name by duplicateLayerName . Declaration public DuplicateLayerException(string duplicateLayerName) Parameters Type Name Description String duplicateLayerName The existing layer name which was duplicated. | Improve this Doc View Source DuplicateLayerException(String, String) Creates a new instance of DuplicateLayerException, indicating the duplicate layer name by duplicateLayerName and including a message. Declaration public DuplicateLayerException(string duplicateLayerName, string message) Parameters Type Name Description String duplicateLayerName The existing layer name which was duplicated. String message Additional information about the exception. | Improve this Doc View Source DuplicateLayerException(String, String, Exception) Creates a new instance of DuplicateLayerException, indicating the duplicate layer name by duplicateLayerName and including a message. Declaration public DuplicateLayerException(string duplicateLayerName, string message, Exception inner) Parameters Type Name Description String duplicateLayerName The existing layer name which was duplicated. String message Additional information about the exception. Exception inner An exception which caused this exception, if any. Properties | Improve this Doc View Source DuplicateLayerName Gets the existing layer name which was duplicated. Declaration public string DuplicateLayerName { get; } Property Value Type Description String Methods | Improve this Doc View Source GetObjectData(SerializationInfo, StreamingContext) Serialization function Declaration public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info StreamingContext context The streaming context Overrides Exception.GetObjectData(SerializationInfo, StreamingContext) Implements System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Layers.GdiImageLayer.html": {
    "href": "api/SharpMap.Layers.GdiImageLayer.html",
    "title": "Class GdiImageLayer | SharpMap",
    "keywords": "Class GdiImageLayer Image to Inheritance Object DisposableObject Layer GdiImageLayer Implements IDisposableEx IDisposable ILayerEx ILayer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class GdiImageLayer : Layer, IDisposableEx, IDisposable, ILayerEx, ILayer Constructors | Improve this Doc View Source GdiImageLayer(String) Creates an instance of this class using the provided layer Declaration public GdiImageLayer(string fileName) Parameters Type Name Description String fileName The path to the file | Improve this Doc View Source GdiImageLayer(String, Image) Creates an instance of this class using the provided layerName and image . Declaration public GdiImageLayer(string layerName, Image image) Parameters Type Name Description String layerName The layer name Image image | Improve this Doc View Source GdiImageLayer(String, String) Creates an instance of this class using the provided layer Declaration public GdiImageLayer(string layerName, string fileName) Parameters Type Name Description String layerName The name of the layer String fileName The path to the file Properties | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source Image Gets or sets a value indicating the image to display Declaration public Image Image { get; set; } Property Value Type Description Image | Improve this Doc View Source ImageFilename Gets or sets the filename for the image Declaration public string ImageFilename { get; set; } Property Value Type Description String | Improve this Doc View Source InterpolationMode Gets or sets the InterpolationMode to use Declaration public InterpolationMode InterpolationMode { get; set; } Property Value Type Description InterpolationMode | Improve this Doc View Source Transparency Gets or sets a value indicating the transparency level Declaration public float Transparency { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides Layer.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILayerEx ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.GdiImageLayerProxy-1.html": {
    "href": "api/SharpMap.Layers.GdiImageLayerProxy-1.html",
    "title": "Class GdiImageLayerProxy<T> | SharpMap",
    "keywords": "Class GdiImageLayerProxy<T> Image manipulation proxy layer Inheritance Object GdiImageLayerProxy<T> Implements ICanQueryLayer ILayer IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class GdiImageLayerProxy<T> : ICanQueryLayer, ILayer, IDisposable where T : class, ILayer Type Parameters Name Description T The type of the proxy layer. ITileAsyncLayer are not excluded, but are not handled in any way. Remarks This layer is not for layers implementing ITileAsyncLayer . Every Constructors | Improve this Doc View Source GdiImageLayerProxy(T, ColorMap[]) Creates an instance of this class using the provided colorMap Declaration public GdiImageLayerProxy(T layer, params ColorMap[] colorMap) Parameters Type Name Description T layer The layer to be proxied ColorMap [] colorMap The color map | Improve this Doc View Source GdiImageLayerProxy(T, ColorMatrix) Creates an instance of this class using the provided colorMatrix Declaration public GdiImageLayerProxy(T layer, ColorMatrix colorMatrix) Parameters Type Name Description T layer The layer to be proxied ColorMatrix colorMatrix A color matrix that is to be applied upon drawing | Improve this Doc View Source GdiImageLayerProxy(T, Single) Creates an instance of this class using the provided opacity Declaration public GdiImageLayerProxy(T layer, float opacity) Parameters Type Name Description T layer The layer to be proxied Single opacity An opacity value in the range of [0f, 1f]. Values outside of that range will be clipped. Properties | Improve this Doc View Source BaseLayer Gets a value indicating the proxied base layer Declaration public T BaseLayer { get; } Property Value Type Description T | Improve this Doc View Source LayerTitle Optional title of layer. It will be used for services like WMS where both Name and Title are supported. Declaration public string LayerTitle { get; set; } Property Value Type Description String | Improve this Doc View Source VisibilityUnits Gets or Sets what level-reference the Min/Max values are defined in Declaration public VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits Methods | Improve this Doc View Source CreateGreyScale(T) Creates a proxy class that transforms all colors to grey scale Declaration public static GdiImageLayerProxy<T> CreateGreyScale(T baseLayer) Parameters Type Name Description T baseLayer The layer to be proxied Returns Type Description GdiImageLayerProxy <T> A proxy layer | Improve this Doc View Source Dispose() Declaration public void Dispose() Explicit Interface Implementations | Improve this Doc View Source ICanQueryLayer.ExecuteIntersectionQuery(Envelope, FeatureDataSet) Declaration void ICanQueryLayer.ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box FeatureDataSet ds | Improve this Doc View Source ICanQueryLayer.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Declaration void ICanQueryLayer.ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry FeatureDataSet ds | Improve this Doc View Source ICanQueryLayer.IsQueryEnabled Declaration bool ICanQueryLayer.IsQueryEnabled { get; set; } Returns Type Description Boolean | Improve this Doc View Source ILayer.Enabled Declaration bool ILayer.Enabled { get; set; } Returns Type Description Boolean | Improve this Doc View Source ILayer.Envelope Declaration Envelope ILayer.Envelope { get; } Returns Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ILayer.LayerName Declaration string ILayer.LayerName { get; set; } Returns Type Description String | Improve this Doc View Source ILayer.MaxVisible Declaration double ILayer.MaxVisible { get; set; } Returns Type Description Double | Improve this Doc View Source ILayer.MinVisible Declaration double ILayer.MinVisible { get; set; } Returns Type Description Double | Improve this Doc View Source ILayer.Proj4Projection Declaration string ILayer.Proj4Projection { get; set; } Returns Type Description String | Improve this Doc View Source ILayer.Render(Graphics, Map) Declaration void ILayer.Render(Graphics g, Map map) Parameters Type Name Description Graphics g Map map | Improve this Doc View Source ILayer.Render(Graphics, MapViewport) Declaration void ILayer.Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map | Improve this Doc View Source ILayer.SRID Declaration int ILayer.SRID { get; set; } Returns Type Description Int32 | Improve this Doc View Source ILayer.TargetSRID Declaration int ILayer.TargetSRID { get; } Returns Type Description Int32 Implements ICanQueryLayer ILayer System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.html": {
    "href": "api/SharpMap.Layers.html",
    "title": "Namespace SharpMap.Layers | SharpMap",
    "keywords": "Namespace SharpMap.Layers Classes AsyncLayerProxyLayer A proxy class to allow async tile rendering for static layers DuplicateLayerException Exception thrown when a layer with a name which is the same as an existing layer is added to a LayerCollection . GdiImageLayer Image to GdiImageLayerProxy<T> Image manipulation proxy layer LabelLayer Label layer class Layer Abstract class for common layer properties Implement this class instead of the ILayer interface to save a lot of common code. LayerCollection A collection of ILayer instances. LayerGroup Class for holding a group of layers. TiledWmsLayer Client layer for WMS-C service VariableLayerCollection Layer collection VectorLayer Class for vector layer properties WmsLayer Web Map Service layer Interfaces ICanQueryLayer Interface for Layers, that can be queried ILayer Interface for map layers ILayerEx An extended layer interface ILayersContainer Interface to mark entities that expose layers. ITileAsyncLayer Interface for async tile layers Enums LabelLayer.MultipartGeometryBehaviourEnum Labelling behaviour for Multipart geometry collections LayerCollectionType Types of layer collections Delegates DownloadProgressHandler Delegate for notifying download of tiles LabelLayer.GetLabelMethod Delegate method for creating advanced label texts LabelLayer.GetLocationMethod Delegate method for advanced placement of the label position LabelLayer.GetPriorityMethod Delegate method for calculating the priority of label rendering Layer.LayerRenderedEventHandler EventHandler for event fired when the layer has been rendered MapNewTileAvaliabledHandler Delegate function definition for handling ITileAsyncLayer s MapNewTileAvaliable event VariableLayerCollectionRequeryHandler Signature of function to handle VariableLayerCollectionRequery event"
  },
  "api/SharpMap.Layers.ICanQueryLayer.html": {
    "href": "api/SharpMap.Layers.ICanQueryLayer.html",
    "title": "Interface ICanQueryLayer | SharpMap",
    "keywords": "Interface ICanQueryLayer Interface for Layers, that can be queried Inherited Members ILayer.MinVisible ILayer.MaxVisible ILayer.VisibilityUnits ILayer.Enabled ILayer.LayerName ILayer.LayerTitle ILayer.Envelope ILayer.SRID ILayer.TargetSRID ILayer.Proj4Projection ILayer.Render(Graphics, Map) ILayer.Render(Graphics, MapViewport) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public interface ICanQueryLayer : ILayer Properties | Improve this Doc View Source IsQueryEnabled Whether the layer is queryable when used in a SharpMap.Web.Wms.WmsServer, ExecuteIntersectionQuery() will be possible in all other situations when set to FALSE. This property currently only applies to WMS and should perhaps be moved to a WMS specific class. Declaration bool IsQueryEnabled { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Note! The table added should be named according to the LayerName! Declaration void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Bounding box to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Note! The table added should be named according to the LayerName! Declaration void ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.ILayer.html": {
    "href": "api/SharpMap.Layers.ILayer.html",
    "title": "Interface ILayer | SharpMap",
    "keywords": "Interface ILayer Interface for map layers Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public interface ILayer Properties | Improve this Doc View Source Enabled Specifies whether this layer should be rendered or not Declaration bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Envelope Gets the boundingbox of the entire layer Declaration Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source LayerName Name of layer Declaration string LayerName { get; set; } Property Value Type Description String | Improve this Doc View Source LayerTitle Optional title of layer. It will be used for services like WMS where both Name and Title are supported. Declaration string LayerTitle { get; set; } Property Value Type Description String | Improve this Doc View Source MaxVisible Minimum visible zoom level Declaration double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Minimum visible zoom level Declaration double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source Proj4Projection Proj4 String Projection Declaration string Proj4Projection { get; set; } Property Value Type Description String | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source TargetSRID The spatial reference ID (CRS) that can be exposed externally. Declaration int TargetSRID { get; } Property Value Type Description Int32 Remarks TODO: explain better why I need this property | Improve this Doc View Source VisibilityUnits Gets or Sets what level-reference the Min/Max values are defined in Declaration VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits Methods | Improve this Doc View Source Render(Graphics, Map) Renders the layer Declaration [Obsolete(\"Use Render(Graphics, MapViewport)\")] void Render(Graphics g, Map map) Parameters Type Name Description Graphics g Graphics object reference Map map Map which is rendered | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer using the current viewport Declaration void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.ILayerEx.html": {
    "href": "api/SharpMap.Layers.ILayerEx.html",
    "title": "Interface ILayerEx | SharpMap",
    "keywords": "Interface ILayerEx An extended layer interface Inherited Members ILayer.MinVisible ILayer.MaxVisible ILayer.VisibilityUnits ILayer.Enabled ILayer.LayerName ILayer.LayerTitle ILayer.Envelope ILayer.SRID ILayer.TargetSRID ILayer.Proj4Projection ILayer.Render(Graphics, Map) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public interface ILayerEx : ILayer Methods | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer using the current viewport, returning a rectangle describing the area covered. Declaration Rectangle Render(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g Graphics object reference MapViewport mvp Map which is rendered Returns Type Description Rectangle Rectangle enclosing the actual area rendered on the graphics canvas Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.ILayersContainer.html": {
    "href": "api/SharpMap.Layers.ILayersContainer.html",
    "title": "Interface ILayersContainer | SharpMap",
    "keywords": "Interface ILayersContainer Interface to mark entities that expose layers. Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public interface ILayersContainer Properties | Improve this Doc View Source Layers Gets the layers exposed. Declaration IList<ILayer> Layers { get; } Property Value Type Description IList < ILayer >"
  },
  "api/SharpMap.Layers.ITileAsyncLayer.html": {
    "href": "api/SharpMap.Layers.ITileAsyncLayer.html",
    "title": "Interface ITileAsyncLayer | SharpMap",
    "keywords": "Interface ITileAsyncLayer Interface for async tile layers Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public interface ITileAsyncLayer Properties | Improve this Doc View Source NumPendingDownloads Returns the number of tiles that are in queue for download Declaration int NumPendingDownloads { get; } Property Value Type Description Int32 | Improve this Doc View Source OnlyRedrawWhenComplete Gets or sets a value indicating if the map only should only be redrawn when all tiles are downloaded Declaration bool OnlyRedrawWhenComplete { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Cancel() Method to cancel the async layer Declaration void Cancel() Events | Improve this Doc View Source DownloadProgressChanged Event raised when download progress of tiles has changed Declaration event DownloadProgressHandler DownloadProgressChanged Event Type Type Description DownloadProgressHandler | Improve this Doc View Source MapNewTileAvaliable Event raised when a new tile is available Declaration event MapNewTileAvaliabledHandler MapNewTileAvaliable Event Type Type Description MapNewTileAvaliabledHandler"
  },
  "api/SharpMap.Layers.LabelLayer.GetLabelMethod.html": {
    "href": "api/SharpMap.Layers.LabelLayer.GetLabelMethod.html",
    "title": "Delegate LabelLayer.GetLabelMethod | SharpMap",
    "keywords": "Delegate LabelLayer.GetLabelMethod Delegate method for creating advanced label texts Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate string GetLabelMethod(FeatureDataRow fdr); Parameters Type Name Description FeatureDataRow fdr the FeatureDataRow to build the label for Returns Type Description String the label"
  },
  "api/SharpMap.Layers.LabelLayer.GetLocationMethod.html": {
    "href": "api/SharpMap.Layers.LabelLayer.GetLocationMethod.html",
    "title": "Delegate LabelLayer.GetLocationMethod | SharpMap",
    "keywords": "Delegate LabelLayer.GetLocationMethod Delegate method for advanced placement of the label position Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate Coordinate GetLocationMethod(FeatureDataRow fdr); Parameters Type Name Description FeatureDataRow fdr the FeatureDataRow to compute the label position from Returns Type Description GeoAPI.Geometries.Coordinate the priority value"
  },
  "api/SharpMap.Layers.LabelLayer.GetPriorityMethod.html": {
    "href": "api/SharpMap.Layers.LabelLayer.GetPriorityMethod.html",
    "title": "Delegate LabelLayer.GetPriorityMethod | SharpMap",
    "keywords": "Delegate LabelLayer.GetPriorityMethod Delegate method for calculating the priority of label rendering Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate int GetPriorityMethod(FeatureDataRow fdr); Parameters Type Name Description FeatureDataRow fdr the FeatureDataRow to compute the priority value from Returns Type Description Int32 the priority value"
  },
  "api/SharpMap.Layers.LabelLayer.html": {
    "href": "api/SharpMap.Layers.LabelLayer.html",
    "title": "Class LabelLayer | SharpMap",
    "keywords": "Class LabelLayer Label layer class Inheritance Object DisposableObject Layer LabelLayer Implements IDisposableEx IDisposable ILayerEx ILayer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class LabelLayer : Layer, IDisposableEx, IDisposable, ILayerEx, ILayer Examples Creates a new label layer and sets the label text to the \"Name\" column in the FeatureDataTable of the datasource //Set up a label layer SharpMap.Layers.LabelLayer layLabel = new SharpMap.Layers.LabelLayer(\"Country labels\"); layLabel.DataSource = layCountries.DataSource; layLabel.Enabled = true; layLabel.LabelColumn = \"Name\"; layLabel.Style = new SharpMap.Styles.LabelStyle(); layLabel.Style.CollisionDetection = true; layLabel.Style.CollisionBuffer = new SizeF(20, 20); layLabel.Style.ForeColor = Color.White; layLabel.Style.Font = new Font(FontFamily.GenericSerif, 8); layLabel.MaxVisible = 90; layLabel.Style.HorizontalAlignment = SharpMap.Styles.LabelStyle.HorizontalAlignmentEnum.Center; Constructors | Improve this Doc View Source LabelLayer(String) Creates a new instance of a LabelLayer Declaration public LabelLayer(string layername) Parameters Type Name Description String layername Properties | Improve this Doc View Source CacheExtent Gets or sets a value indicating whether the layer envelope should be treated as static or not. Declaration public virtual bool CacheExtent { get; set; } Property Value Type Description Boolean Remarks When CacheExtent is enabled the layer Envelope will be calculated only once from DataSource, this helps to speed up the Envelope calculation with some DataProviders. Default is false for backward compatibility. | Improve this Doc View Source DataSource Gets or sets the datasource Declaration public IBaseProvider DataSource { get; set; } Property Value Type Description IBaseProvider | Improve this Doc View Source Envelope Gets the boundingbox of the entire layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Overrides Layer.Envelope | Improve this Doc View Source LabelColumn Data column or expression where label text is extracted from. Declaration public string LabelColumn { get; set; } Property Value Type Description String Remarks This property is overridden by the LabelStringDelegate . | Improve this Doc View Source LabelFilter Filter method delegate for performing filtering Declaration public LabelCollisionDetection.LabelFilterMethod LabelFilter { get; set; } Property Value Type Description LabelCollisionDetection.LabelFilterMethod Remarks Default method is QuickAccurateCollisionDetectionMethod(List<BaseLabel>) | Improve this Doc View Source LabelPositionDelegate Gets or sets the method for creating a custom position based on a feature. Declaration public LabelLayer.GetLocationMethod LabelPositionDelegate { get; set; } Property Value Type Description LabelLayer.GetLocationMethod Remarks If this method is not null, it will override the position based on the centroid of the boundingbox of the feature The label delegate must take a FeatureDataRow and return a GeoAPI.Geometries.Coordinate. If the delegate returns a null, the centroid of the feature will be used Creating a custom position by using X and Y values from the FeatureDataRow attributes \"LabelX\" and \"LabelY\", using an anonymous delegate: myLabelLayer.LabelPositionDelegate = delegate(SharpMap.Data.FeatureDataRow fdr) { return new GeoAPI.Geometries.Coordinate(Convert.ToDouble(fdr[\"LabelX\"]), Convert.ToDouble(fdr[\"LabelY\"]));}; | Improve this Doc View Source LabelStringDelegate Gets or sets the method for creating a custom label string based on a feature. Declaration public LabelLayer.GetLabelMethod LabelStringDelegate { get; set; } Property Value Type Description LabelLayer.GetLabelMethod Remarks If this method is not null, it will override the LabelColumn value. The label delegate must take a FeatureDataRow and return a string. Creating a label-text by combining attributes \"ROADNAME\" and \"STATE\" into one string, using an anonymous delegate: myLabelLayer.LabelStringDelegate = delegate(SharpMap.Data.FeatureDataRow fdr) { return fdr[\"ROADNAME\"].ToString() + \", \" + fdr[\"STATE\"].ToString(); }; | Improve this Doc View Source MultipartGeometryBehaviour Gets or sets labelling behavior on multipart geometries Declaration public LabelLayer.MultipartGeometryBehaviourEnum MultipartGeometryBehaviour { get; set; } Property Value Type Description LabelLayer.MultipartGeometryBehaviourEnum Remarks Default value is All | Improve this Doc View Source Priority A value indication the priority of the label in cases of label-collision detection Declaration public int Priority { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PriorityColumn Name of the column that holds the value indicating the priority of the label in cases of label-collision detection Declaration public string PriorityColumn { get; set; } Property Value Type Description String | Improve this Doc View Source PriorityDelegate Gets or sets the method for calculating the render priority of a label based on a feature. Declaration public LabelLayer.GetPriorityMethod PriorityDelegate { get; set; } Property Value Type Description LabelLayer.GetPriorityMethod Remarks If this method is not null, it will override the PriorityColumn value. The label delegate must take a FeatureDataRow and return an Int32. Creating a priority by combining attributes \"capital\" and \"population\" into one value, using an anonymous delegate: myLabelLayer.PriorityDelegate = delegate(SharpMap.Data.FeatureDataRow fdr) { Int32 retVal = 100000000 * (Int32)( (String)fdr[\"capital\"] == \"Y\" ? 1 : 0 ); return retVal + Convert.ToInt32(fdr[\"population\"]); }; | Improve this Doc View Source RotationColumn Data column from where the label rotation is derived. If this is empty, rotation will be zero, or aligned to a linestring. Rotation are in degrees (positive = clockwise). Declaration public string RotationColumn { get; set; } Property Value Type Description String | Improve this Doc View Source SmoothingMode Render whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode | Improve this Doc View Source SRID Gets or sets the SRID of this VectorLayer's data source Declaration public override int SRID { get; set; } Property Value Type Description Int32 Overrides Layer.SRID | Improve this Doc View Source Style Gets or sets the rendering style of the label layer. Declaration public LabelStyle Style { get; set; } Property Value Type Description LabelStyle | Improve this Doc View Source TextRenderingHint Specifies the quality of text rendering Declaration public TextRenderingHint TextRenderingHint { get; set; } Property Value Type Description TextRenderingHint | Improve this Doc View Source Theme Gets or sets thematic settings for the layer. Set to null to ignore thematics Declaration public ITheme Theme { get; set; } Property Value Type Description ITheme Methods | Improve this Doc View Source LineStringToPath(ILineString, MapViewport) Function to transform a linestring to a graphics path for further processing Declaration public static GraphicsPath LineStringToPath(ILineString lineString, MapViewport map) Parameters Type Name Description GeoAPI.Geometries.ILineString lineString The Linestring MapViewport map The map Returns Type Description GraphicsPath A GraphicsPath | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides Layer.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILayerEx ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.LabelLayer.MultipartGeometryBehaviourEnum.html": {
    "href": "api/SharpMap.Layers.LabelLayer.MultipartGeometryBehaviourEnum.html",
    "title": "Enum LabelLayer.MultipartGeometryBehaviourEnum | SharpMap",
    "keywords": "Enum LabelLayer.MultipartGeometryBehaviourEnum Labelling behaviour for Multipart geometry collections Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public enum MultipartGeometryBehaviourEnum Fields Name Description All Place label on all parts (default) CommonCenter The center of the combined geometries First Center of the first geometry in the collection (fastest method) Largest Place label on object which the greatest length or area."
  },
  "api/SharpMap.Layers.Layer.html": {
    "href": "api/SharpMap.Layers.Layer.html",
    "title": "Class Layer | SharpMap",
    "keywords": "Class Layer Abstract class for common layer properties Implement this class instead of the ILayer interface to save a lot of common code. Inheritance Object DisposableObject Layer GdiImageLayer LabelLayer LayerGroup BaseVectorLayer<TGeometry> TiledWmsLayer VectorLayer WmsLayer Implements IDisposableEx IDisposable ILayerEx ILayer Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public abstract class Layer : DisposableObject, IDisposableEx, IDisposable, ILayerEx, ILayer Constructors | Improve this Doc View Source Layer() Creates an instance of this class Declaration protected Layer() | Improve this Doc View Source Layer(Style) Creates an instance of this class using the given Style Declaration public Layer(Style style) Parameters Type Name Description Style style Fields | Improve this Doc View Source CanvasArea The area of the map that was covered by this layer Declaration [NonSerialized] protected RectangleF CanvasArea Field Value Type Description RectangleF Properties | Improve this Doc View Source CoordinateTransformation Gets or sets the GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation applied to this vectorlayer prior to rendering Declaration public virtual ICoordinateTransformation CoordinateTransformation { get; set; } Property Value Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation | Improve this Doc View Source Enabled Specified whether the layer is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public abstract Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer | Improve this Doc View Source LayerName Gets or sets the name of the layer Declaration public string LayerName { get; set; } Property Value Type Description String | Improve this Doc View Source LayerTitle Gets or sets the title of the layer Declaration public string LayerTitle { get; set; } Property Value Type Description String | Improve this Doc View Source MaxVisible Maximum visibility zoom, excluding this value Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Minimum visibility zoom, including this value Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source NeedsTransformation Gets a flag indicating if the layer needs coordinate transformation Declaration protected bool NeedsTransformation { get; } Property Value Type Description Boolean | Improve this Doc View Source Proj4Projection Proj4 projection definition string Declaration public string Proj4Projection { get; set; } Property Value Type Description String | Improve this Doc View Source ReverseCoordinateTransformation Certain Transformations cannot be inverted in ProjNet, in those cases use this property to set the reverse GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation (of CoordinateTransformation) to fetch data from Datasource If your CoordinateTransformation can be inverted you can leave this property to null Declaration public virtual ICoordinateTransformation ReverseCoordinateTransformation { get; set; } Property Value Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation | Improve this Doc View Source SourceFactory Gets the geometry factory to create source geometries Declaration protected IGeometryFactory SourceFactory { get; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public virtual int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Style Gets or sets the Style for this Layer Declaration public virtual IStyle Style { get; set; } Property Value Type Description IStyle | Improve this Doc View Source TargetFactory Gets the geometry factory to create target geometries Declaration protected IGeometryFactory TargetFactory { get; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source TargetSRID Gets or sets a value indicating the target spatial reference id Declaration public virtual int TargetSRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VisibilityUnits Gets or Sets what kind of units the Min/Max visible properties are defined in Declaration public VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits Methods | Improve this Doc View Source OnCoordinateTransformationChanged(EventArgs) Event invoker for the CoordinateTransformationChanged event Declaration protected virtual void OnCoordinateTransformationChanged(EventArgs e) Parameters Type Name Description EventArgs e The event's arguments | Improve this Doc View Source OnLayerNameChanged(EventArgs) Method called when LayerName has changed, to invoke LayerNameChanged Declaration protected virtual void OnLayerNameChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs The arguments associated with the event | Improve this Doc View Source OnLayerRendered(Graphics) Event invoker for the LayerRendered event. Declaration protected virtual void OnLayerRendered(Graphics g) Parameters Type Name Description Graphics g The graphics object | Improve this Doc View Source OnSridChanged(EventArgs) Method called when SRID has changed, to invoke SRIDChanged Declaration protected virtual void OnSridChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs The arguments associated with the event | Improve this Doc View Source OnStyleChanged(EventArgs) Method called when Style has changed, to invoke StyleChanged Declaration protected virtual void OnStyleChanged(EventArgs eventArgs) Parameters Type Name Description EventArgs eventArgs The arguments associated with the event | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, Map) Renders the layer Declaration [Obsolete(\"Use Render(Graphics, MapViewport, out Envelope affectedArea)\")] public virtual void Render(Graphics g, Map map) Parameters Type Name Description Graphics g Graphics object reference Map map Map which is rendered | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer using the current viewport Declaration public virtual void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered | Improve this Doc View Source Render(Graphics, MapViewport, out Rectangle) Renders the layer using the given graphics object and viewport. The affectedArea is an additional result. Declaration protected virtual void Render(Graphics g, MapViewport mvp, out Rectangle affectedArea) Parameters Type Name Description Graphics g A graphics object MapViewport mvp A map viewport Rectangle affectedArea The affected area. | Improve this Doc View Source ToSource(Envelope) Utility function to transform given envelope to the source envelope Declaration protected virtual Envelope ToSource(Envelope envelope) Parameters Type Name Description GeoAPI.Geometries.Envelope envelope The target envelope Returns Type Description GeoAPI.Geometries.Envelope The source envelope | Improve this Doc View Source ToSource(IGeometry) Function to transform geometry to the coordinate system defined by SRID Declaration protected virtual IGeometry ToSource(IGeometry geometry) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry A geometry Returns Type Description GeoAPI.Geometries.IGeometry The transformed geometry | Improve this Doc View Source ToString() Returns the name of the layer. Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source ToTarget(Envelope) Utility function to transform given envelope to the target envelope Declaration protected Envelope ToTarget(Envelope envelope) Parameters Type Name Description GeoAPI.Geometries.Envelope envelope The source envelope Returns Type Description GeoAPI.Geometries.Envelope The target envelope | Improve this Doc View Source ToTarget(Envelope, ICoordinateTransformation) Utility function to transform given envelope using a specific transformation Declaration protected virtual Envelope ToTarget(Envelope envelope, ICoordinateTransformation coordinateTransformation) Parameters Type Name Description GeoAPI.Geometries.Envelope envelope The source envelope GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation coordinateTransformation The GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation to use. Returns Type Description GeoAPI.Geometries.Envelope The target envelope | Improve this Doc View Source ToTarget(IGeometry) Function to transform geometry to the coordinate system defined by TargetSRID Declaration protected virtual IGeometry ToTarget(IGeometry geometry) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry A geometry Returns Type Description GeoAPI.Geometries.IGeometry The transformed geometry Events | Improve this Doc View Source CoordinateTransformationChanged Event raised when the CoordinateTransformation has changed Declaration public event EventHandler CoordinateTransformationChanged Event Type Type Description EventHandler | Improve this Doc View Source LayerNameChanged Event raised when the layers's LayerName property has changed Declaration public event EventHandler LayerNameChanged Event Type Type Description EventHandler | Improve this Doc View Source LayerRendered Event fired when the layer has been rendered Declaration public event Layer.LayerRenderedEventHandler LayerRendered Event Type Type Description Layer.LayerRenderedEventHandler | Improve this Doc View Source SRIDChanged Event raised when the layer's SRID property has changed Declaration public event EventHandler SRIDChanged Event Type Type Description EventHandler | Improve this Doc View Source StyleChanged Event raised when the layer's Style property has changed Declaration public event EventHandler StyleChanged Event Type Type Description EventHandler Explicit Interface Implementations | Improve this Doc View Source ILayerEx.Render(Graphics, MapViewport) Renders the layer using the current viewport Declaration Rectangle ILayerEx.Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Returns Type Description Rectangle Rectangle enclosing the actual area rendered on the graphics canvas Implements IDisposableEx System.IDisposable ILayerEx ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.Layer.LayerRenderedEventHandler.html": {
    "href": "api/SharpMap.Layers.Layer.LayerRenderedEventHandler.html",
    "title": "Delegate Layer.LayerRenderedEventHandler | SharpMap",
    "keywords": "Delegate Layer.LayerRenderedEventHandler EventHandler for event fired when the layer has been rendered Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate void LayerRenderedEventHandler(Layer layer, Graphics g); Parameters Type Name Description Layer layer Layer rendered Graphics g Reference to graphics object used for rendering"
  },
  "api/SharpMap.Layers.LayerCollection.html": {
    "href": "api/SharpMap.Layers.LayerCollection.html",
    "title": "Class LayerCollection | SharpMap",
    "keywords": "Class LayerCollection A collection of ILayer instances. Inheritance Object Collection < ILayer > BindingList < ILayer > LayerCollection VariableLayerCollection Implements IList < ILayer > ICollection < ILayer > IReadOnlyList < ILayer > IReadOnlyCollection < ILayer > IEnumerable < ILayer > IBindingList IList ICollection IEnumerable ICancelAddNew IRaiseItemChangedEvents INotifyCollectionChanged ILayersContainer Inherited Members BindingList<ILayer>.AddNew() BindingList<ILayer>.AddNewCore() BindingList<ILayer>.ApplySortCore(PropertyDescriptor, ListSortDirection) BindingList<ILayer>.CancelNew(Int32) BindingList<ILayer>.EndNew(Int32) BindingList<ILayer>.FindCore(PropertyDescriptor, Object) BindingList<ILayer>.OnListChanged(ListChangedEventArgs) BindingList<ILayer>.RemoveSortCore() BindingList<ILayer>.ResetBindings() BindingList<ILayer>.ResetItem(Int32) BindingList<ILayer>.IBindingList.AddIndex(PropertyDescriptor) BindingList<ILayer>.IBindingList.AddNew() BindingList<ILayer>.IBindingList.ApplySort(PropertyDescriptor, ListSortDirection) BindingList<ILayer>.IBindingList.Find(PropertyDescriptor, Object) BindingList<ILayer>.IBindingList.RemoveIndex(PropertyDescriptor) BindingList<ILayer>.IBindingList.RemoveSort() BindingList<ILayer>.AllowEdit BindingList<ILayer>.AllowNew BindingList<ILayer>.AllowRemove BindingList<ILayer>.IsSortedCore BindingList<ILayer>.RaiseListChangedEvents BindingList<ILayer>.SortDirectionCore BindingList<ILayer>.SortPropertyCore BindingList<ILayer>.SupportsChangeNotificationCore BindingList<ILayer>.SupportsSearchingCore BindingList<ILayer>.SupportsSortingCore BindingList<ILayer>.IBindingList.AllowEdit BindingList<ILayer>.IBindingList.AllowNew BindingList<ILayer>.IBindingList.AllowRemove BindingList<ILayer>.IBindingList.IsSorted BindingList<ILayer>.IBindingList.SortDirection BindingList<ILayer>.IBindingList.SortProperty BindingList<ILayer>.IBindingList.SupportsChangeNotification BindingList<ILayer>.IBindingList.SupportsSearching BindingList<ILayer>.IBindingList.SupportsSorting BindingList<ILayer>.IRaiseItemChangedEvents.RaisesItemChangedEvents BindingList<ILayer>.AddingNew BindingList<ILayer>.ListChanged System.Collections.ObjectModel.Collection<SharpMap.Layers.ILayer>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<SharpMap.Layers.ILayer>.System.Collections.IList.set_Item(System.Int32, System.Object) Collection<ILayer>.Add(ILayer) Collection<ILayer>.Clear() Collection<ILayer>.Contains(ILayer) Collection<ILayer>.CopyTo(ILayer[], Int32) Collection<ILayer>.GetEnumerator() Collection<ILayer>.IndexOf(ILayer) Collection<ILayer>.Remove(ILayer) Collection<ILayer>.RemoveAt(Int32) Collection<ILayer>.ICollection.CopyTo(Array, Int32) Collection<ILayer>.IEnumerable.GetEnumerator() Collection<ILayer>.IList.Add(Object) Collection<ILayer>.IList.Contains(Object) Collection<ILayer>.IList.IndexOf(Object) Collection<ILayer>.IList.Insert(Int32, Object) Collection<ILayer>.IList.Remove(Object) Collection<ILayer>.Count Collection<ILayer>.Item[Int32] Collection<ILayer>.Items Collection<ILayer>.ICollection<ILayer>.IsReadOnly Collection<ILayer>.ICollection.IsSynchronized Collection<ILayer>.ICollection.SyncRoot Collection<ILayer>.IList.IsFixedSize Collection<ILayer>.IList.IsReadOnly Collection<ILayer>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class LayerCollection : BindingList<ILayer>, IList<ILayer>, ICollection<ILayer>, IReadOnlyList<ILayer>, IReadOnlyCollection<ILayer>, IEnumerable<ILayer>, IBindingList, IList, ICollection, IEnumerable, ICancelAddNew, IRaiseItemChangedEvents, INotifyCollectionChanged, ILayersContainer Properties | Improve this Doc View Source Item[String] Gets or sets the layer with the given layerName . Declaration public virtual ILayer this[string layerName] { get; set; } Parameters Type Name Description String layerName Name of the layer to replace, if it exists. Property Value Type Description ILayer Methods | Improve this Doc View Source AddCollection(LayerCollection) Method to add all layers of other to this collection Declaration public void AddCollection(LayerCollection other) Parameters Type Name Description LayerCollection other A collection of layers | Improve this Doc View Source ClearItems() Removes all layers from the collection. Declaration protected override void ClearItems() Overrides System.ComponentModel.BindingList<SharpMap.Layers.ILayer>.ClearItems() | Improve this Doc View Source Clone() Returns a cloned copy of the LayerCollection Declaration public LayerCollection Clone() Returns Type Description LayerCollection Remarks The layer instances are the same as in the original collection, however if a layer implements ICloneable this could not be true. | Improve this Doc View Source GetLayerByName(String) Function to search for a layer in this collection by its name Declaration public ILayer GetLayerByName(string layerName) Parameters Type Name Description String layerName The name of the layer to search for Returns Type Description ILayer The layer if found, otherwise null | Improve this Doc View Source Insert(Int32, ILayer) Inserts the layer at the given index . Declaration public void Insert(int index, ILayer layer) Parameters Type Name Description Int32 index The index at which to add the layer. ILayer layer The layer to insert. Exceptions Type Condition ArgumentOutOfRangeException Thrown if index is less than 0 or is greater or equal to Count . | Improve this Doc View Source InsertItem(Int32, ILayer) Declaration protected override void InsertItem(int index, ILayer item) Parameters Type Name Description Int32 index ILayer item Overrides System.ComponentModel.BindingList<SharpMap.Layers.ILayer>.InsertItem(System.Int32, SharpMap.Layers.ILayer) | Improve this Doc View Source OnAddingNew(AddingNewEventArgs) Declaration protected override void OnAddingNew(AddingNewEventArgs e) Parameters Type Name Description AddingNewEventArgs e Overrides System.ComponentModel.BindingList<SharpMap.Layers.ILayer>.OnAddingNew(System.ComponentModel.AddingNewEventArgs) | Improve this Doc View Source OnCollectionChanged(NotifyCollectionChangedEventArgs) Fires the CollectionChanged event. Declaration protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs e) Parameters Type Name Description NotifyCollectionChangedEventArgs e Event to fire- | Improve this Doc View Source RemoveItem(Int32) Declaration protected override void RemoveItem(int index) Parameters Type Name Description Int32 index Overrides System.ComponentModel.BindingList<SharpMap.Layers.ILayer>.RemoveItem(System.Int32) | Improve this Doc View Source SetItem(Int32, ILayer) Declaration protected override void SetItem(int index, ILayer item) Parameters Type Name Description Int32 index ILayer item Overrides System.ComponentModel.BindingList<SharpMap.Layers.ILayer>.SetItem(System.Int32, SharpMap.Layers.ILayer) Events | Improve this Doc View Source CollectionChanged Event raised when this collection has changed. Declaration public event NotifyCollectionChangedEventHandler CollectionChanged Event Type Type Description NotifyCollectionChangedEventHandler Explicit Interface Implementations | Improve this Doc View Source ILayersContainer.Layers Declaration IList<ILayer> ILayersContainer.Layers { get; } Returns Type Description IList < ILayer > Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.ComponentModel.IBindingList System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.ComponentModel.ICancelAddNew System.ComponentModel.IRaiseItemChangedEvents System.Collections.Specialized.INotifyCollectionChanged ILayersContainer"
  },
  "api/SharpMap.Layers.LayerCollectionType.html": {
    "href": "api/SharpMap.Layers.LayerCollectionType.html",
    "title": "Enum LayerCollectionType | SharpMap",
    "keywords": "Enum LayerCollectionType Types of layer collections Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public enum LayerCollectionType Fields Name Description Background Layer collection for layers are completely opaque and serve as Background (e.g. WMS, OSM) Static Layer collection for layers with datasources that are more or less static (e.g ShapeFiles) Variable Layer collection for layers with datasources that update frequently (e.g. moving vehicle)"
  },
  "api/SharpMap.Layers.LayerGroup.html": {
    "href": "api/SharpMap.Layers.LayerGroup.html",
    "title": "Class LayerGroup | SharpMap",
    "keywords": "Class LayerGroup Class for holding a group of layers. Inheritance Object DisposableObject Layer LayerGroup Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer ICloneable ILayersContainer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class LayerGroup : Layer, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer, ICloneable, ILayersContainer Remarks The Group layer is useful for grouping a set of layers, for instance a set of image tiles, and expose them as a single layer Constructors | Improve this Doc View Source LayerGroup(String) Initializes a new group layer Declaration public LayerGroup(string layername) Parameters Type Name Description String layername Name of layer Properties | Improve this Doc View Source CoordinateTransformation Gets or sets the GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation applied to this vectorlayer prior to rendering Declaration public override ICoordinateTransformation CoordinateTransformation { get; set; } Property Value Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation Overrides Layer.CoordinateTransformation | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source IsQueryEnabled Whether the layer is queryable when used in a SharpMap.Web.Wms.WmsServer, ExecuteIntersectionQuery() will be possible in all other situations when set to FALSE Declaration public virtual bool IsQueryEnabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Layers Sublayers in the group Declaration public virtual ObservableCollection<ILayer> Layers { get; set; } Property Value Type Description ObservableCollection < ILayer > | Improve this Doc View Source ReverseCoordinateTransformation Certain Transformations cannot be inverted in ProjNet, in those cases use this property to set the reverse GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation (of CoordinateTransformation) to fetch data from Datasource If your CoordinateTransformation can be inverted you can leave this property to null Declaration public override ICoordinateTransformation ReverseCoordinateTransformation { get; set; } Property Value Type Description GeoAPI.CoordinateSystems.Transformations.ICoordinateTransformation Overrides Layer.ReverseCoordinateTransformation | Improve this Doc View Source SkipTransformationPropagation Gets or sets whether coordinate transformations applied to the group should propagate to inner layers. Declaration public virtual bool SkipTransformationPropagation { get; set; } Property Value Type Description Boolean Remarks Default is false, transformations are propagated to children layers. | Improve this Doc View Source SRID The spatial reference ID (CRS) Propogation to child layers is dependent on SkipTransformationPropagation Changes to SRID with propogation enabled will cause both CoordinateTransformation and ReverseCoordinateTransformation to be reset Declaration public override int SRID { get; set; } Property Value Type Description Int32 Overrides Layer.SRID | Improve this Doc View Source TargetSRID The target spatial reference id Propogation to child layers is dependent on SkipTransformationPropagation Changes to TargetSRID with propogation enabled will cause both CoordinateTransformation and ReverseCoordinateTransformation to be reset Declaration public override int TargetSRID { get; set; } Property Value Type Description Int32 Overrides Layer.TargetSRID Methods | Improve this Doc View Source Clone() Returns a cloned copy of the group. Declaration public virtual object Clone() Returns Type Description Object | Improve this Doc View Source CreateUninitializedInstance() Create an empty new LayerGroup instance. Declaration protected virtual LayerGroup CreateUninitializedInstance() Returns Type Description LayerGroup Returns an empty LayerGroup. Remarks This is used by the Clone() method, inheritors must override this method. | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public virtual void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public virtual void ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetLayerByName(String) Returns a layer by its name Declaration public virtual ILayer GetLayerByName(string name) Parameters Type Name Description String name Name of layer Returns Type Description ILayer Layer | Improve this Doc View Source OnLayersChanged() Fires the LayersChanged event. Declaration protected virtual void OnLayersChanged() | Improve this Doc View Source OnLayersChanging() Fires the LayersChanging event. Declaration protected virtual void OnLayersChanging() | Improve this Doc View Source ReleaseManagedResources() Disposes the object Declaration protected override void ReleaseManagedResources() Overrides Layer.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) Events | Improve this Doc View Source LayersChanged Event fired when the Layers collection is replaced. Declaration public event EventHandler LayersChanged Event Type Type Description EventHandler | Improve this Doc View Source LayersChanging Event fires when the Layers collection is going to be replaced. Declaration public event EventHandler LayersChanging Event Type Type Description EventHandler Explicit Interface Implementations | Improve this Doc View Source ILayersContainer.Layers Declaration IList<ILayer> ILayersContainer.Layers { get; } Returns Type Description IList < ILayer > Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer System.ICloneable ILayersContainer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.MapNewTileAvaliabledHandler.html": {
    "href": "api/SharpMap.Layers.MapNewTileAvaliabledHandler.html",
    "title": "Delegate MapNewTileAvaliabledHandler | SharpMap",
    "keywords": "Delegate MapNewTileAvaliabledHandler Delegate function definition for handling ITileAsyncLayer s MapNewTileAvaliable event Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate void MapNewTileAvaliabledHandler(ITileAsyncLayer sender, Envelope bbox, Bitmap bm, int sourceWidth, int sourceHeight, ImageAttributes imageAttributes); Parameters Type Name Description ITileAsyncLayer sender The sender GeoAPI.Geometries.Envelope bbox The bounding box of the tile Bitmap bm The tile bitmap Int32 sourceWidth The tiles width Int32 sourceHeight The tiles height ImageAttributes imageAttributes The ImageAttributes to use when rendering the tile"
  },
  "api/SharpMap.Layers.Symbolizer.AnyGeometryVectorLayer.html": {
    "href": "api/SharpMap.Layers.Symbolizer.AnyGeometryVectorLayer.html",
    "title": "Class AnyGeometryVectorLayer | SharpMap",
    "keywords": "Class AnyGeometryVectorLayer Vector layer class than can symbolize any type of geometry Inheritance Object DisposableObject Layer BaseVectorLayer < GeoAPI.Geometries.IGeometry > AnyGeometryVectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer Inherited Members BaseVectorLayer<IGeometry>.SmoothingMode BaseVectorLayer<IGeometry>.DataSource BaseVectorLayer<IGeometry>.Symbolizer BaseVectorLayer<IGeometry>.Render(Graphics, MapViewport) BaseVectorLayer<IGeometry>.Envelope BaseVectorLayer<IGeometry>.OnRender(Graphics, MapViewport) BaseVectorLayer<IGeometry>.OnRendering(Graphics, MapViewport) BaseVectorLayer<IGeometry>.OnRendered(Graphics, MapViewport) BaseVectorLayer<IGeometry>.LabelLayer BaseVectorLayer<IGeometry>.ReleaseManagedResources() BaseVectorLayer<IGeometry>.ExecuteIntersectionQuery(Envelope, FeatureDataSet) BaseVectorLayer<IGeometry>.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseVectorLayer<IGeometry>.IsQueryEnabled Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class AnyGeometryVectorLayer : BaseVectorLayer<IGeometry>, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer Constructors | Improve this Doc View Source AnyGeometryVectorLayer(String) Creates an instance of this class Declaration public AnyGeometryVectorLayer(string layerName) Parameters Type Name Description String layerName The layer's name | Improve this Doc View Source AnyGeometryVectorLayer(String, IProvider) Creates an instance of this class Declaration public AnyGeometryVectorLayer(string layerName, IProvider datasource) Parameters Type Name Description String layerName The layer's name IProvider datasource The layers's datasource Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.Symbolizer.BaseVectorLayer-1.html": {
    "href": "api/SharpMap.Layers.Symbolizer.BaseVectorLayer-1.html",
    "title": "Class BaseVectorLayer<TGeometry> | SharpMap",
    "keywords": "Class BaseVectorLayer<TGeometry> Base class for all vector layers using ISymbolizer<TGeometry> approach. Inheritance Object DisposableObject Layer BaseVectorLayer<TGeometry> AnyGeometryVectorLayer LinealVectorLayer PolygonalVectorLayer PuntalVectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public abstract class BaseVectorLayer<TGeometry> : Layer, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer where TGeometry : class Type Parameters Name Description TGeometry The geometry type Constructors | Improve this Doc View Source BaseVectorLayer(String, IProvider, ISymbolizer<TGeometry>) Creates an instance of this class Declaration protected BaseVectorLayer(string layerName, IProvider dataSource, ISymbolizer<TGeometry> symbolizer) Parameters Type Name Description String layerName The name of the layer IProvider dataSource The data source ISymbolizer <TGeometry> symbolizer The symbolizer Properties | Improve this Doc View Source DataSource Gets or sets the datasource Declaration public IProvider DataSource { get; set; } Property Value Type Description IProvider | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source IsQueryEnabled Whether the layer is queryable when used in a SharpMap.Web.Wms.WmsServer, ExecuteIntersectionQuery() will be possible in all other situations when set to FALSE Declaration public bool IsQueryEnabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LabelLayer Gets or sets the LabelLayer associated with the vector layer Declaration public LabelLayer LabelLayer { get; set; } Property Value Type Description LabelLayer | Improve this Doc View Source SmoothingMode Gets or sets whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas Declaration [Obsolete(\"Use Symbolizer.SmoothingMode\")] public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode | Improve this Doc View Source Symbolizer Gets or sets the symbolizer associated with this layer. Declaration public ISymbolizer<TGeometry> Symbolizer { get; set; } Property Value Type Description ISymbolizer <TGeometry> Methods | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source OnRender(Graphics, MapViewport) Method called to initialize the rendering process Declaration protected virtual void OnRender(Graphics graphics, MapViewport map) Parameters Type Name Description Graphics graphics The graphics object to render upon MapViewport map The map | Improve this Doc View Source OnRendered(Graphics, MapViewport) Method called to signal that the layer has been rendered Declaration protected virtual void OnRendered(Graphics graphics, MapViewport map) Parameters Type Name Description Graphics graphics The graphics object to render upon MapViewport map The map | Improve this Doc View Source OnRendering(Graphics, MapViewport) Method called to render the layer Declaration protected virtual void OnRendering(Graphics graphics, MapViewport map) Parameters Type Name Description Graphics graphics The graphics object to render upon MapViewport map The map | Improve this Doc View Source ReleaseManagedResources() Release all managed resources Declaration protected override void ReleaseManagedResources() Overrides Layer.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, MapViewport) Method to render the layer upon the graphics object g using the map map Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Overrides Layer.Render(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.Symbolizer.html": {
    "href": "api/SharpMap.Layers.Symbolizer.html",
    "title": "Namespace SharpMap.Layers.Symbolizer | SharpMap",
    "keywords": "Namespace SharpMap.Layers.Symbolizer Classes AnyGeometryVectorLayer Vector layer class than can symbolize any type of geometry BaseVectorLayer<TGeometry> Base class for all vector layers using ISymbolizer<TGeometry> approach. LinealVectorLayer A vector layer class that can symbolize lineal geometries PolygonalVectorLayer A vector layer class that can symbolize polygonal geometries. PuntalVectorLayer A vector layer class that can symbolize puntal geometries"
  },
  "api/SharpMap.Layers.Symbolizer.LinealVectorLayer.html": {
    "href": "api/SharpMap.Layers.Symbolizer.LinealVectorLayer.html",
    "title": "Class LinealVectorLayer | SharpMap",
    "keywords": "Class LinealVectorLayer A vector layer class that can symbolize lineal geometries Inheritance Object DisposableObject Layer BaseVectorLayer < GeoAPI.Geometries.ILineal > LinealVectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer Inherited Members BaseVectorLayer<ILineal>.SmoothingMode BaseVectorLayer<ILineal>.DataSource BaseVectorLayer<ILineal>.Symbolizer BaseVectorLayer<ILineal>.Render(Graphics, MapViewport) BaseVectorLayer<ILineal>.Envelope BaseVectorLayer<ILineal>.OnRender(Graphics, MapViewport) BaseVectorLayer<ILineal>.OnRendering(Graphics, MapViewport) BaseVectorLayer<ILineal>.OnRendered(Graphics, MapViewport) BaseVectorLayer<ILineal>.LabelLayer BaseVectorLayer<ILineal>.ReleaseManagedResources() BaseVectorLayer<ILineal>.ExecuteIntersectionQuery(Envelope, FeatureDataSet) BaseVectorLayer<ILineal>.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseVectorLayer<ILineal>.IsQueryEnabled Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class LinealVectorLayer : BaseVectorLayer<ILineal>, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer Constructors | Improve this Doc View Source LinealVectorLayer(String) Creates an instance of this class Declaration public LinealVectorLayer(string layerName) Parameters Type Name Description String layerName The layer's name | Improve this Doc View Source LinealVectorLayer(String, IProvider) Creates an instance of this class Declaration public LinealVectorLayer(string layerName, IProvider dataSource) Parameters Type Name Description String layerName The layer's name IProvider dataSource The layer's datasource | Improve this Doc View Source LinealVectorLayer(String, IProvider, ISymbolizer<ILineal>) Creates an instance of this class Declaration public LinealVectorLayer(string layerName, IProvider dataSource, ISymbolizer<ILineal> symbolizer) Parameters Type Name Description String layerName The layer's name IProvider dataSource The layer's datasource ISymbolizer < GeoAPI.Geometries.ILineal > symbolizer The layer's symbolizer Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.Symbolizer.PolygonalVectorLayer.html": {
    "href": "api/SharpMap.Layers.Symbolizer.PolygonalVectorLayer.html",
    "title": "Class PolygonalVectorLayer | SharpMap",
    "keywords": "Class PolygonalVectorLayer A vector layer class that can symbolize polygonal geometries. Inheritance Object DisposableObject Layer BaseVectorLayer < GeoAPI.Geometries.IPolygonal > PolygonalVectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer Inherited Members BaseVectorLayer<IPolygonal>.SmoothingMode BaseVectorLayer<IPolygonal>.DataSource BaseVectorLayer<IPolygonal>.Symbolizer BaseVectorLayer<IPolygonal>.Render(Graphics, MapViewport) BaseVectorLayer<IPolygonal>.Envelope BaseVectorLayer<IPolygonal>.OnRender(Graphics, MapViewport) BaseVectorLayer<IPolygonal>.OnRendering(Graphics, MapViewport) BaseVectorLayer<IPolygonal>.OnRendered(Graphics, MapViewport) BaseVectorLayer<IPolygonal>.LabelLayer BaseVectorLayer<IPolygonal>.ReleaseManagedResources() BaseVectorLayer<IPolygonal>.ExecuteIntersectionQuery(Envelope, FeatureDataSet) BaseVectorLayer<IPolygonal>.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseVectorLayer<IPolygonal>.IsQueryEnabled Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class PolygonalVectorLayer : BaseVectorLayer<IPolygonal>, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer Constructors | Improve this Doc View Source PolygonalVectorLayer(String) Creates an instance of this class Declaration public PolygonalVectorLayer(string layerName) Parameters Type Name Description String layerName The layers's name | Improve this Doc View Source PolygonalVectorLayer(String, IProvider) Creates an instance of this class Declaration public PolygonalVectorLayer(string layerName, IProvider dataSource) Parameters Type Name Description String layerName The layers's name IProvider dataSource The layers's datasource | Improve this Doc View Source PolygonalVectorLayer(String, IProvider, ISymbolizer<IPolygonal>) Creates an instance of this class Declaration public PolygonalVectorLayer(string layerName, IProvider dataSource, ISymbolizer<IPolygonal> symbolizer) Parameters Type Name Description String layerName The layer's name IProvider dataSource The layer's datasource ISymbolizer < GeoAPI.Geometries.IPolygonal > symbolizer The layer's symbolizer Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.Symbolizer.PuntalVectorLayer.html": {
    "href": "api/SharpMap.Layers.Symbolizer.PuntalVectorLayer.html",
    "title": "Class PuntalVectorLayer | SharpMap",
    "keywords": "Class PuntalVectorLayer A vector layer class that can symbolize puntal geometries Inheritance Object DisposableObject Layer BaseVectorLayer < GeoAPI.Geometries.IPuntal > PuntalVectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer Inherited Members BaseVectorLayer<IPuntal>.SmoothingMode BaseVectorLayer<IPuntal>.DataSource BaseVectorLayer<IPuntal>.Symbolizer BaseVectorLayer<IPuntal>.Render(Graphics, MapViewport) BaseVectorLayer<IPuntal>.Envelope BaseVectorLayer<IPuntal>.OnRender(Graphics, MapViewport) BaseVectorLayer<IPuntal>.OnRendering(Graphics, MapViewport) BaseVectorLayer<IPuntal>.OnRendered(Graphics, MapViewport) BaseVectorLayer<IPuntal>.LabelLayer BaseVectorLayer<IPuntal>.ReleaseManagedResources() BaseVectorLayer<IPuntal>.ExecuteIntersectionQuery(Envelope, FeatureDataSet) BaseVectorLayer<IPuntal>.ExecuteIntersectionQuery(IGeometry, FeatureDataSet) BaseVectorLayer<IPuntal>.IsQueryEnabled Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class PuntalVectorLayer : BaseVectorLayer<IPuntal>, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer Constructors | Improve this Doc View Source PuntalVectorLayer(String) Creates an instance of this class Declaration public PuntalVectorLayer(string layerName) Parameters Type Name Description String layerName The layer's name | Improve this Doc View Source PuntalVectorLayer(String, IProvider) Creates an instance of this class Declaration public PuntalVectorLayer(string layerName, IProvider dataSource) Parameters Type Name Description String layerName The layer's name IProvider dataSource The layer's data source | Improve this Doc View Source PuntalVectorLayer(String, IProvider, ISymbolizer<IPuntal>) Creates an instance of this class Declaration public PuntalVectorLayer(string layerName, IProvider dataSource, ISymbolizer<IPuntal> symbolizer) Parameters Type Name Description String layerName The layer's name IProvider dataSource The layer's data source ISymbolizer < GeoAPI.Geometries.IPuntal > symbolizer The layer's symbolizer Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.TiledWmsLayer.html": {
    "href": "api/SharpMap.Layers.TiledWmsLayer.html",
    "title": "Class TiledWmsLayer | SharpMap",
    "keywords": "Class TiledWmsLayer Client layer for WMS-C service Inheritance Object DisposableObject Layer TiledWmsLayer Implements IDisposableEx IDisposable ILayerEx ILayer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.ReleaseManagedResources() Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.SRID Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Obsolete(\"use TileLayer instead\")] public class TiledWmsLayer : Layer, IDisposableEx, IDisposable, ILayerEx, ILayer Remarks Initialize the TiledWmsLayer with the url to the capabilities document and it will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Examples The following example creates a map with a TiledWmsLayer the metacarta tile server map = new SharpMap.Map(mapImage1.Size); string url = \"http://labs.metacarta.com/wms-c/tilecache.py?version=1.1.1&request=GetCapabilities&service=wms-c\"; TiledWmsLayer tiledWmsLayer = new TiledWmsLayer(\"Metacarta\", url); tiledWmsLayer.TileSetsActive.Add(tiledWmsLayer.TileSets[\"satellite\"].Name); map.Layers.Add(tiledWmsLayer); map.ZoomToBox(new GeoAPI.Geometries.Envelope(-180.0, 180.0, -90.0, 90.0)); Constructors | Improve this Doc View Source TiledWmsLayer(String, String) Initializes a new layer, and downloads and parses the service description Declaration public TiledWmsLayer(string layername, string url) Parameters Type Name Description String layername Layername String url Url of WMS server's Capabilities Remarks In and ASP.NET application the service description is automatically cached for 24 hours when not specified | Improve this Doc View Source TiledWmsLayer(String, String, WebProxy) Initializes a new layer, and downloads and parses the service description Declaration public TiledWmsLayer(string layername, string url, WebProxy proxy) Parameters Type Name Description String layername Layername String url Url of WMS server's Capabilities WebProxy proxy Proxy Remarks In and ASP.NET application the service description is automatically cached for 24 hours when not specified | Improve this Doc View Source TiledWmsLayer(String, String, TimeSpan) Initializes a new layer, and downloads and parses the service description Declaration public TiledWmsLayer(string layername, string url, TimeSpan cachetime) Parameters Type Name Description String layername Layername String url Url of WMS server's Capabilities TimeSpan cachetime Time for caching Service Description (ASP.NET only) | Improve this Doc View Source TiledWmsLayer(String, String, TimeSpan, WebProxy) Initializes a new layer, and downloads and parses the service description Declaration public TiledWmsLayer(string layername, string url, TimeSpan cachetime, WebProxy proxy) Parameters Type Name Description String layername Layername String url Url of WMS server's Capabilities TimeSpan cachetime Time for caching Service Description (ASP.NET only) WebProxy proxy Proxy Properties | Improve this Doc View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer. Declaration public bool ContinueOnError { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source Proxy Gets or sets the proxy used for requesting a webresource Declaration public WebProxy Proxy { get; set; } Property Value Type Description WebProxy | Improve this Doc View Source TileSets Gets the collection of TileSets that will be rendered Declaration public SortedList<string, TileSet> TileSets { get; } Property Value Type Description SortedList < String , TileSet > | Improve this Doc View Source TileSetsActive Gets a list of tile sets that are currently active Declaration public Collection<string> TileSetsActive { get; } Property Value Type Description Collection < String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source AddCustomParameter(String, String) Appends a custom parameter name-value pair to the WMS request Declaration public void AddCustomParameter(string name, string value) Parameters Type Name Description String name Name of custom parameter String value Value of custom parameter | Improve this Doc View Source RemoveAllCustomParameters() Removes all custom parameter from the WMS request Declaration public void RemoveAllCustomParameters() | Improve this Doc View Source RemoveCustomParameter(String) Removes a custom parameter name-value pair from the WMS request Declaration public void RemoveCustomParameter(string name) Parameters Type Name Description String name Name of the custom parameter to remove | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILayerEx ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.VariableLayerCollection.html": {
    "href": "api/SharpMap.Layers.VariableLayerCollection.html",
    "title": "Class VariableLayerCollection | SharpMap",
    "keywords": "Class VariableLayerCollection Layer collection Inheritance Object Collection < ILayer > BindingList < ILayer > LayerCollection VariableLayerCollection Implements IList < ILayer > ICollection < ILayer > IReadOnlyList < ILayer > IReadOnlyCollection < ILayer > IEnumerable < ILayer > IBindingList IList ICollection IEnumerable ICancelAddNew IRaiseItemChangedEvents INotifyCollectionChanged ILayersContainer Inherited Members LayerCollection.Item[String] LayerCollection.Clone() LayerCollection.AddCollection(LayerCollection) LayerCollection.Insert(Int32, ILayer) LayerCollection.OnAddingNew(AddingNewEventArgs) LayerCollection.GetLayerByName(String) LayerCollection.ClearItems() LayerCollection.CollectionChanged LayerCollection.OnCollectionChanged(NotifyCollectionChangedEventArgs) LayerCollection.RemoveItem(Int32) LayerCollection.SetItem(Int32, ILayer) LayerCollection.ILayersContainer.Layers BindingList<ILayer>.AddNew() BindingList<ILayer>.AddNewCore() BindingList<ILayer>.ApplySortCore(PropertyDescriptor, ListSortDirection) BindingList<ILayer>.CancelNew(Int32) BindingList<ILayer>.EndNew(Int32) BindingList<ILayer>.FindCore(PropertyDescriptor, Object) BindingList<ILayer>.OnListChanged(ListChangedEventArgs) BindingList<ILayer>.RemoveSortCore() BindingList<ILayer>.ResetBindings() BindingList<ILayer>.ResetItem(Int32) BindingList<ILayer>.IBindingList.AddIndex(PropertyDescriptor) BindingList<ILayer>.IBindingList.AddNew() BindingList<ILayer>.IBindingList.ApplySort(PropertyDescriptor, ListSortDirection) BindingList<ILayer>.IBindingList.Find(PropertyDescriptor, Object) BindingList<ILayer>.IBindingList.RemoveIndex(PropertyDescriptor) BindingList<ILayer>.IBindingList.RemoveSort() BindingList<ILayer>.AllowEdit BindingList<ILayer>.AllowNew BindingList<ILayer>.AllowRemove BindingList<ILayer>.IsSortedCore BindingList<ILayer>.RaiseListChangedEvents BindingList<ILayer>.SortDirectionCore BindingList<ILayer>.SortPropertyCore BindingList<ILayer>.SupportsChangeNotificationCore BindingList<ILayer>.SupportsSearchingCore BindingList<ILayer>.SupportsSortingCore BindingList<ILayer>.IBindingList.AllowEdit BindingList<ILayer>.IBindingList.AllowNew BindingList<ILayer>.IBindingList.AllowRemove BindingList<ILayer>.IBindingList.IsSorted BindingList<ILayer>.IBindingList.SortDirection BindingList<ILayer>.IBindingList.SortProperty BindingList<ILayer>.IBindingList.SupportsChangeNotification BindingList<ILayer>.IBindingList.SupportsSearching BindingList<ILayer>.IBindingList.SupportsSorting BindingList<ILayer>.IRaiseItemChangedEvents.RaisesItemChangedEvents BindingList<ILayer>.AddingNew BindingList<ILayer>.ListChanged System.Collections.ObjectModel.Collection<SharpMap.Layers.ILayer>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<SharpMap.Layers.ILayer>.System.Collections.IList.set_Item(System.Int32, System.Object) Collection<ILayer>.Add(ILayer) Collection<ILayer>.Clear() Collection<ILayer>.Contains(ILayer) Collection<ILayer>.CopyTo(ILayer[], Int32) Collection<ILayer>.GetEnumerator() Collection<ILayer>.IndexOf(ILayer) Collection<ILayer>.Remove(ILayer) Collection<ILayer>.RemoveAt(Int32) Collection<ILayer>.ICollection.CopyTo(Array, Int32) Collection<ILayer>.IEnumerable.GetEnumerator() Collection<ILayer>.IList.Add(Object) Collection<ILayer>.IList.Contains(Object) Collection<ILayer>.IList.IndexOf(Object) Collection<ILayer>.IList.Insert(Int32, Object) Collection<ILayer>.IList.Remove(Object) Collection<ILayer>.Count Collection<ILayer>.Item[Int32] Collection<ILayer>.Items Collection<ILayer>.ICollection<ILayer>.IsReadOnly Collection<ILayer>.ICollection.IsSynchronized Collection<ILayer>.ICollection.SyncRoot Collection<ILayer>.IList.IsFixedSize Collection<ILayer>.IList.IsReadOnly Collection<ILayer>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class VariableLayerCollection : LayerCollection, IList<ILayer>, ICollection<ILayer>, IReadOnlyList<ILayer>, IReadOnlyCollection<ILayer>, IEnumerable<ILayer>, IBindingList, IList, ICollection, IEnumerable, ICancelAddNew, IRaiseItemChangedEvents, INotifyCollectionChanged, ILayersContainer Constructors | Improve this Doc View Source VariableLayerCollection(LayerCollection) Creates an instance of this class Declaration public VariableLayerCollection(LayerCollection variableLayers) Parameters Type Name Description LayerCollection variableLayers Layer collection that holds layers with data sources updating frequently Properties | Improve this Doc View Source Interval Gets/sets the interval in which to update layers Declaration public double Interval { get; set; } Property Value Type Description Double | Improve this Doc View Source Pause Gets/Sets whether this collection should currently be updated or not Declaration public bool Pause { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source InsertItem(Int32, ILayer) Declaration protected override void InsertItem(int index, ILayer layer) Parameters Type Name Description Int32 index ILayer layer Overrides LayerCollection.InsertItem(Int32, ILayer) | Improve this Doc View Source OnDeserializing(StreamingContext) Method called when deserializing this object. Declaration [OnDeserializing] public void OnDeserializing(StreamingContext context) Parameters Type Name Description StreamingContext context | Improve this Doc View Source TouchTimer() Method to restart the internal Timer Declaration public void TouchTimer() Events | Improve this Doc View Source VariableLayerCollectionRequery Event fired every Interval to force requery; Declaration public event VariableLayerCollectionRequeryHandler VariableLayerCollectionRequery Event Type Type Description VariableLayerCollectionRequeryHandler Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.ComponentModel.IBindingList System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.ComponentModel.ICancelAddNew System.ComponentModel.IRaiseItemChangedEvents System.Collections.Specialized.INotifyCollectionChanged ILayersContainer"
  },
  "api/SharpMap.Layers.VariableLayerCollectionRequeryHandler.html": {
    "href": "api/SharpMap.Layers.VariableLayerCollectionRequeryHandler.html",
    "title": "Delegate VariableLayerCollectionRequeryHandler | SharpMap",
    "keywords": "Delegate VariableLayerCollectionRequeryHandler Signature of function to handle VariableLayerCollectionRequery event Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax public delegate void VariableLayerCollectionRequeryHandler(object sender, EventArgs e); Parameters Type Name Description Object sender The sender of the event EventArgs e The arguments, EventArgs.Empty in all cases"
  },
  "api/SharpMap.Layers.VectorLayer.html": {
    "href": "api/SharpMap.Layers.VectorLayer.html",
    "title": "Class VectorLayer | SharpMap",
    "keywords": "Class VectorLayer Class for vector layer properties Inheritance Object DisposableObject Layer VectorLayer Implements IDisposableEx IDisposable ILayerEx ICanQueryLayer ILayer ICloneable Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class VectorLayer : Layer, IDisposableEx, IDisposable, ILayerEx, ICanQueryLayer, ILayer, ICloneable Constructors | Improve this Doc View Source VectorLayer(String) Initializes a new layer Declaration public VectorLayer(string layername) Parameters Type Name Description String layername Name of layer | Improve this Doc View Source VectorLayer(String, IBaseProvider) Initializes a new layer with a specified datasource Declaration public VectorLayer(string layername, IBaseProvider dataSource) Parameters Type Name Description String layername Name of layer IBaseProvider dataSource Data source Properties | Improve this Doc View Source CacheExtent Gets or sets a value indicating whether the layer envelope should be treated as static or not. Declaration public virtual bool CacheExtent { get; set; } Property Value Type Description Boolean Remarks When CacheExtent is enabled the layer Envelope will be calculated only once from DataSource, this helps to speed up the Envelope calculation with some DataProviders. Default is false for backward compatibility. | Improve this Doc View Source ClippingEnabled Specifies whether polygons should be clipped prior to rendering Declaration public bool ClippingEnabled { get; set; } Property Value Type Description Boolean Remarks Clipping will clip GeoAPI.Geometries.IPolygon and GeoAPI.Geometries.IMultiPolygon to the current view prior to rendering the object. Enabling clipping might improve rendering speed if you are rendering only small portions of very large objects. | Improve this Doc View Source DataSource Gets or sets the datasource Declaration public IBaseProvider DataSource { get; set; } Property Value Type Description IBaseProvider | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source IsQueryEnabled Whether the layer is queryable when used in a SharpMap.Web.Wms.WmsServer, ExecuteIntersectionQuery() will be possible in all other situations when set to FALSE Declaration public bool IsQueryEnabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SmoothingMode Render whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode | Improve this Doc View Source SRID Gets or sets the SRID of this VectorLayer's data source Declaration public override int SRID { get; set; } Property Value Type Description Int32 Overrides Layer.SRID | Improve this Doc View Source Style Gets or sets the rendering style of the vector layer. Declaration public VectorStyle Style { get; set; } Property Value Type Description VectorStyle | Improve this Doc View Source Theme Gets or sets thematic settings for the layer. Set to null to ignore thematics Declaration public ITheme Theme { get; set; } Property Value Type Description ITheme | Improve this Doc View Source Themes Gets or sets a Dictionary with themes suitable for this layer. A theme in the dictionary can be used for rendering be setting the Theme Property using a delegate function Declaration public Dictionary<string, ITheme> Themes { get; set; } Property Value Type Description Dictionary < String , ITheme > Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source ExecuteIntersectionQuery(Envelope, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(Envelope box, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.Envelope box Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source ExecuteIntersectionQuery(IGeometry, FeatureDataSet) Returns the data associated with all the geometries that are intersected by 'geom' Declaration public void ExecuteIntersectionQuery(IGeometry geometry, FeatureDataSet ds) Parameters Type Name Description GeoAPI.Geometries.IGeometry geometry Geometry to intersect with FeatureDataSet ds FeatureDataSet to fill data into | Improve this Doc View Source GetStylesToRender(IStyle) Unpacks styles to render (can be nested group-styles) Declaration public static IEnumerable<IStyle> GetStylesToRender(IStyle style) Parameters Type Name Description IStyle style Returns Type Description IEnumerable < IStyle > | Improve this Doc View Source ReleaseManagedResources() Disposes the object Declaration protected override void ReleaseManagedResources() Overrides Layer.ReleaseManagedResources() | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer to a graphics object, using the given map viewport Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) | Improve this Doc View Source RenderGeometry(Graphics, MapViewport, IGeometry, VectorStyle) Method to render feature using style Declaration protected void RenderGeometry(Graphics g, MapViewport map, IGeometry feature, VectorStyle style) Parameters Type Name Description Graphics g The graphics object MapViewport map The map GeoAPI.Geometries.IGeometry feature The feature's geometry VectorStyle style The style to apply | Improve this Doc View Source RenderGeometryEx(Graphics, MapViewport, IGeometry, VectorStyle) Function to render feature using style and returning the area covered. Declaration protected RectangleF RenderGeometryEx(Graphics g, MapViewport map, IGeometry feature, VectorStyle style) Parameters Type Name Description Graphics g The graphics object MapViewport map The map GeoAPI.Geometries.IGeometry feature The feature's geometry VectorStyle style The style to apply Returns Type Description RectangleF | Improve this Doc View Source RenderInternal(Graphics, MapViewport, Envelope) Method to render this layer to the map, applying Style . Declaration protected void RenderInternal(Graphics g, MapViewport map, Envelope envelope) Parameters Type Name Description Graphics g The graphics object MapViewport map The map object GeoAPI.Geometries.Envelope envelope The envelope to render | Improve this Doc View Source RenderInternal(Graphics, MapViewport, Envelope, ITheme) Method to render this layer to the map, applying theme . Declaration protected void RenderInternal(Graphics g, MapViewport map, Envelope envelope, ITheme theme) Parameters Type Name Description Graphics g The graphics object MapViewport map The map object GeoAPI.Geometries.Envelope envelope The envelope to render ITheme theme The theme to apply Implements IDisposableEx System.IDisposable ILayerEx ICanQueryLayer ILayer System.ICloneable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Layers.WmsLayer.html": {
    "href": "api/SharpMap.Layers.WmsLayer.html",
    "title": "Class WmsLayer | SharpMap",
    "keywords": "Class WmsLayer Web Map Service layer Inheritance Object DisposableObject Layer WmsLayer Implements IDisposableEx IDisposable ILayerEx ILayer Inherited Members Layer.LayerRendered Layer.SRIDChanged Layer.OnSridChanged(EventArgs) Layer.StyleChanged Layer.OnStyleChanged(EventArgs) Layer.LayerNameChanged Layer.OnLayerNameChanged(EventArgs) Layer.CanvasArea Layer.ReleaseManagedResources() Layer.CoordinateTransformation Layer.CoordinateTransformationChanged Layer.OnCoordinateTransformationChanged(EventArgs) Layer.SourceFactory Layer.TargetFactory Layer.ReverseCoordinateTransformation Layer.NeedsTransformation Layer.LayerName Layer.LayerTitle Layer.TargetSRID Layer.Render(Graphics, Map) Layer.ILayerEx.Render(Graphics, MapViewport) Layer.Render(Graphics, MapViewport, Rectangle) Layer.OnLayerRendered(Graphics) Layer.Proj4Projection Layer.MinVisible Layer.MaxVisible Layer.VisibilityUnits Layer.Enabled Layer.Style Layer.ToString() Layer.ToTarget(Envelope, ICoordinateTransformation) Layer.ToTarget(Envelope) Layer.ToSource(Envelope) Layer.ToTarget(IGeometry) Layer.ToSource(IGeometry) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Layers Assembly : SharpMap.dll Syntax [Serializable] public class WmsLayer : Layer, IDisposableEx, IDisposable, ILayerEx, ILayer Remarks The WmsLayer is currently very basic and doesn't support automatic fetching of the WMS Service Description. Instead you would have to add the necessary parameters to the URL, and the WmsLayer will set the remaining BoundingBox property and proper requests that changes between the requests. See the example below. Examples The following example creates a map with a WMS layer the Demis WMS Server myMap = new SharpMap.Map(new System.Drawing.Size(500,250); string wmsUrl = \"http://www2.demis.nl/mapserver/request.asp\"; SharpMap.Layers.WmsLayer myLayer = new SharpMap.Layers.WmsLayer(\"Demis WMS\", myLayer); myLayer.AddLayer(\"Bathymetry\"); myLayer.AddLayer(\"Countries\"); myLayer.AddLayer(\"Topography\"); myLayer.AddLayer(\"Hillshading\"); myLayer.SetImageFormat(layWms.OutputFormats[0]); myLayer.SRID = 4326; myMap.Layers.Add(myLayer); myMap.Center = new GeoAPI.Geometries.Coordinate(0, 0); myMap.Zoom = 360; myMap.MaximumZoom = 360; myMap.MinimumZoom = 0.1; Constructors | Improve this Doc View Source WmsLayer(String, Client) Creates an instance of this class Declaration public WmsLayer(string layername, Client wmsClient) Parameters Type Name Description String layername Client wmsClient | Improve this Doc View Source WmsLayer(String, String) Initializes a new layer, and downloads and parses the service description Declaration public WmsLayer(string layername, string url) Parameters Type Name Description String layername Layername String url Url of WMS server Remarks In and ASP.NET application the service description is automatically cached for 24 hours when not specified | Improve this Doc View Source WmsLayer(String, String, IWebProxy) Initializes a new layer, and downloads and parses the service description Declaration public WmsLayer(string layername, string url, IWebProxy proxy) Parameters Type Name Description String layername Layername String url Url of WMS server IWebProxy proxy Proxy Remarks In and ASP.NET application the service description is automatically cached for 24 hours when not specified | Improve this Doc View Source WmsLayer(String, String, TimeSpan) Initializes a new layer, and downloads and parses the service description Declaration public WmsLayer(string layername, string url, TimeSpan cachetime) Parameters Type Name Description String layername Layername String url Url of WMS server TimeSpan cachetime Time for caching Service Description (ASP.NET only) | Improve this Doc View Source WmsLayer(String, String, TimeSpan, IWebProxy) Initializes a new layer, and downloads and parses the service description Declaration public WmsLayer(string layername, string url, TimeSpan cachetime, IWebProxy proxy) Parameters Type Name Description String layername Layername String url Url of WMS server TimeSpan cachetime Time for caching Service Description (ASP.NET only) IWebProxy proxy Proxy | Improve this Doc View Source WmsLayer(String, String, TimeSpan, IWebProxy, ICredentials) Initializes a new layer, and downloads and parses the service description Declaration public WmsLayer(string layername, string url, TimeSpan cachetime, IWebProxy proxy, ICredentials credentials) Parameters Type Name Description String layername Layername String url Url of WMS server TimeSpan cachetime Time for caching Service Description (ASP.NET only) IWebProxy proxy Proxy ICredentials credentials Properties | Improve this Doc View Source Authority Gets or sets a value indicating the authority of the spatial reference system. Declaration public string Authority { get; set; } Property Value Type Description String Remarks Must not be null | Improve this Doc View Source BgColor Sets the optional backgroundcolor. Declaration public Color BgColor { get; set; } Property Value Type Description Color | Improve this Doc View Source CapabilitiesUrl Gets a value indicating the URL for the 'GetCapablities' request Declaration public string CapabilitiesUrl { get; } Property Value Type Description String | Improve this Doc View Source ContinueOnError Specifies whether to throw an exception if the Wms request failed, or to just skip rendering the layer Declaration public bool ContinueOnError { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Credentials Provides the base authentication interface for retrieving credentials for Web client authentication. Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source Envelope Returns the extent of the layer Declaration public override Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope Bounding box corresponding to the extent of the features in the layer Overrides Layer.Envelope | Improve this Doc View Source ImageAttributes When specified, applies image attributes at image (fx. make WMS layer semi-transparent) Declaration [Obsolete(\"Use Opacity instead\")] public ImageAttributes ImageAttributes { get; set; } Property Value Type Description ImageAttributes Remarks You can make the WMS layer semi-transparent by settings a up a ColorMatrix, or scale/translate the colors in any other way you like. Setting the WMS layer to be semi-transparent. float[][] colorMatrixElements = { new float[] {1, 0, 0, 0, 0}, new float[] {0, 1, 0, 0, 0}, new float[] {0, 0, 1, 0, 0}, new float[] {0, 0, 0, 0.5, 0}, new float[] {0, 0, 0, 0, 1}}; ColorMatrix colorMatrix = new ColorMatrix(colorMatrixElements); ImageAttributes imageAttributes = new ImageAttributes(); imageAttributes.SetColorMatrix( colorMatrix, ColorMatrixFlag.Default, ColorAdjustType.Bitmap); myWmsLayer.ImageAttributes = imageAttributes; | Improve this Doc View Source LayerList Gets the list of enabled layers Declaration public Collection<string> LayerList { get; } Property Value Type Description Collection < String > | Improve this Doc View Source Opacity Gets or sets a value indicating the opacity degree 1.0 = No transparency (Default) 0.0 = full transparency Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source OutputFormats Gets the list of available formats Declaration public Collection<string> OutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source Proxy Gets or sets the proxy used for requesting a webresource Declaration public IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source RootLayer Gets the hierarchical list of available WMS layers from this service Declaration public Client.WmsServerLayer RootLayer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source ServiceDescription Gets the service description from this server Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source SRID Gets or sets value indicating the spatial reference ID (CRS) Declaration public override int SRID { get; set; } Property Value Type Description Int32 Overrides Layer.SRID | Improve this Doc View Source StylesList Gets the list of enabled styles Declaration public Collection<string> StylesList { get; } Property Value Type Description Collection < String > | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Transparancy Sets the optional transparancy. The WMS server might ignore this when not implemented and will ignore if the imageformat is jpg Declaration [Obsolete(\"Use Transparent\")] public bool Transparancy { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Transparent Sets if the image should have transparent background. The WMS server might ignore this when not implemented and will ignore if the imageformat is jpg Declaration public bool Transparent { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Version Gets or sets the WMS Server version of this service Declaration public string Version { get; set; } Property Value Type Description String Methods | Improve this Doc View Source AddChildLayers(Client.WmsServerLayer, Boolean) Recursive method for adding all WMS layers to layer list Skips \"top level\" layer if addFirstLayer is false Declaration public void AddChildLayers(Client.WmsServerLayer wmsServerLayer, bool addFirstLayer) Parameters Type Name Description Client.WmsServerLayer wmsServerLayer Boolean addFirstLayer | Improve this Doc View Source AddLayer(String) Adds a layer to WMS request Declaration public void AddLayer(string name) Parameters Type Name Description String name Name of layer Remarks Layer names are case sensitive. Exceptions Type Condition ArgumentException Throws an exception if an unknown layer is added | Improve this Doc View Source AddStyle(String) Adds a style to the style collection Declaration public void AddStyle(string name) Parameters Type Name Description String name Name of style Exceptions Type Condition ArgumentException Throws an exception is an unknown layer is added | Improve this Doc View Source ForceOnlineResourceUrl(String) Can be used to force the OnlineResourceUrl for services that return incorrect (often internal) onlineresources Declaration public void ForceOnlineResourceUrl(string url) Parameters Type Name Description String url Url without any OGC specific parameters | Improve this Doc View Source GetPreferredMethod() Returns the preferred URL to use when communicating with the wms-server Favors GET-requests over POST-requests Declaration protected Client.WmsOnlineResource GetPreferredMethod() Returns Type Description Client.WmsOnlineResource Instance of Client.WmsOnlineResource | Improve this Doc View Source GetRequestUrl(Envelope, Size) Gets the URL for a map request base on current settings, the image size and boundingbox Declaration public virtual string GetRequestUrl(Envelope box, Size size) Parameters Type Name Description GeoAPI.Geometries.Envelope box Area the WMS request should cover Size size Size of image Returns Type Description String URL for WMS request | Improve this Doc View Source RemoveAllLayers() Removes all layers Declaration public void RemoveAllLayers() | Improve this Doc View Source RemoveAllStyles() Removes all styles from the list Declaration public void RemoveAllStyles() | Improve this Doc View Source RemoveLayer(String) Removes a layer from the layer list Declaration public void RemoveLayer(string name) Parameters Type Name Description String name Name of layer to remove | Improve this Doc View Source RemoveLayerAt(Int32) Removes the layer at the specified index Declaration public void RemoveLayerAt(int index) Parameters Type Name Description Int32 index | Improve this Doc View Source RemoveStyle(String) Removes a style from the collection Declaration public void RemoveStyle(string name) Parameters Type Name Description String name Name of style | Improve this Doc View Source RemoveStyleAt(Int32) Removes a style at specified index Declaration public void RemoveStyleAt(int index) Parameters Type Name Description Int32 index Index | Improve this Doc View Source Render(Graphics, MapViewport) Renders the layer Declaration public override void Render(Graphics g, MapViewport map) Parameters Type Name Description Graphics g Graphics object reference MapViewport map Map which is rendered Overrides Layer.Render(Graphics, MapViewport) | Improve this Doc View Source SetImageFormat(String) Sets the image type to use when requesting images from the WMS server Declaration public void SetImageFormat(string mimeType) Parameters Type Name Description String mimeType Mime type of image format Remarks See the OutputFormats property for a list of available mime types supported by the WMS server Exceptions Type Condition ArgumentException Throws an exception if either the mime type isn't offered by the WMS or GDI+ doesn't support this mime type. | Improve this Doc View Source SetOpacity(Single) Set the opacity on the drawn image, this method updates the ImageAttributes with opacity-values and is used when SharpMap draws the image, the the wms-server 1.0 = No transparency 0.0 = full transparency Declaration public void SetOpacity(float opacity) Parameters Type Name Description Single opacity Implements IDisposableEx System.IDisposable ILayerEx ILayer Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(ILayer) CoordinateSystemExtensions.GetFactory(ILayer)"
  },
  "api/SharpMap.Map.html": {
    "href": "api/SharpMap.Map.html",
    "title": "Class Map | SharpMap",
    "keywords": "Class Map Map class, the main holder for a MapObject in SharpMap Inheritance Object Map Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax [Serializable] public class Map : IDisposable Examples Creating a new map instance, adding layers and rendering the map: Constructors | Improve this Doc View Source Map() Initializes a new map Declaration public Map() | Improve this Doc View Source Map(Size) Initializes a new map Declaration public Map(Size size) Parameters Type Name Description Size size Size of map in pixels Fields | Improve this Doc View Source DisposeLayersOnDispose Specifies whether to trigger a dispose on all layers (and their datasources) contained in this map when the map-object is disposed. The default behaviour is true unless the map is a result of a Map.Clone() operation in which case the value is false If you reuse your datasources or layers between many map-objects you should set this property to false in order for them to keep existing after a map.dispose() Declaration public bool DisposeLayersOnDispose Field Value Type Description Boolean | Improve this Doc View Source NumberFormatEnUs Used for converting numbers to/from strings Declaration public static NumberFormatInfo NumberFormatEnUs Field Value Type Description NumberFormatInfo Properties | Improve this Doc View Source BackColor Map background color (defaults to transparent) Declaration public Color BackColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BackgroundLayer Collection of background Layers Declaration public LayerCollection BackgroundLayer { get; } Property Value Type Description LayerCollection | Improve this Doc View Source Center Center of map in WCS Declaration public Coordinate Center { get; set; } Property Value Type Description GeoAPI.Geometries.Coordinate | Improve this Doc View Source CenterOfInterest A focus point on the map. Declaration public Coordinate CenterOfInterest { get; set; } Property Value Type Description GeoAPI.Geometries.Coordinate Remarks This point stays at its local position when zooming by wheel. Possible tiles are fetched in order of the distance to this point. | Improve this Doc View Source Decorations List of all map decorations Declaration public IList<IMapDecoration> Decorations { get; } Property Value Type Description IList < IMapDecoration > | Improve this Doc View Source Disclaimer Copyright notice to be placed on the map Declaration [Obsolete(\"Use Disclaimer as MapDecoration instead!\")] public string Disclaimer { get; set; } Property Value Type Description String | Improve this Doc View Source DisclaimerFont Font to use for the Disclaimer Declaration [Obsolete(\"Use Disclaimer as MapDecoration instead!\")] public Font DisclaimerFont { get; set; } Property Value Type Description Font | Improve this Doc View Source DisclaimerLocation Location for the disclaimer 2|1 -+- 3|0 Declaration [Obsolete(\"Use Disclaimer as MapDecoration instead!\")] public int DisclaimerLocation { get; set; } Property Value Type Description Int32 | Improve this Doc View Source EnforceMaximumExtents Gets or sets a value indicating if MaximumExtents should be enforced or not. Declaration public bool EnforceMaximumExtents { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Envelope Gets the rectilinear extents of the current map based on the current Zoom , Center , map Size , and (optionally) the MapTransform If a MapTransform is applied, the envelope CONTAINING the rotated view will be returned (used by layers to spatially select data) and the aspect ratio will NOT be the same as map Size . If aspect ratio is important then refer to Zoom and MapHeight Declaration public Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source Factory Factory used to create geometries Declaration public IGeometryFactory Factory { get; } Property Value Type Description GeoAPI.Geometries.IGeometryFactory | Improve this Doc View Source ID Gets or sets the unique identifier of the map. Declaration public Guid ID { get; set; } Property Value Type Description Guid | Improve this Doc View Source Layers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public LayerCollection Layers { get; } Property Value Type Description LayerCollection | Improve this Doc View Source MapHeight Height of map in world units Declaration public double MapHeight { get; } Property Value Type Description Double | Improve this Doc View Source MapScale Gets or Sets the Scale of the map (related to current DPI-settings of rendering) Declaration public double MapScale { get; set; } Property Value Type Description Double | Improve this Doc View Source MapTransform Using the MapTransform you can alter the coordinate system of the map rendering. This makes it possible to rotate the image, for instance to have another direction than north upwards. The matrix elements are stored, and a new matrix is instantiated for every request Declaration public Matrix MapTransform { get; set; } Property Value Type Description Matrix Examples Rotate the map output +45 degrees around its center (ie north arrow will point to the top-right corner): System.Drawing.Drawing2D.Matrix maptransform = new System.Drawing.Drawing2D.Matrix(); //Create transformation matrix maptransform.RotateAt(45,new PointF(myMap.Size.Width/2,myMap.Size.Height/2)); //Apply 45 degrees rotation around the center of the map myMap.MapTransform = maptransform; //Apply transformation to map | Improve this Doc View Source MapTransformRotation MapTransform Rotation in degrees. Facilitates determining if map is rotated without locking MapTransform. Positive rotation is applied anti-clockwise, with the apparent effect of north arrow rotating clockwise. Declaration public float MapTransformRotation { get; } Property Value Type Description Single | Improve this Doc View Source MaximumExtents Gets or sets a value indicating the maximum visible extent Declaration public Envelope MaximumExtents { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source MaximumZoom Maximum zoom amount allowed Declaration public double MaximumZoom { get; set; } Property Value Type Description Double | Improve this Doc View Source MinimumZoom Minimum zoom amount allowed Declaration public double MinimumZoom { get; set; } Property Value Type Description Double | Improve this Doc View Source PixelAspectRatio Gets or sets the aspect-ratio of the pixel scales. A value less than 1 will make the map stretch upwards, and larger than 1 will make it smaller. Declaration public double PixelAspectRatio { get; set; } Property Value Type Description Double Exceptions Type Condition ArgumentException Throws an argument exception when value is 0 or less. | Improve this Doc View Source PixelHeight Returns the height of a pixel in world coordinate units. Declaration public double PixelHeight { get; } Property Value Type Description Double Remarks The value returned is the same as PixelSize unless PixelAspectRatio is different from 1. | Improve this Doc View Source PixelSize Get Returns the size of a pixel in world coordinate units Declaration public double PixelSize { get; } Property Value Type Description Double | Improve this Doc View Source PixelWidth Returns the width of a pixel in world coordinate units. Declaration public double PixelWidth { get; } Property Value Type Description Double Remarks The value returned is the same as PixelSize . | Improve this Doc View Source Size Size of output map Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source SRID Gets or sets the SRID of the map Declaration public int SRID { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VariableLayers A collection of layers. The first layer in the list is drawn first, the last one on top. Declaration public VariableLayerCollection VariableLayers { get; } Property Value Type Description VariableLayerCollection | Improve this Doc View Source Zoom Gets or sets the zoom level of map. Declaration public double Zoom { get; set; } Property Value Type Description Double Remarks The zoom level corresponds to the apparent width of the map in WCS units, regardless of any MapTransform . Zoom will only equal Envelope .Width when MapTransformRotation is 0 or 180 degrees A zoomlevel of 0 will result in an empty map being rendered, but will not throw an exception Methods | Improve this Doc View Source Clone() Returns a cloned copy of this map-object. Layers are not cloned. The same instances are referenced from the cloned copy as from the original. The property DisposeLayersOnDispose is however false on this object (which prevents layers beeing disposed and then not usable from the original map) Declaration public Map Clone() Returns Type Description Map Instance of Map | Improve this Doc View Source Configure() Method to invoke the static constructor of this class Declaration public static void Configure() | Improve this Doc View Source Dispose() Disposes the map object Declaration public void Dispose() | Improve this Doc View Source FindLayer(String) Returns an enumerable for all layers containing the search parameter in the LayerName property Declaration public IEnumerable<ILayer> FindLayer(string layername) Parameters Type Name Description String layername Search parameter Returns Type Description IEnumerable < ILayer > IEnumerable | Improve this Doc View Source GetExtents() Gets the extents of the map based on the extents of all the layers in the layers collection Declaration public Envelope GetExtents() Returns Type Description GeoAPI.Geometries.Envelope Full map extents | Improve this Doc View Source GetLayerByName(String) Returns a layer by its name Declaration public ILayer GetLayerByName(string name) Parameters Type Name Description String name Name of layer Returns Type Description ILayer Layer | Improve this Doc View Source GetMap() Renders the map to an image Declaration public Image GetMap() Returns Type Description Image the map image | Improve this Doc View Source GetMap(Int32) Renders the map to an image with the supplied resolution Declaration public Image GetMap(int resolution) Parameters Type Name Description Int32 resolution The resolution of the image Returns Type Description Image The map image | Improve this Doc View Source GetMapAsMetafile() Renders the map to a Metafile (Vectorimage). Declaration public Metafile GetMapAsMetafile() Returns Type Description Metafile The current map rendered as to a Metafile Remarks A Metafile can be saved as WMF,EMF etc. or put onto the clipboard for paste in other applications such av Word-processors which will give a high quality vector image in that application. | Improve this Doc View Source GetMapAsMetafile(String) Renders the map to a Metafile (Vectorimage). Declaration public Metafile GetMapAsMetafile(string metafileName) Parameters Type Name Description String metafileName The filename of the metafile. If this is null or empty the metafile is not saved. Returns Type Description Metafile The current map rendered as to a Metafile Remarks A Metafile can be saved as WMF,EMF etc. or put onto the clipboard for paste in other applications such av Word-processors which will give a high quality vector image in that application. | Improve this Doc View Source GetMapScale(Int32) Returns the mapscale if the map was to be rendered at the current Zoom with the specified DPI-settings Declaration public double GetMapScale(int dpi) Parameters Type Name Description Int32 dpi Returns Type Description Double | Improve this Doc View Source GetMapZoomFromScale(Double, Int32) Calculate the Zoom value for a given Scale value Declaration public double GetMapZoomFromScale(double scale, int dpi) Parameters Type Name Description Double scale Int32 dpi Returns Type Description Double | Improve this Doc View Source ImageToWorld(PointF, Boolean) Converts a point from image coordinates to world coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public Coordinate ImageToWorld(PointF p, bool careAboutMapTransform = false) Parameters Type Name Description PointF p Point in image coordinates. Note: if you wish to preserve the input value then you must clone the point as it will be modified if a MapTransform is applied Boolean careAboutMapTransform Indicates whether MapTransform should be applied. Returns Type Description GeoAPI.Geometries.Coordinate Point in world coordinates | Improve this Doc View Source ImageToWorld(PointF[], Boolean) Converts a point array from image coordinates to world coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public Coordinate[] ImageToWorld(PointF[] points, bool careAboutMapTransform = false) Parameters Type Name Description PointF [] points Point array in image coordinates. Note: if you wish to preserve the input values then you must clone the point array as it will be modified if a MapTransform is applied Boolean careAboutMapTransform Indicates whether MapTransform should be applied. Returns Type Description GeoAPI.Geometries.Coordinate [] Point array in world coordinates | Improve this Doc View Source MapNewTileAvaliableHandler(ITileAsyncLayer, Envelope, Bitmap, Int32, Int32, ImageAttributes) Declaration public void MapNewTileAvaliableHandler(ITileAsyncLayer sender, Envelope bbox, Bitmap bm, int sourceWidth, int sourceHeight, ImageAttributes imageAttributes) Parameters Type Name Description ITileAsyncLayer sender GeoAPI.Geometries.Envelope bbox Bitmap bm Int32 sourceWidth Int32 sourceHeight ImageAttributes imageAttributes | Improve this Doc View Source OnLayerRendered(ILayer, LayerCollectionType) Method called when layer of layerCollectionType has been rendered. This fires the LayerRendered and LayerRenderedEx event. Declaration protected virtual void OnLayerRendered(ILayer layer, LayerCollectionType layerCollectionType) Parameters Type Name Description ILayer layer The layer to render LayerCollectionType layerCollectionType The collection type | Improve this Doc View Source OnLayerRendering(ILayer, LayerCollectionType) Method called when starting to render layer of layerCollectionType . This fires the LayerRendering event. Declaration protected virtual void OnLayerRendering(ILayer layer, LayerCollectionType layerCollectionType) Parameters Type Name Description ILayer layer The layer to render LayerCollectionType layerCollectionType The collection type | Improve this Doc View Source OnMapRendered(Graphics) Fired when Map is rendered Declaration protected virtual void OnMapRendered(Graphics g) Parameters Type Name Description Graphics g | Improve this Doc View Source OnMapRendering(Graphics) Fired when map is rendering Declaration protected virtual void OnMapRendering(Graphics g) Parameters Type Name Description Graphics g | Improve this Doc View Source OnRefreshNeeded(EventArgs) Fires the RefreshNeeded event. Declaration protected virtual void OnRefreshNeeded(EventArgs e) Parameters Type Name Description EventArgs e EventArgs argument. | Improve this Doc View Source RenderMap(Graphics) Renders the map using the provided Graphics object. Declaration public void RenderMap(Graphics g) Parameters Type Name Description Graphics g the Graphics object to use Exceptions Type Condition ArgumentNullException if Graphics object is null. InvalidOperationException if there are no layers to render. | Improve this Doc View Source RenderMap(Graphics, LayerCollectionType) Renders the map using the provided Graphics object. Declaration public void RenderMap(Graphics g, LayerCollectionType layerCollectionType) Parameters Type Name Description Graphics g the Graphics object to use LayerCollectionType layerCollectionType the LayerCollectionType to use Exceptions Type Condition ArgumentNullException if Graphics object is null. InvalidOperationException if there are no layers to render. | Improve this Doc View Source RenderMap(Graphics, LayerCollectionType, Boolean, Boolean) Renders the map using the provided Graphics object. Declaration public void RenderMap(Graphics g, LayerCollectionType layerCollectionType, bool drawMapDecorations, bool drawTransparent) Parameters Type Name Description Graphics g the Graphics object to use LayerCollectionType layerCollectionType the LayerCollectionType to use Boolean drawMapDecorations Set whether to draw map decorations on the map (if such are set) Boolean drawTransparent Set whether to draw with transparent background or with BackColor as background Exceptions Type Condition ArgumentNullException if Graphics object is null. InvalidOperationException if there are no layers to render. | Improve this Doc View Source WorldToImage(Coordinate, Boolean) Converts a point in world coordinates to image coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public PointF WorldToImage(Coordinate p, bool careAboutMapTransform = false) Parameters Type Name Description GeoAPI.Geometries.Coordinate p Point in world coordinates Boolean careAboutMapTransform Indicates whether MapTransform should be applied. When rendering to image, the Graphics object has usually applied MapTransform Returns Type Description PointF PointF in image coordinates | Improve this Doc View Source WorldToImage(Coordinate[], Boolean) Converts an array of world coordinates to image coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public PointF[] WorldToImage(Coordinate[] coordinates, bool careAboutMapTransform = false) Parameters Type Name Description GeoAPI.Geometries.Coordinate [] coordinates Coordinate array in world coordinates Boolean careAboutMapTransform Indicates whether MapTransform should be applied. True for typical coordinate calcs, False when rendering to image as the Graphics object has already applied the MapTransform Returns Type Description PointF [] PointF array in image coordinates | Improve this Doc View Source ZoomToBox(Envelope, Boolean) Zooms the map to fit a bounding box Declaration public void ZoomToBox(Envelope bbox, bool careAboutTransform = false) Parameters Type Name Description GeoAPI.Geometries.Envelope bbox Boolean careAboutTransform True if any map rotation should be taken into account (eg ZoomToExtents). False if rotation has already been accounted for (eg Zoom prev / next stack, or non-rotated views) Remarks NOTE: If the aspect ratio of the box and the aspect ratio of the mapsize isn't the same, the resulting map-envelope will be adjusted so that it contains the bounding box, thus making the resulting envelope larger! | Improve this Doc View Source ZoomToExtents() Zooms to the extents of all layers Declaration public void ZoomToExtents() Events | Improve this Doc View Source LayerRendered Event fired when a layer has been rendered Declaration [Obsolete(\"Use LayerRenderedEx\")] public event EventHandler LayerRendered Event Type Type Description EventHandler | Improve this Doc View Source LayerRenderedEx Event fired when one layer have been rendered Declaration public event EventHandler<LayerRenderingEventArgs> LayerRenderedEx Event Type Type Description EventHandler < LayerRenderingEventArgs > | Improve this Doc View Source LayerRendering Event fired when one layer have been rendered Declaration public event EventHandler<LayerRenderingEventArgs> LayerRendering Event Type Type Description EventHandler < LayerRenderingEventArgs > | Improve this Doc View Source LayersChanged Event fired when the maps layer list have been changed Declaration [Obsolete(\"This event is never invoked since it has been made impossible to change the LayerCollection for a map instance.\")] public event Map.LayersChangedEventHandler LayersChanged Event Type Type Description Map.LayersChangedEventHandler | Improve this Doc View Source MapNewTileAvaliable Event fired when a new Tile is available in a TileAsyncLayer Declaration public event MapNewTileAvaliabledHandler MapNewTileAvaliable Event Type Type Description MapNewTileAvaliabledHandler | Improve this Doc View Source MapRendered Event fired when all layers have been rendered Declaration public event Map.MapRenderedEventHandler MapRendered Event Type Type Description Map.MapRenderedEventHandler | Improve this Doc View Source MapRendering Event fired when all layers are about to be rendered Declaration public event Map.MapRenderedEventHandler MapRendering Event Type Type Description Map.MapRenderedEventHandler | Improve this Doc View Source MapViewOnChange Event fired when the zoomlevel or the center point has been changed Declaration public event Map.MapViewChangedHandler MapViewOnChange Event Type Type Description Map.MapViewChangedHandler | Improve this Doc View Source RefreshNeeded Event that is called when a layer have changed and the map need to redraw Declaration public event EventHandler RefreshNeeded Event Type Type Description EventHandler Implements System.IDisposable Extension Methods CoordinateSystemExtensions.GetCoordinateSystem(Map) CoordinateSystemExtensions.GetFactory(Map)"
  },
  "api/SharpMap.Map.LayersChangedEventHandler.html": {
    "href": "api/SharpMap.Map.LayersChangedEventHandler.html",
    "title": "Delegate Map.LayersChangedEventHandler | SharpMap",
    "keywords": "Delegate Map.LayersChangedEventHandler EventHandler for event fired when the maps layer list has been changed Namespace : SharpMap Assembly : SharpMap.dll Syntax public delegate void LayersChangedEventHandler();"
  },
  "api/SharpMap.Map.MapRenderedEventHandler.html": {
    "href": "api/SharpMap.Map.MapRenderedEventHandler.html",
    "title": "Delegate Map.MapRenderedEventHandler | SharpMap",
    "keywords": "Delegate Map.MapRenderedEventHandler EventHandler for event fired when all layers have been rendered Namespace : SharpMap Assembly : SharpMap.dll Syntax public delegate void MapRenderedEventHandler(Graphics g); Parameters Type Name Description Graphics g"
  },
  "api/SharpMap.Map.MapRenderingEventHandler.html": {
    "href": "api/SharpMap.Map.MapRenderingEventHandler.html",
    "title": "Delegate Map.MapRenderingEventHandler | SharpMap",
    "keywords": "Delegate Map.MapRenderingEventHandler EventHandler for event fired when all layers are about to be rendered Namespace : SharpMap Assembly : SharpMap.dll Syntax public delegate void MapRenderingEventHandler(Graphics g); Parameters Type Name Description Graphics g"
  },
  "api/SharpMap.Map.MapViewChangedHandler.html": {
    "href": "api/SharpMap.Map.MapViewChangedHandler.html",
    "title": "Delegate Map.MapViewChangedHandler | SharpMap",
    "keywords": "Delegate Map.MapViewChangedHandler EventHandler for event fired when the zoomlevel or the center point has been changed Namespace : SharpMap Assembly : SharpMap.dll Syntax public delegate void MapViewChangedHandler();"
  },
  "api/SharpMap.MapViewport.html": {
    "href": "api/SharpMap.MapViewport.html",
    "title": "Class MapViewport | SharpMap",
    "keywords": "Class MapViewport A Map utility class, that encapsulates all data required for rendering. Inheritance Object MapViewport Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax public class MapViewport Remarks This is a value class Constructors | Improve this Doc View Source MapViewport(Map) Creates an instance of this class based on the provided map Declaration public MapViewport(Map map) Parameters Type Name Description Map map The Map | Improve this Doc View Source MapViewport(Guid, Int32, Double, Double, Envelope, Size, Double, Matrix, Matrix, Single) Creates an instance of this class Declaration public MapViewport(Guid mapId, int srid, double zoom, double mapHeight, Envelope env, Size size, double pixelAspectRatio, Matrix mapTransform, Matrix mapTransformInverted, float mapTransformRotation) Parameters Type Name Description Guid mapId The id of the map Int32 srid The spatial reference Double zoom current map zoom Double mapHeight map height GeoAPI.Geometries.Envelope env The envelope containing the viewport Size size The size of the viewport Double pixelAspectRatio A ratio between width and height Matrix mapTransform An affine map transform matrix Matrix mapTransformInverted The affine map transformation that inverts mapTransform Single mapTransformRotation The rotation in degrees applied by mapTransform Properties | Improve this Doc View Source Center Gets a value indicating the center of the map viewport Declaration public Coordinate Center { get; } Property Value Type Description GeoAPI.Geometries.Coordinate | Improve this Doc View Source CenterOfInterest Gets a value indicating the center of the map viewport Declaration public Coordinate CenterOfInterest { get; set; } Property Value Type Description GeoAPI.Geometries.Coordinate | Improve this Doc View Source Envelope Gets the rectilinear extents of the map based on the current Zoom , Center , map Size , and (optionally) the MapTransform If a MapTransform is applied, the envelope CONTAINING the rotated view will be returned (used by layers to spatially select data) and the aspect ratio will NOT be the same as map Size . If aspect ratio is important then refer to Zoom and MapHeight Declaration public Envelope Envelope { get; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ID Gets a value indicating the which Map this viewport belongs to. Declaration public Guid ID { get; } Property Value Type Description Guid | Improve this Doc View Source Left Applicable to non-rotated views only, returning the minimum X value of the map viewport in world units Declaration public double Left { get; } Property Value Type Description Double | Improve this Doc View Source MapHeight Gets a value indicating the height of the map viewport in world units Declaration public double MapHeight { get; } Property Value Type Description Double | Improve this Doc View Source MapTransform Gets a value indicating the transformation that has to be applied when rendering the map Declaration public Matrix MapTransform { get; } Property Value Type Description Matrix | Improve this Doc View Source MapTransformInverted Gets a value indicating the inverse transformation that is applied when rendering the map Declaration public Matrix MapTransformInverted { get; } Property Value Type Description Matrix | Improve this Doc View Source MapTransformRotation Map rotation in degrees (defined by MapTransform ) Declaration public float MapTransformRotation { get; } Property Value Type Description Single | Improve this Doc View Source PixelAspectRatio Gets or sets the aspect-ratio of the pixel scales. A value less than 1 will make the map stretch upwards, and larger than 1 will make it smaller. Declaration public double PixelAspectRatio { get; } Property Value Type Description Double Exceptions Type Condition ArgumentException Throws an argument exception when value is 0 or less. | Improve this Doc View Source PixelHeight Returns the height of a pixel in world coordinate units. Declaration public double PixelHeight { get; } Property Value Type Description Double | Improve this Doc View Source PixelWidth Returns the width of a pixel in world coordinate units. Declaration public double PixelWidth { get; } Property Value Type Description Double | Improve this Doc View Source Size Gets a value indicating the size of the map Declaration public Size Size { get; } Property Value Type Description Size | Improve this Doc View Source SRID Gets a value indicating the spatial reference id of the map Declaration public int SRID { get; } Property Value Type Description Int32 | Improve this Doc View Source Top Applicable to non-rotated views only, returning the maximum Y value of the map viewport in world units Declaration public double Top { get; } Property Value Type Description Double | Improve this Doc View Source Zoom Gets a value indicating the zoom of the map viewport Declaration public double Zoom { get; } Property Value Type Description Double Remarks This value is identical to SharpMap.MapViewport.MapWidth Methods | Improve this Doc View Source GetMapScale(Int32) Function to compute the denominator of the viewport's scale when using a given dpi resolution. Declaration public double GetMapScale(int dpi) Parameters Type Name Description Int32 dpi The resolution Returns Type Description Double The scale's denominator | Improve this Doc View Source ImageToWorld(PointF, Boolean) Converts a point from image coordinates to world coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public Coordinate ImageToWorld(PointF p, bool careAboutMapTransform = false) Parameters Type Name Description PointF p Point in image coordinates. Note: if you wish to preserve the input value then you must clone the point as it will be modified if a MapTransform is applied Boolean careAboutMapTransform Indicates whether MapTransform should be applied. Returns Type Description GeoAPI.Geometries.Coordinate Point in world coordinates | Improve this Doc View Source ImageToWorld(PointF[], Boolean) Converts a point array from image coordinates to world coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public Coordinate[] ImageToWorld(PointF[] points, bool careAboutMapTransform = false) Parameters Type Name Description PointF [] points Point array in image coordinates. Note: if you wish to preserve the input values then you must clone the point array as it will be modified if a MapTransform is applied Boolean careAboutMapTransform Indicates whether MapTransform should be applied. Returns Type Description GeoAPI.Geometries.Coordinate [] Point array in world coordinates | Improve this Doc View Source WorldToImage(Coordinate, Boolean) Converts a point in world coordinates to image coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public PointF WorldToImage(Coordinate p, bool careAboutMapTransform = false) Parameters Type Name Description GeoAPI.Geometries.Coordinate p Point in world coordinates Boolean careAboutMapTransform Indicates whether MapTransform should be applied. When rendering to image, the Graphics object has usually applied MapTransform Returns Type Description PointF PointF in image coordinates | Improve this Doc View Source WorldToImage(Coordinate[], Boolean) Converts an array of world coordinates to image coordinates based on the current Zoom , Center , map Size , and (optionally) the MapTransform . Declaration public PointF[] WorldToImage(Coordinate[] coordinates, bool careAboutMapTransform = false) Parameters Type Name Description GeoAPI.Geometries.Coordinate [] coordinates Coordinate array in world coordinates Boolean careAboutMapTransform Indicates whether MapTransform should be applied. True for typical coordinate calcs, False when rendering to image as the Graphics object has already applied the MapTransform Returns Type Description PointF [] PointF array in image coordinates Operators | Improve this Doc View Source Implicit(Map to MapViewport) Creates a map viewport from a given map Declaration public static implicit operator MapViewport(Map map) Parameters Type Name Description Map map The map Returns Type Description MapViewport"
  },
  "api/SharpMap.MapViewPortGuard.html": {
    "href": "api/SharpMap.MapViewPortGuard.html",
    "title": "Class MapViewPortGuard | SharpMap",
    "keywords": "Class MapViewPortGuard Utility class that checks Viewport min/max Zoom and constraint Inheritance Object MapViewPortGuard Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax [Serializable] public class MapViewPortGuard Properties | Improve this Doc View Source EnforceMaximumExtents Gets or sets a value indicating if MaximumExtents should be enforced or not. Declaration public bool EnforceMaximumExtents { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaximumExtents Gets or sets a value indicating the maximum extents Declaration public Envelope MaximumExtents { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source MaximumZoom Gets or sets a value indicating the maximum zoom level. Declaration public double MaximumZoom { get; set; } Property Value Type Description Double | Improve this Doc View Source MinimumZoom Gets or sets a value indicating the minimum zoom level. Declaration public double MinimumZoom { get; set; } Property Value Type Description Double | Improve this Doc View Source PixelAspectRatio Gets or sets the aspect-ratio of the pixel scales. A value less than 1 will make the map streach upwards, and larger than 1 will make it smaller. Declaration public double PixelAspectRatio { get; set; } Property Value Type Description Double Exceptions Type Condition ArgumentException Throws an argument exception when value is 0 or less. | Improve this Doc View Source Size Gets or sets the size of the Map in device units (Pixel) Declaration public Size Size { get; set; } Property Value Type Description Size Methods | Improve this Doc View Source VerifyZoom(Double, Coordinate) Verifies the zoom level and center of the map Declaration public double VerifyZoom(double zoom, Coordinate center) Parameters Type Name Description Double zoom The zoom level to test GeoAPI.Geometries.Coordinate center The center of the map. This coordinate might change so you must provide a copy if you want to preserve the old value Returns Type Description Double The zoom level, might have changed"
  },
  "api/SharpMap.MapViewportLock.html": {
    "href": "api/SharpMap.MapViewportLock.html",
    "title": "Class MapViewportLock | SharpMap",
    "keywords": "Class MapViewportLock Utility class to lock a map's viewport so it cannot be changed Inheritance Object MapViewportLock Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax public class MapViewportLock Constructors | Improve this Doc View Source MapViewportLock(Map) Creates an instance of this class Declaration public MapViewportLock(Map map) Parameters Type Name Description Map map Properties | Improve this Doc View Source IsLocked Gets a value indicating that the map's viewport is locked Declaration public bool IsLocked { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Lock() Lock the viewport of the map Declaration public void Lock() | Improve this Doc View Source Unlock() Unlock the viewport of the map Declaration public void Unlock()"
  },
  "api/SharpMap.Rendering.BaseLabel.html": {
    "href": "api/SharpMap.Rendering.BaseLabel.html",
    "title": "Class BaseLabel | SharpMap",
    "keywords": "Class BaseLabel Class for storing a label instance Inheritance Object BaseLabel BaseLabel<T> Implements IComparable < BaseLabel > IComparer < BaseLabel > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public abstract class BaseLabel : IComparable<BaseLabel>, IComparer<BaseLabel> Constructors | Improve this Doc View Source BaseLabel(String, Single, Int32, LabelBox, LabelStyle) Initializes a new Label instance Declaration protected BaseLabel(string text, float rotation, int priority, LabelBox collisionbox, LabelStyle style) Parameters Type Name Description String text Text to write Single rotation Rotation Int32 priority Label priority used for collision detection LabelBox collisionbox Box around label for collision detection LabelStyle style The style of the label | Improve this Doc View Source BaseLabel(String, Single, Int32, LabelStyle) Initializes a new Label instance Declaration protected BaseLabel(string text, float rotation, int priority, LabelStyle style) Parameters Type Name Description String text Single rotation Int32 priority LabelStyle style Properties | Improve this Doc View Source Box Label box Declaration public LabelBox Box { get; set; } Property Value Type Description LabelBox | Improve this Doc View Source Font Label font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source Priority Value indicating rendering priority Declaration public int Priority { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Rotation Label rotation Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Show Show this label or don't Declaration public bool Show { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Style Gets or sets the LabelStyle of this label Declaration public LabelStyle Style { get; set; } Property Value Type Description LabelStyle | Improve this Doc View Source Text The text of the label Declaration public string Text { get; set; } Property Value Type Description String | Improve this Doc View Source TextOnPathLabel Render text on path Declaration [Obsolete(\"Paths are now labelled based upon LengthIndexedLine\")] public TextOnPath TextOnPathLabel { get; set; } Property Value Type Description TextOnPath Methods | Improve this Doc View Source Compare(BaseLabel, BaseLabel) Checks if two labels intersect Declaration public int Compare(BaseLabel x, BaseLabel y) Parameters Type Name Description BaseLabel x BaseLabel y Returns Type Description Int32 | Improve this Doc View Source CompareTo(BaseLabel) Tests if two label boxes intersects Declaration public virtual int CompareTo(BaseLabel other) Parameters Type Name Description BaseLabel other Returns Type Description Int32 Implements System.IComparable<T> System.Collections.Generic.IComparer<T>"
  },
  "api/SharpMap.Rendering.BaseLabel-1.html": {
    "href": "api/SharpMap.Rendering.BaseLabel-1.html",
    "title": "Class BaseLabel<T> | SharpMap",
    "keywords": "Class BaseLabel<T> Type specific base label class Inheritance Object BaseLabel BaseLabel<T> Label PathLabel Implements IComparable < BaseLabel > IComparer < BaseLabel > Inherited Members BaseLabel.TextOnPathLabel BaseLabel.Show BaseLabel.Text BaseLabel.Font BaseLabel.Rotation BaseLabel.Priority BaseLabel.Box BaseLabel.Style BaseLabel.CompareTo(BaseLabel) BaseLabel.Compare(BaseLabel, BaseLabel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public abstract class BaseLabel<T> : BaseLabel, IComparable<BaseLabel>, IComparer<BaseLabel> Type Parameters Name Description T The type of the location Constructors | Improve this Doc View Source BaseLabel(String, T, Single, Int32, LabelBox, LabelStyle) Creates an instance of this class Declaration protected BaseLabel(string text, T location, float rotation, int priority, LabelBox collisionbox, LabelStyle style) Parameters Type Name Description String text The label text T location The position of label Single rotation The rotation of the label (in degrees) Int32 priority A priority value. Labels with lower priority are less likely to be rendered LabelBox collisionbox A bounding box for collision detection LabelStyle style The label style to apply upon rendering | Improve this Doc View Source BaseLabel(String, T, Single, Int32, LabelStyle) Creates an instance of this class Declaration protected BaseLabel(string text, T location, float rotation, int priority, LabelStyle style) Parameters Type Name Description String text The label text T location The position of label Single rotation The rotation of the label (in degrees) Int32 priority A priority value. Labels with lower priority are less likely to be rendered LabelStyle style The label style to apply upon rendering Properties | Improve this Doc View Source Location Gets or sets the location of the label Declaration public T Location { get; set; } Property Value Type Description T Implements System.IComparable<T> System.Collections.Generic.IComparer<T>"
  },
  "api/SharpMap.Rendering.Decoration.Disclaimer.html": {
    "href": "api/SharpMap.Rendering.Decoration.Disclaimer.html",
    "title": "Class Disclaimer | SharpMap",
    "keywords": "Class Disclaimer Disclaimer map decoration Inheritance Object MapDecoration Disclaimer Implements IMapDecoration Inherited Members MapDecoration._cachedSize MapDecoration._boundingRectangle MapDecoration.Enabled MapDecoration.Anchor MapDecoration.Location MapDecoration.Padding MapDecoration.OpacityColor(Color) MapDecoration.BackgroundColor MapDecoration.Opacity MapDecoration.BorderMargin MapDecoration.BorderColor MapDecoration.BorderWidth MapDecoration.RoundedEdges MapDecoration.InternalSize(Graphics, Map) MapDecoration.Render(Graphics, MapViewport) MapDecoration.Render(Graphics, Map) MapDecoration.OnRender(Graphics, Map) MapDecoration.OnRendering(Graphics, MapViewport) MapDecoration.OnRendering(Graphics, Map) MapDecoration.OnRendered(Graphics, MapViewport) MapDecoration.OnRendered(Graphics, Map) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax [Serializable] public class Disclaimer : MapDecoration, IMapDecoration Constructors | Improve this Doc View Source Disclaimer() Creates an instance of this class Declaration public Disclaimer() Properties | Improve this Doc View Source Font Gets or sets the disclaimer font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Gets or sets the font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Format Gets or sets the Format Declaration public StringFormat Format { get; set; } Property Value Type Description StringFormat | Improve this Doc View Source Halo Gets or sets the halo width. A width of 0 disables rendering halo Declaration public int Halo { get; set; } Property Value Type Description Int32 | Improve this Doc View Source HaloColor Gets or sets the halo color Declaration public Color HaloColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Text Gets or sets the disclaimer text Declaration public string Text { get; set; } Property Value Type Description String Methods | Improve this Doc View Source InternalSize(Graphics, MapViewport) Declaration protected override Size InternalSize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map Returns Type Description Size Overrides MapDecoration.InternalSize(Graphics, MapViewport) | Improve this Doc View Source OnRender(Graphics, MapViewport) Declaration protected override void OnRender(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map Overrides MapDecoration.OnRender(Graphics, MapViewport) Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.EyeOfSight.html": {
    "href": "api/SharpMap.Rendering.Decoration.EyeOfSight.html",
    "title": "Class EyeOfSight | SharpMap",
    "keywords": "Class EyeOfSight Eye of sight class Inheritance Object MapDecoration NorthArrow EyeOfSight Implements IMapDecoration Inherited Members NorthArrow.NorthArrowImage NorthArrow.Size NorthArrow.ForeColor NorthArrow.InternalSize(Graphics, MapViewport) MapDecoration._cachedSize MapDecoration._boundingRectangle MapDecoration.Enabled MapDecoration.Anchor MapDecoration.Location MapDecoration.Padding MapDecoration.OpacityColor(Color) MapDecoration.BackgroundColor MapDecoration.Opacity MapDecoration.BorderMargin MapDecoration.BorderColor MapDecoration.BorderWidth MapDecoration.RoundedEdges MapDecoration.InternalSize(Graphics, Map) MapDecoration.Render(Graphics, MapViewport) MapDecoration.Render(Graphics, Map) MapDecoration.OnRender(Graphics, Map) MapDecoration.OnRendering(Graphics, MapViewport) MapDecoration.OnRendering(Graphics, Map) MapDecoration.OnRendered(Graphics, MapViewport) MapDecoration.OnRendered(Graphics, Map) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax [Serializable] public class EyeOfSight : NorthArrow, IMapDecoration Constructors | Improve this Doc View Source EyeOfSight() Creates an instance of this class Declaration public EyeOfSight() Properties | Improve this Doc View Source NeedleFillColor The color to Declaration public Color NeedleFillColor { get; set; } Property Value Type Description Color | Improve this Doc View Source NeedleOutlineColor Gets or sets the outline color Declaration public Color NeedleOutlineColor { get; set; } Property Value Type Description Color | Improve this Doc View Source NeedleOutlineWidth The width of the needle outline Declaration public int NeedleOutlineWidth { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source OnRender(Graphics, MapViewport) Declaration protected override void OnRender(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Overrides NorthArrow.OnRender(Graphics, MapViewport) Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.Graticule.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.Graticule.html",
    "title": "Class Graticule | SharpMap",
    "keywords": "Class Graticule Map Decoration to draw projected and/or geographic graticule on the map. The Map.SRID MUST be set to a valid ID for the graticule to render, as appropriate units are derived from the map's coordinate reference system (eg degrees-minutes-seconds, or projected units such as metres). The Projected Coordinate System graticule is managed via PcsGraticuleStyle , and the Geographic Coordinate System graticule via GcsGraticuleStyle Web Mercator Projected Coordinate System graticule can be rendered as a standard rectilinear graticule, or as meridian scale distortion lines via PcsGraticuleMode Inheritance Object MapDecoration Graticule Implements IMapDecoration Inherited Members MapDecoration._cachedSize MapDecoration._boundingRectangle MapDecoration.Enabled MapDecoration.Anchor MapDecoration.Location MapDecoration.Padding MapDecoration.OpacityColor(Color) MapDecoration.BackgroundColor MapDecoration.Opacity MapDecoration.BorderMargin MapDecoration.BorderColor MapDecoration.BorderWidth MapDecoration.RoundedEdges MapDecoration.InternalSize(Graphics, Map) MapDecoration.Render(Graphics, MapViewport) MapDecoration.Render(Graphics, Map) MapDecoration.OnRender(Graphics, Map) MapDecoration.OnRendering(Graphics, MapViewport) MapDecoration.OnRendering(Graphics, Map) MapDecoration.OnRendered(Graphics, MapViewport) MapDecoration.OnRendered(Graphics, Map) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax public class Graticule : MapDecoration, IMapDecoration Constructors | Improve this Doc View Source Graticule() Creates an instance of this class using default properties. Declaration public Graticule() Properties | Improve this Doc View Source GcsGraticuleStyle Graticule style definition for the Geographic Coordinate System Declaration public GraticuleStyle GcsGraticuleStyle { get; set; } Property Value Type Description GraticuleStyle | Improve this Doc View Source PcsGraticuleMode Defines how Web Mercator Projected Graticule will be rendered. Either as a standard rectilinear graticule, or as meridian scale distortion lines Declaration public PcsGraticuleMode PcsGraticuleMode { get; set; } Property Value Type Description PcsGraticuleMode | Improve this Doc View Source PcsGraticuleStyle Graticule style definition for the Projected Coordinate System Declaration public GraticuleStyle PcsGraticuleStyle { get; set; } Property Value Type Description GraticuleStyle Methods | Improve this Doc View Source InternalSize(Graphics, MapViewport) Declaration protected override Size InternalSize(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Returns Type Description Size Overrides MapDecoration.InternalSize(Graphics, MapViewport) | Improve this Doc View Source OnRender(Graphics, MapViewport) Declaration protected override void OnRender(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map Overrides MapDecoration.OnRender(Graphics, MapViewport) Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.GraticuleBorders.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.GraticuleBorders.html",
    "title": "Enum GraticuleBorders | SharpMap",
    "keywords": "Enum GraticuleBorders Enumeration defining which borders should be labelled Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax [Flags] public enum GraticuleBorders Fields Name Description All Label all borders LeftBottom Label Left and Bottom borders LeftTop Label Left and Top borders None No borders RightBottom Label Right and Bottom borders RightTop Label Right and Top borders"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.GraticuleLineStyle.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.GraticuleLineStyle.html",
    "title": "Enum GraticuleLineStyle | SharpMap",
    "keywords": "Enum GraticuleLineStyle An enumeration of possible graticule line styles. Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax public enum GraticuleLineStyle Fields Name Description Continuous Parallels and meridians plot as continuous lines HollowTick Plot intersections of parallels and meridians only, using a Hollow tick mark None Do not draw line (or ticks) SolidTick Plot intersections of parallels and meridians only, using a Solid tick mark"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.GraticuleStyle.GraticuleTheme.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.GraticuleStyle.GraticuleTheme.html",
    "title": "Enum GraticuleStyle.GraticuleTheme | SharpMap",
    "keywords": "Enum GraticuleStyle.GraticuleTheme Apply a styling theme to a Graticule Style Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax public enum GraticuleTheme Fields Name Description Bold Bold None None Subtle Sublte"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.GraticuleStyle.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.GraticuleStyle.html",
    "title": "Class GraticuleStyle | SharpMap",
    "keywords": "Class GraticuleStyle Graticule rendering properties, with Primary (major) and Secondary (minor) intervals. Use PrimaryLineStyle , SecondaryLineStyle , and NumSubdivisions to define how a graticule will render, and configure other properties to tune layout and formatting. Inheritance Object GraticuleStyle Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax public class GraticuleStyle Constructors | Improve this Doc View Source GraticuleStyle() Creates an instance of this class. Declaration public GraticuleStyle() | Improve this Doc View Source GraticuleStyle(GraticuleStyle.GraticuleTheme, GraticuleLineStyle, Boolean, GraticuleBorders) Quickly style a graticule without configuring each individual property Declaration public GraticuleStyle(GraticuleStyle.GraticuleTheme theme, GraticuleLineStyle lineStyle, bool withSecondaryIntervals, GraticuleBorders labelBorders) Parameters Type Name Description GraticuleStyle.GraticuleTheme theme GraticuleLineStyle lineStyle Boolean withSecondaryIntervals GraticuleBorders labelBorders Properties | Improve this Doc View Source Division Interval between Primary graticule lines (calculated to provide at least 2 cuts along shortest border) Declaration public double Division { get; } Property Value Type Description Double | Improve this Doc View Source LabelBorders Edges to be labelled, taking into account any map rotation Declaration public GraticuleBorders LabelBorders { get; set; } Property Value Type Description GraticuleBorders | Improve this Doc View Source LabelHalo Background color to assist reading labels, or null for no halo Declaration public Brush LabelHalo { get; set; } Property Value Type Description Brush | Improve this Doc View Source LabelSubdivisions True if secondary edge cuts (ie subdivisions) should be labelled in addition to primary labels (ie division)/> Declaration public bool LabelSubdivisions { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Maximum visible zoom level for rendering, or double.MaxValue for not applicable Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Minimum visible zoom level for rendering, or zero for not applicable Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source NumSubdivisions Number of intervals to appear between Primary graticule lines (or zero to disable Secondary graticule) Declaration public int NumSubdivisions { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PrimaryCustomTick Custom cross-hair style tick (design your own), null to use PrimaryLineStyle Declaration public GraphicsPath PrimaryCustomTick { get; set; } Property Value Type Description GraphicsPath | Improve this Doc View Source PrimaryLabelColor Primary label color Declaration public Brush PrimaryLabelColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source PrimaryLabelFont Font for labelling primary graticule lines Declaration public Font PrimaryLabelFont { get; set; } Property Value Type Description Font | Improve this Doc View Source PrimaryLabelOffset Offset to lower-left corner of label position relative to graticule intersection with border. Positive X offset is applied along the graticule line. Positive Y offset is applied perpendicular to graticule line. An offset of (2,2) will draw the label just inside the border, sitting just above the graticule. To position label on extension of edge cut, set X = PrimaryMargin and Y = negative half PrimaryLabelFont height Declaration public Point PrimaryLabelOffset { get; set; } Property Value Type Description Point | Improve this Doc View Source PrimaryLineStyle Line / tick style for primary graticule, or GraticuleLineStyle.None to disable this GraticuleStyle Declaration public GraticuleLineStyle PrimaryLineStyle { get; set; } Property Value Type Description GraticuleLineStyle | Improve this Doc View Source PrimaryMargin Length (pixels) of edge cuts (ie where graticule intersects border) or zero for none Declaration public int PrimaryMargin { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PrimaryPen Primary line style Dashed and dotted line styles can be defined using Pen.DashPattern and Pen.DashStyle Declaration public Pen PrimaryPen { get; set; } Property Value Type Description Pen | Improve this Doc View Source PrimaryTickSize Size of tick (pixels) at intersection of primary graticule lines Declaration public int PrimaryTickSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source SecondaryCustomTick Custom cross-hair style tick (design your own), or null to use SecondaryLineStyle Declaration public GraphicsPath SecondaryCustomTick { get; set; } Property Value Type Description GraphicsPath | Improve this Doc View Source SecondaryLabelColor Secondary label color Declaration public Brush SecondaryLabelColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source SecondaryLabelFont Font for labelling secondary graticule lines Declaration public Font SecondaryLabelFont { get; set; } Property Value Type Description Font | Improve this Doc View Source SecondaryLabelOffset Offset to lower-left corner of label position relative to graticule intersection with border. Positive X offset is applied along the graticule line. Positive Y offset is applied perpendicular to graticule line. An offset of (2,2) will draw the label just inside the border, sitting just above the graticule. To position label on extension of edge cut, set X = SecondaryMargin and Y = negative half SecondaryLabelFont height Declaration public Point SecondaryLabelOffset { get; set; } Property Value Type Description Point | Improve this Doc View Source SecondaryLineStyle Line / tick style for secondary graticule, or GraticuleLineStyle.None to disable Secondary units Declaration public GraticuleLineStyle SecondaryLineStyle { get; set; } Property Value Type Description GraticuleLineStyle | Improve this Doc View Source SecondaryMargin Length (pixels) of edge cuts (ie where graticule intersects border) or zero for none Declaration public int SecondaryMargin { get; set; } Property Value Type Description Int32 | Improve this Doc View Source SecondaryPen Secondary line style. Dashed and dotted line styles can be defined using Pen.DashPattern and Pen.DashStyle Declaration public Pen SecondaryPen { get; set; } Property Value Type Description Pen | Improve this Doc View Source SecondaryTickSize Size of tick (pixels) at intersection of secondary graticule lines Declaration public int SecondaryTickSize { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Subdivision Interval between Secondary graticule lines, derived from Division and NumSubdivisions Declaration public double Subdivision { get; } Property Value Type Description Double | Improve this Doc View Source VisibilityUnits Gets or Sets what level-reference the Min/Max values are defined in Declaration public VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits Methods | Improve this Doc View Source GetTick(Boolean) Returns the appropriate tick Declaration public GraphicsPath GetTick(bool isPrimaryTick) Parameters Type Name Description Boolean isPrimaryTick Returns Type Description GraphicsPath | Improve this Doc View Source IsTickRequired(Boolean, Boolean) Returns true if a primary or secondary tick is required for given combination of primary and secondary meridians and parallels Declaration public bool IsTickRequired(bool isPrimaryMeridian, bool isPrimaryParallel) Parameters Type Name Description Boolean isPrimaryMeridian Boolean isPrimaryParallel Returns Type Description Boolean"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.html",
    "title": "Namespace SharpMap.Rendering.Decoration.Graticule | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Decoration.Graticule Classes Graticule Map Decoration to draw projected and/or geographic graticule on the map. The Map.SRID MUST be set to a valid ID for the graticule to render, as appropriate units are derived from the map's coordinate reference system (eg degrees-minutes-seconds, or projected units such as metres). The Projected Coordinate System graticule is managed via PcsGraticuleStyle , and the Geographic Coordinate System graticule via GcsGraticuleStyle Web Mercator Projected Coordinate System graticule can be rendered as a standard rectilinear graticule, or as meridian scale distortion lines via PcsGraticuleMode GraticuleStyle Graticule rendering properties, with Primary (major) and Secondary (minor) intervals. Use PrimaryLineStyle , SecondaryLineStyle , and NumSubdivisions to define how a graticule will render, and configure other properties to tune layout and formatting. Enums GraticuleBorders Enumeration defining which borders should be labelled GraticuleLineStyle An enumeration of possible graticule line styles. GraticuleStyle.GraticuleTheme Apply a styling theme to a Graticule Style PcsGraticuleMode Define how a PcsGraticuleStyle will render"
  },
  "api/SharpMap.Rendering.Decoration.Graticule.PcsGraticuleMode.html": {
    "href": "api/SharpMap.Rendering.Decoration.Graticule.PcsGraticuleMode.html",
    "title": "Enum PcsGraticuleMode | SharpMap",
    "keywords": "Enum PcsGraticuleMode Define how a PcsGraticuleStyle will render Namespace : SharpMap.Rendering.Decoration.Graticule Assembly : SharpMap.dll Syntax public enum PcsGraticuleMode Fields Name Description Standard Classic rectilinear graticule WebMercatorScaleLines Overrides Projected graticule behaviour ONLY for Web Mercator (SRID 3857), causing the graticule to be rendered as the meridian scale distortion lines from equator to the poles. Can be used in conjunction or as an alternative to a ScaleBar."
  },
  "api/SharpMap.Rendering.Decoration.html": {
    "href": "api/SharpMap.Rendering.Decoration.html",
    "title": "Namespace SharpMap.Rendering.Decoration | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Decoration Classes Disclaimer Disclaimer map decoration EyeOfSight Eye of sight class MapDecoration Abstract base class for all map decorations. Handles framing and positioning of the decoration NorthArrow North arrow map decoration Interfaces IMapDecoration Interface for all map decorations Enums MapDecorationAnchor Anchor relative position MapDecorationAnchorFlags Anchor flag values"
  },
  "api/SharpMap.Rendering.Decoration.IMapDecoration.html": {
    "href": "api/SharpMap.Rendering.Decoration.IMapDecoration.html",
    "title": "Interface IMapDecoration | SharpMap",
    "keywords": "Interface IMapDecoration Interface for all map decorations Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax public interface IMapDecoration Methods | Improve this Doc View Source Render(Graphics, Map) Draw the map decoration. Note that base class MapDecoration implementation resets g .Transform prior to raising event OnRendering, and restore the g .Transform prior to raising event OnRendered. Likewise, g .Clip is reset prior to rendering map decoration, and restored immediately after rendering. Declaration [Obsolete(\"Use Render (Graphics, MapViewport)\")] void Render(Graphics g, Map map) Parameters Type Name Description Graphics g A graphics object to use for rendering Map map The map | Improve this Doc View Source Render(Graphics, MapViewport) Draw the map decoration. Note that base class MapDecoration implementation resets g .Transform prior to raising event OnRendering, and restore the g .Transform prior to raising event OnRendered. Likewise, g .Clip is reset prior to rendering map decoration, and restored immediately after rendering. Declaration void Render(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g A graphics object to use for rendering MapViewport mvp The viewport for rendering"
  },
  "api/SharpMap.Rendering.Decoration.MapDecoration.html": {
    "href": "api/SharpMap.Rendering.Decoration.MapDecoration.html",
    "title": "Class MapDecoration | SharpMap",
    "keywords": "Class MapDecoration Abstract base class for all map decorations. Handles framing and positioning of the decoration Inheritance Object MapDecoration Disclaimer Graticule NorthArrow ScaleBar Implements IMapDecoration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax [Serializable] public abstract class MapDecoration : IMapDecoration Constructors | Improve this Doc View Source MapDecoration() Creates an instance of this class. Declaration protected MapDecoration() Fields | Improve this Doc View Source _boundingRectangle The bounding rectangle around the map decoration Declaration protected Rectangle _boundingRectangle Field Value Type Description Rectangle | Improve this Doc View Source _cachedSize The size of this map decoration as computed/assigned previously Declaration protected Size _cachedSize Field Value Type Description Size Properties | Improve this Doc View Source Anchor The anchor of the map Decoration Declaration public MapDecorationAnchor Anchor { get; set; } Property Value Type Description MapDecorationAnchor | Improve this Doc View Source BackgroundColor Gets or sets the background color for the map decoration Declaration public Color BackgroundColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderColor Gets or sets the color of the border Declaration public Color BorderColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BorderMargin The margin between decoration and border Declaration public Size BorderMargin { get; set; } Property Value Type Description Size | Improve this Doc View Source BorderWidth Gets or sets the width of the border Declaration public int BorderWidth { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Enabled Gets or sets enabled status Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Location The point that defines the location Declaration public Point Location { get; set; } Property Value Type Description Point | Improve this Doc View Source Opacity Gets or sets the opacity of map decoration Declaration public float Opacity { get; set; } Property Value Type Description Single | Improve this Doc View Source Padding Gets or sets the Padding of the map decoration Declaration public Size Padding { get; set; } Property Value Type Description Size | Improve this Doc View Source RoundedEdges Gets or sets whether the border should be rendered with rounded edges Declaration public bool RoundedEdges { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source InternalSize(Graphics, Map) Function to compute the required size for rendering the map decoration object This is just the size of the decoration object, border settings are excluded Declaration [Obsolete(\"Use InternalSize(Graphics, MapViewport\")] protected virtual Size InternalSize(Graphics g, Map map) Parameters Type Name Description Graphics g The graphics object Map map The map Returns Type Description Size The size of the map decoration | Improve this Doc View Source InternalSize(Graphics, MapViewport) Function to compute the required size for rendering the map decoration object This is just the size of the decoration object, border settings are excluded Declaration protected abstract Size InternalSize(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g The graphics object MapViewport mvp The map's viewport Returns Type Description Size The size of the map decoration | Improve this Doc View Source OnRender(Graphics, Map) Render the actual map decoration. Refer to MapDecoration. Render(Graphics, MapViewport) for underlying management of g .Transform Declaration [Obsolete(\"Use OnRender(Graphics, MapViewport\")] protected virtual void OnRender(Graphics g, Map map) Parameters Type Name Description Graphics g A graphics object Map map A map | Improve this Doc View Source OnRender(Graphics, MapViewport) Render the actual map decoration. Refer to MapDecoration. Render(Graphics, MapViewport) for underlying management of g .Transform Declaration protected virtual void OnRender(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g A graphics object MapViewport mvp A map viewport | Improve this Doc View Source OnRendered(Graphics, Map) Signal completion of rendering Refer to MapDecoration. Render(Graphics, Map) for underlying management of g .Transform Declaration [Obsolete(\"Use OnRendered(Graphics, MapViewport\")] protected virtual void OnRendered(Graphics g, Map map) Parameters Type Name Description Graphics g A graphics object Map map A map | Improve this Doc View Source OnRendered(Graphics, MapViewport) Signal completion of rendering Refer to MapDecoration. Render(Graphics, MapViewport) for underlying management of g .Transform Declaration protected virtual void OnRendered(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g A graphics object MapViewport mvp A map viewport | Improve this Doc View Source OnRendering(Graphics, Map) Signal commencing rendering Refer to MapDecoration. Render(Graphics, MapViewport) for underlying management of g .Transform Declaration [Obsolete(\"Use OnRendering(Graphics, MapViewport\")] protected virtual void OnRendering(Graphics g, Map map) Parameters Type Name Description Graphics g A graphics object Map map A map viewport | Improve this Doc View Source OnRendering(Graphics, MapViewport) Signal commencing rendering Refer to MapDecoration. Render(Graphics, MapViewport) for underlying management of g .Transform Declaration protected virtual void OnRendering(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g A graphics object MapViewport mvp A map viewport | Improve this Doc View Source OpacityColor(Color) Function to compute an transparent color by combining Opacity with color . Declaration protected Color OpacityColor(Color color) Parameters Type Name Description Color color The base color Returns Type Description Color The (semi) transparent color | Improve this Doc View Source Render(Graphics, Map) Draw the map decoration. Note that this base class' implementation resets g .Transform prior to raising event OnRendering, and restore the g .Transform prior to raising event OnRendered. Likewise, g .Clip is reset prior to rendering map decoration, and restored immediately after rendering. Declaration [Obsolete(\"Use Render(Graphics, Map\")] public void Render(Graphics g, Map map) Parameters Type Name Description Graphics g A graphics object to use for rendering Map map The viewport for rendering | Improve this Doc View Source Render(Graphics, MapViewport) Draw the map decoration. Note that this base class' implementation resets g .Transform prior to raising event OnRendering, and restore the g .Transform prior to raising event OnRendered. Likewise, g .Clip is reset prior to rendering map decoration, and restored immediately after rendering. Declaration public void Render(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g A graphics object to use for rendering MapViewport mvp The viewport for rendering Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.MapDecorationAnchor.html": {
    "href": "api/SharpMap.Rendering.Decoration.MapDecorationAnchor.html",
    "title": "Enum MapDecorationAnchor | SharpMap",
    "keywords": "Enum MapDecorationAnchor Anchor relative position Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax public enum MapDecorationAnchor Fields Name Description Center Center CenterBottom Center bottom CenterTop Center top Default Default anchor position, RightBottom . LeftBottom Left bottom LeftCenter Left center LeftTop Left top RightBottom Right bottom RightCenter Right center RightTop Right top"
  },
  "api/SharpMap.Rendering.Decoration.MapDecorationAnchorFlags.html": {
    "href": "api/SharpMap.Rendering.Decoration.MapDecorationAnchorFlags.html",
    "title": "Enum MapDecorationAnchorFlags | SharpMap",
    "keywords": "Enum MapDecorationAnchorFlags Anchor flag values Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax [Flags] public enum MapDecorationAnchorFlags Fields Name Description Bottom Bottom anchor Horizontal HorizontalCenter Horizontal center anchor Left Left anchor None No anchor specified Right Right anchor Top Top anchor Vertical VerticalCenter Vertical center anchor"
  },
  "api/SharpMap.Rendering.Decoration.NorthArrow.html": {
    "href": "api/SharpMap.Rendering.Decoration.NorthArrow.html",
    "title": "Class NorthArrow | SharpMap",
    "keywords": "Class NorthArrow North arrow map decoration Inheritance Object MapDecoration NorthArrow EyeOfSight Implements IMapDecoration Inherited Members MapDecoration._cachedSize MapDecoration._boundingRectangle MapDecoration.Enabled MapDecoration.Anchor MapDecoration.Location MapDecoration.Padding MapDecoration.OpacityColor(Color) MapDecoration.BackgroundColor MapDecoration.Opacity MapDecoration.BorderMargin MapDecoration.BorderColor MapDecoration.BorderWidth MapDecoration.RoundedEdges MapDecoration.InternalSize(Graphics, Map) MapDecoration.Render(Graphics, MapViewport) MapDecoration.Render(Graphics, Map) MapDecoration.OnRender(Graphics, Map) MapDecoration.OnRendering(Graphics, MapViewport) MapDecoration.OnRendering(Graphics, Map) MapDecoration.OnRendered(Graphics, MapViewport) MapDecoration.OnRendered(Graphics, Map) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration Assembly : SharpMap.dll Syntax [Serializable] public class NorthArrow : MapDecoration, IMapDecoration Constructors | Improve this Doc View Source NorthArrow() Creates an instance of this class Declaration public NorthArrow() Properties | Improve this Doc View Source ForeColor Gets or sets the fore color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source NorthArrowImage Gets or sets the NorthArrowImage Declaration public Image NorthArrowImage { get; set; } Property Value Type Description Image | Improve this Doc View Source Size Gets or sets the size of the North arrow Bitmap Declaration public Size Size { get; set; } Property Value Type Description Size Methods | Improve this Doc View Source InternalSize(Graphics, MapViewport) Declaration protected override Size InternalSize(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Returns Type Description Size Overrides MapDecoration.InternalSize(Graphics, MapViewport) | Improve this Doc View Source OnRender(Graphics, MapViewport) Declaration protected override void OnRender(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Overrides MapDecoration.OnRender(Graphics, MapViewport) Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.ScaleBar.html": {
    "href": "api/SharpMap.Rendering.Decoration.ScaleBar.html",
    "title": "Namespace SharpMap.Rendering.Decoration.ScaleBar | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Decoration.ScaleBar Classes ScaleBar Scale Bar map decoration. Ensure that appropriate MapUnit is set Also ensure Map.SRID is set appropriately to enable Web Mercator latitude adjustment. Enums ScaleBarLabelText Scale bar label text ScaleBarStyle Scale bar style Unit Pre defined Units"
  },
  "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBar.html": {
    "href": "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBar.html",
    "title": "Class ScaleBar | SharpMap",
    "keywords": "Class ScaleBar Scale Bar map decoration. Ensure that appropriate MapUnit is set Also ensure Map.SRID is set appropriately to enable Web Mercator latitude adjustment. Inheritance Object MapDecoration ScaleBar Implements IMapDecoration Inherited Members MapDecoration._cachedSize MapDecoration._boundingRectangle MapDecoration.Enabled MapDecoration.Anchor MapDecoration.Location MapDecoration.Padding MapDecoration.OpacityColor(Color) MapDecoration.BackgroundColor MapDecoration.Opacity MapDecoration.BorderMargin MapDecoration.BorderColor MapDecoration.BorderWidth MapDecoration.RoundedEdges MapDecoration.InternalSize(Graphics, Map) MapDecoration.Render(Graphics, MapViewport) MapDecoration.Render(Graphics, Map) MapDecoration.OnRender(Graphics, Map) MapDecoration.OnRendering(Graphics, MapViewport) MapDecoration.OnRendering(Graphics, Map) MapDecoration.OnRendered(Graphics, MapViewport) MapDecoration.OnRendered(Graphics, Map) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Decoration.ScaleBar Assembly : SharpMap.dll Syntax [Serializable] public class ScaleBar : MapDecoration, IMapDecoration Constructors | Improve this Doc View Source ScaleBar() Creates an instance of this class. Special handling applies when Map.SRID=3857 (WebMercator) to adjust ScaleBar interval and text according to mid-latitude of current view. Declaration public ScaleBar() Properties | Improve this Doc View Source BarColor1 Gets or sets the first bar color Declaration public Color BarColor1 { get; set; } Property Value Type Description Color | Improve this Doc View Source BarColor2 Gets or sets the second bar color Declaration public Color BarColor2 { get; set; } Property Value Type Description Color | Improve this Doc View Source BarOutline Bar outline Declaration public bool BarOutline { get; set; } Property Value Type Description Boolean | Improve this Doc View Source BarOutlineColor Bar outline color Declaration public Color BarOutlineColor { get; set; } Property Value Type Description Color | Improve this Doc View Source BarStyle Gets or sets the bar style Declaration public ScaleBarStyle BarStyle { get; set; } Property Value Type Description ScaleBarStyle | Improve this Doc View Source BarUnit Bar unit Declaration [Obsolete(\"Use BarUnitLargeScale and BarUnitSmallScale\")] public int BarUnit { get; set; } Property Value Type Description Int32 | Improve this Doc View Source BarUnitLargeScale Bar Unit for use at large scales (small area) such as ft, m, or yd. Declaration public int BarUnitLargeScale { get; set; } Property Value Type Description Int32 | Improve this Doc View Source BarUnitSmallScale Bar Unit for use at small scales (large area) such as km, mile, NM, Deg. Declaration public int BarUnitSmallScale { get; set; } Property Value Type Description Int32 | Improve this Doc View Source BarWidth Gets or sets the bar width Declaration public int BarWidth { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Dirty Gets or (private) sets whether the display settings for the scale bar have been changed Declaration public bool Dirty { get; } Property Value Type Description Boolean | Improve this Doc View Source Font Gets or sets the font to label the bar Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Gets or sets the foreground color, used to render the labeling Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source MapUnit World coordinate system unit. You must set this appropriately as it is NOT deduced from Map.SRID. Typically meters (1) for projected coordinate systems, or degrees (7) for geographic coordinate systems. Declaration public int MapUnit { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MarginLeft Gets or sets the minimum margin on the left of the bar Declaration public int MarginLeft { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MarginRight Gets or sets the minimum margin on the right of the bar Declaration public int MarginRight { get; set; } Property Value Type Description Int32 | Improve this Doc View Source NumTicks Gets or sets the number of ticks Declaration public int NumTicks { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Scale Scale Declaration public double Scale { get; } Property Value Type Description Double | Improve this Doc View Source ScaleText Gets or sets the labeling for the bar Declaration public ScaleBarLabelText ScaleText { get; set; } Property Value Type Description ScaleBarLabelText | Improve this Doc View Source Width Gets or sets the width of the scale bar Declaration public int Width { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source InternalSize(Graphics, MapViewport) Declaration protected override Size InternalSize(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Returns Type Description Size Overrides MapDecoration.InternalSize(Graphics, MapViewport) | Improve this Doc View Source OnRender(Graphics, MapViewport) Declaration protected override void OnRender(Graphics g, MapViewport mvp) Parameters Type Name Description Graphics g MapViewport mvp Overrides MapDecoration.OnRender(Graphics, MapViewport) | Improve this Doc View Source SetCustomUnit(Double, String, String) Declaration public void SetCustomUnit(double factor, string name, string shortName) Parameters Type Name Description Double factor String name String shortName Implements IMapDecoration"
  },
  "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBarLabelText.html": {
    "href": "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBarLabelText.html",
    "title": "Enum ScaleBarLabelText | SharpMap",
    "keywords": "Enum ScaleBarLabelText Scale bar label text Namespace : SharpMap.Rendering.Decoration.ScaleBar Assembly : SharpMap.dll Syntax public enum ScaleBarLabelText Fields Name Description JustUnits Just units NoText No text RepresentativeFraction Representative fraction"
  },
  "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBarStyle.html": {
    "href": "api/SharpMap.Rendering.Decoration.ScaleBar.ScaleBarStyle.html",
    "title": "Enum ScaleBarStyle | SharpMap",
    "keywords": "Enum ScaleBarStyle Scale bar style Namespace : SharpMap.Rendering.Decoration.ScaleBar Assembly : SharpMap.dll Syntax public enum ScaleBarStyle Fields Name Description Meridian Meridian scale bar style Meridian1 Modified Standard Standard scale bar style"
  },
  "api/SharpMap.Rendering.Decoration.ScaleBar.Unit.html": {
    "href": "api/SharpMap.Rendering.Decoration.ScaleBar.Unit.html",
    "title": "Enum Unit | SharpMap",
    "keywords": "Enum Unit Pre defined Units Namespace : SharpMap.Rendering.Decoration.ScaleBar Assembly : SharpMap.dll Syntax public enum Unit Fields Name Description Custom Custom Degree Degree Foot_US North american foot Kilometer Kilometer Meter Meter Mile_US North american mile Nautical_Mile Nautical Mile Yard_Indian Indian yard Yard_Sears Yard"
  },
  "api/SharpMap.Rendering.Exceptions.html": {
    "href": "api/SharpMap.Rendering.Exceptions.html",
    "title": "Namespace SharpMap.Rendering.Exceptions | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Exceptions Classes RenderException Exception thrown when a layer rendering fails"
  },
  "api/SharpMap.Rendering.Exceptions.RenderException.html": {
    "href": "api/SharpMap.Rendering.Exceptions.RenderException.html",
    "title": "Class RenderException | SharpMap",
    "keywords": "Class RenderException Exception thrown when a layer rendering fails Inheritance Object Exception RenderException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Rendering.Exceptions Assembly : SharpMap.dll Syntax public class RenderException : Exception, ISerializable Constructors | Improve this Doc View Source RenderException() Exception thrown when layer rendering has failed Declaration public RenderException() | Improve this Doc View Source RenderException(String) Exception thrown when layer rendering has failed Declaration public RenderException(string message) Parameters Type Name Description String message | Improve this Doc View Source RenderException(String, Exception) Exception thrown when layer rendering has failed Declaration public RenderException(string message, Exception inner) Parameters Type Name Description String message Exception inner Implements System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Rendering.GraphicsExtension.html": {
    "href": "api/SharpMap.Rendering.GraphicsExtension.html",
    "title": "Class GraphicsExtension | SharpMap",
    "keywords": "Class GraphicsExtension Extensions methods for text on path label rendering Inheritance Object GraphicsExtension Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax [Obsolete] public static class GraphicsExtension Methods | Improve this Doc View Source DrawString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, GraphicsPath) Method to draw s on the provided graphicsPath Declaration public static void DrawString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath GraphicsPath graphicsPath The GraphicsPath describing the | Improve this Doc View Source DrawString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, Int32, GraphicsPath) Method to measure the length of a string along a GraphicsPath Declaration public static void DrawString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, int letterSpace, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath Int32 letterSpace A value controlling the spacing between letters GraphicsPath graphicsPath The GraphicsPath describing the | Improve this Doc View Source DrawString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, Int32, Single, GraphicsPath, Boolean) Method to draw a string on a GraphicsPath of a string Declaration public static void DrawString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, int letterSpace, float rotateDegree, GraphicsPath graphicsPath, bool showPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath Int32 letterSpace A value controlling the spacing between letters Single rotateDegree A value controlling the rotation of s GraphicsPath graphicsPath The GraphicsPath describing the Boolean showPath A value indicating if the graphicsPath should be drawn, too. | Improve this Doc View Source DrawString(Graphics, String, Font, Brush, GraphicsPath) Method to draw s on the provided graphicsPath Declaration public static void DrawString(Graphics graphics, string s, Font font, Brush brush, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use GraphicsPath graphicsPath The GraphicsPath describing the | Improve this Doc View Source MeasureString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, GraphicsPath) Method to measure the length of a string Declaration public static RectangleF[] MeasureString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath GraphicsPath graphicsPath The GraphicsPath describing the Returns Type Description RectangleF [] An array of RectangleF s | Improve this Doc View Source MeasureString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, Int32, GraphicsPath) Method to measure the length of a string along a GraphicsPath Declaration public static RectangleF[] MeasureString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, int letterSpace, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath Int32 letterSpace A value controlling the spacing between letters GraphicsPath graphicsPath The GraphicsPath describing the Returns Type Description RectangleF [] An array of RectangleF s | Improve this Doc View Source MeasureString(Graphics, String, Font, Brush, TextPathAlign, TextPathPosition, Int32, Single, GraphicsPath, ref List<Single>, ref List<PointF>, ref List<Point>) Method to draw a string on a GraphicsPath of a string Declaration public static RectangleF[] MeasureString(Graphics graphics, string s, Font font, Brush brush, TextPathAlign textPathAlign, TextPathPosition textPathPosition, int letterSpace, float rotateDegree, GraphicsPath graphicsPath, ref List<float> angles, ref List<PointF> pointsText, ref List<Point> pointsUp) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use TextPathAlign textPathAlign The horizontal position on the graphicsPath TextPathPosition textPathPosition The vertical position on the graphicsPath Int32 letterSpace A value controlling the spacing between letters Single rotateDegree A value controlling the rotation of s GraphicsPath graphicsPath The GraphicsPath along which to render. List < Single > angles A list of angle values (in degrees), one for each letter List < PointF > pointsText A list of positions, one for each letter List < Point > pointsUp A list of points (don't know what for) Returns Type Description RectangleF [] | Improve this Doc View Source MeasureString(Graphics, String, Font, Brush, GraphicsPath) Method to measure the length of a string Declaration public static RectangleF[] MeasureString(Graphics graphics, string s, Font font, Brush brush, GraphicsPath graphicsPath) Parameters Type Name Description Graphics graphics The Graphics object to use String s The string to measure Font font The Font to use Brush brush The Brush to use GraphicsPath graphicsPath The GraphicsPath describing the Returns Type Description RectangleF [] An array of RectangleF s"
  },
  "api/SharpMap.Rendering.html": {
    "href": "api/SharpMap.Rendering.html",
    "title": "Namespace SharpMap.Rendering | SharpMap",
    "keywords": "Namespace SharpMap.Rendering Classes BaseLabel Class for storing a label instance BaseLabel<T> Type specific base label class GraphicsExtension Extensions methods for text on path label rendering Label A label that is to be rendered at or around a PointF LabelBox Defines an axis-aligned box around a label, used for collision detection LabelCollisionDetection Class defining delegate for label collision detection and static predefined methods LayerCollectionRenderer A layer collection renderer PathLabel A label that is to be rendered on a GraphicsPath TextOnPath Text on path generator class VectorRenderer This class renders individual geometry features to a graphics object using the settings of a map object. Enums TextPathAlign Horizontal alignment options for texts on path TextPathPosition Vertical alignment option for texts on path Delegates LabelCollisionDetection.LabelFilterMethod Delegate method for filtering labels. Useful for performing custom collision detection on labels VectorRenderer.SizeOfStringDelegate Signature for a function that evaluates the length of a string when rendered on a Graphics object with a given font"
  },
  "api/SharpMap.Rendering.Label.html": {
    "href": "api/SharpMap.Rendering.Label.html",
    "title": "Class Label | SharpMap",
    "keywords": "Class Label A label that is to be rendered at or around a PointF Inheritance Object BaseLabel BaseLabel < PointF > Label Implements IComparable < BaseLabel > IComparer < BaseLabel > Inherited Members BaseLabel<PointF>.Location BaseLabel.TextOnPathLabel BaseLabel.Show BaseLabel.Text BaseLabel.Font BaseLabel.Rotation BaseLabel.Priority BaseLabel.Box BaseLabel.Style BaseLabel.CompareTo(BaseLabel) BaseLabel.Compare(BaseLabel, BaseLabel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public class Label : BaseLabel<PointF>, IComparable<BaseLabel>, IComparer<BaseLabel> Constructors | Improve this Doc View Source Label(String, PointF, Single, Int32, LabelBox, LabelStyle) Creates an instance of this class Declaration public Label(string text, PointF location, float rotation, int priority, LabelBox collisionbox, LabelStyle style) Parameters Type Name Description String text The label text PointF location The position of label Single rotation The rotation of the label (in degrees) Int32 priority A priority value. Labels with lower priority are less likely to be rendered LabelBox collisionbox A bounding box used for collision detection LabelStyle style The label style to apply upon rendering | Improve this Doc View Source Label(String, PointF, Single, Int32, LabelStyle) Creates an instance of this class Declaration public Label(string text, PointF location, float rotation, int priority, LabelStyle style) Parameters Type Name Description String text The label text PointF location The position of label Single rotation The rotation of the label (in degrees) Int32 priority A priority value. Labels with lower priority are less likely to be rendered LabelStyle style The label style to apply upon rendering Properties | Improve this Doc View Source LabelPoint Label position Declaration public PointF LabelPoint { get; set; } Property Value Type Description PointF Implements System.IComparable<T> System.Collections.Generic.IComparer<T>"
  },
  "api/SharpMap.Rendering.LabelBox.html": {
    "href": "api/SharpMap.Rendering.LabelBox.html",
    "title": "Class LabelBox | SharpMap",
    "keywords": "Class LabelBox Defines an axis-aligned box around a label, used for collision detection Inheritance Object LabelBox Implements IComparable < LabelBox > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public class LabelBox : IComparable<LabelBox> Constructors | Improve this Doc View Source LabelBox(RectangleF) Initializes a new LabelBox instance based on a rectangle Declaration public LabelBox(RectangleF rectangle) Parameters Type Name Description RectangleF rectangle | Improve this Doc View Source LabelBox(Single, Single, Single, Single) Initializes a new LabelBox instance Declaration public LabelBox(float left, float top, float width, float height) Parameters Type Name Description Single left Left side of box Single top Top of box Single width Width of the box Single height Height of the box Properties | Improve this Doc View Source Bottom Bottom of the box Declaration public float Bottom { get; } Property Value Type Description Single | Improve this Doc View Source Height Height of the box Declaration public float Height { get; set; } Property Value Type Description Single | Improve this Doc View Source Left The Left tie-point for the Label Declaration public float Left { get; set; } Property Value Type Description Single | Improve this Doc View Source Right Right side of the box Declaration public float Right { get; } Property Value Type Description Single | Improve this Doc View Source Top The Top tie-point for the label Declaration public float Top { get; set; } Property Value Type Description Single | Improve this Doc View Source Width Width of the box Declaration public float Width { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source CompareTo(LabelBox) Returns 0 if the boxes intersects each other Declaration public int CompareTo(LabelBox other) Parameters Type Name Description LabelBox other labelbox to perform intersectiontest with Returns Type Description Int32 0 if the intersect | Improve this Doc View Source Intersects(LabelBox) Determines whether the boundingbox intersects another boundingbox Declaration public bool Intersects(LabelBox box) Parameters Type Name Description LabelBox box Returns Type Description Boolean Implements System.IComparable<T>"
  },
  "api/SharpMap.Rendering.LabelCollisionDetection.html": {
    "href": "api/SharpMap.Rendering.LabelCollisionDetection.html",
    "title": "Class LabelCollisionDetection | SharpMap",
    "keywords": "Class LabelCollisionDetection Class defining delegate for label collision detection and static predefined methods Inheritance Object LabelCollisionDetection Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public class LabelCollisionDetection Methods | Improve this Doc View Source QuickAccurateCollisionDetectionMethod(List<BaseLabel>) Quick (O(n log n)) and accurate collision detection Declaration public static void QuickAccurateCollisionDetectionMethod(List<BaseLabel> labels) Parameters Type Name Description List < BaseLabel > labels | Improve this Doc View Source SimpleCollisionDetection(List<BaseLabel>) Simple and fast label collision detection. Declaration [Obsolete(\"This is like no collision detection at all\")] public static void SimpleCollisionDetection(List<BaseLabel> labels) Parameters Type Name Description List < BaseLabel > labels | Improve this Doc View Source ThoroughCollisionDetection(List<BaseLabel>) Thorough label collision detection. Declaration public static void ThoroughCollisionDetection(List<BaseLabel> labels) Parameters Type Name Description List < BaseLabel > labels"
  },
  "api/SharpMap.Rendering.LabelCollisionDetection.LabelFilterMethod.html": {
    "href": "api/SharpMap.Rendering.LabelCollisionDetection.LabelFilterMethod.html",
    "title": "Delegate LabelCollisionDetection.LabelFilterMethod | SharpMap",
    "keywords": "Delegate LabelCollisionDetection.LabelFilterMethod Delegate method for filtering labels. Useful for performing custom collision detection on labels Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public delegate void LabelFilterMethod(List<BaseLabel> labels); Parameters Type Name Description List < BaseLabel > labels"
  },
  "api/SharpMap.Rendering.LayerCollectionRenderer.html": {
    "href": "api/SharpMap.Rendering.LayerCollectionRenderer.html",
    "title": "Class LayerCollectionRenderer | SharpMap",
    "keywords": "Class LayerCollectionRenderer A layer collection renderer Inheritance Object LayerCollectionRenderer Implements IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public class LayerCollectionRenderer : IDisposable Constructors | Improve this Doc View Source LayerCollectionRenderer(ICollection<ILayer>) Creates an instance of this class Declaration public LayerCollectionRenderer(ICollection<ILayer> layers) Parameters Type Name Description ICollection < ILayer > layers The layer collection to render Properties | Improve this Doc View Source AllowParallel Method to enable parallel rendering of layers Declaration public static bool AllowParallel { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ParallelHeuristic Method to determine the synchronization method Declaration public static Func<Size, float, int, bool> ParallelHeuristic { get; set; } Property Value Type Description Func < Size , Single , Int32 , Boolean > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Render(Graphics, Map, Boolean) Method to render the layer collection Declaration [Obsolete(\"Use Render(Graphics, MapViewport, allowParallel)\")] public void Render(Graphics g, Map map, bool allowParallel) Parameters Type Name Description Graphics g The graphics object Map map The map Boolean allowParallel | Improve this Doc View Source Render(Graphics, MapViewport, Boolean) Method to render the layer collection Declaration public void Render(Graphics g, MapViewport mapViewPort, bool allowParallel) Parameters Type Name Description Graphics g The graphics object MapViewport mapViewPort Rendering parameters snapshot of current map Boolean allowParallel | Improve this Doc View Source RenderLayer(ILayer, Graphics, MapViewport) Invokes the rendering of the layer, a red X is drawn if it fails. Declaration public static void RenderLayer(ILayer layer, Graphics g, MapViewport mapViewport) Parameters Type Name Description ILayer layer The layer to render Graphics g The graphics object to use MapViewport mapViewport The viewport Implements System.IDisposable"
  },
  "api/SharpMap.Rendering.PathLabel.html": {
    "href": "api/SharpMap.Rendering.PathLabel.html",
    "title": "Class PathLabel | SharpMap",
    "keywords": "Class PathLabel A label that is to be rendered on a GraphicsPath Inheritance Object BaseLabel BaseLabel < GraphicsPath > PathLabel Implements IComparable < BaseLabel > IComparer < BaseLabel > Inherited Members BaseLabel<GraphicsPath>.Location BaseLabel.TextOnPathLabel BaseLabel.Show BaseLabel.Text BaseLabel.Font BaseLabel.Rotation BaseLabel.Priority BaseLabel.Box BaseLabel.Style BaseLabel.Compare(BaseLabel, BaseLabel) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public class PathLabel : BaseLabel<GraphicsPath>, IComparable<BaseLabel>, IComparer<BaseLabel> Constructors | Improve this Doc View Source PathLabel(String, GraphicsPath, Single, Int32, LabelBox, LabelStyle) Creates an instance of this class Declaration public PathLabel(string text, GraphicsPath location, float rotation, int priority, LabelBox collisionbox, LabelStyle style) Parameters Type Name Description String text The label text GraphicsPath location The position of label Single rotation The rotation of the label (in degrees) Int32 priority A priority value. Labels with lower priority are less likely to be rendered LabelBox collisionbox A bounding box used for collision detection LabelStyle style The label style to apply upon rendering Properties | Improve this Doc View Source AffectedArea Bounding polygon in world coordinates Declaration public IPolygon AffectedArea { get; set; } Property Value Type Description GeoAPI.Geometries.IPolygon Methods | Improve this Doc View Source CompareTo(BaseLabel) Declaration public override int CompareTo(BaseLabel other) Parameters Type Name Description BaseLabel other Returns Type Description Int32 Overrides BaseLabel.CompareTo(BaseLabel) Implements System.IComparable<T> System.Collections.Generic.IComparer<T>"
  },
  "api/SharpMap.Rendering.Symbolizer.BaseSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.BaseSymbolizer.html",
    "title": "Class BaseSymbolizer | SharpMap",
    "keywords": "Class BaseSymbolizer Abstract base symbolizer class. Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer PointSymbolizer PolygonSymbolizer Implements IDisposableEx IDisposable ISymbolizer ICloneable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.ReleaseManagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public abstract class BaseSymbolizer : DisposableObject, IDisposableEx, IDisposable, ISymbolizer, ICloneable Constructors | Improve this Doc View Source BaseSymbolizer() Creates an instance of this class. Declaration protected BaseSymbolizer() Remarks Sets SmoothingMode to AntiAlias and PixelOffsetMode to Default . Properties | Improve this Doc View Source PixelOffsetMode Gets or sets a value indicating which PixelOffsetMode is to be used for rendering Declaration public PixelOffsetMode PixelOffsetMode { get; set; } Property Value Type Description PixelOffsetMode | Improve this Doc View Source SmoothingMode Gets or sets a value indicating which SmoothingMode is to be used for rendering Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to perform preparatory work for symbilizing. Declaration public virtual void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Int32 aproximateNumberOfGeometries An approximate number of geometries to symbolize | Improve this Doc View Source Clone() Creates a deep copy of this ISymbolizer . Declaration public abstract object Clone() Returns Type Description Object | Improve this Doc View Source End(Graphics, MapViewport) Method to restore the state of the graphics object and do cleanup work. Declaration public virtual void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to perform symbolization Declaration public virtual void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Implements IDisposableEx System.IDisposable ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.BasicLineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.BasicLineSymbolizer.html",
    "title": "Class BasicLineSymbolizer | SharpMap",
    "keywords": "Class BasicLineSymbolizer A very basic line symbolizer class without any fuzzy things. It simply draws the linestring. Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer BasicLineSymbolizer Implements IDisposableEx IDisposable ILineSymbolizer ISymbolizer < GeoAPI.Geometries.ILineal > ISymbolizer ICloneable Inherited Members LineSymbolizer.ReleaseManagedResources() LineSymbolizer.Render(MapViewport, ILineal, Graphics) LineSymbolizer.LineStringToPath(ILineString, MapViewport) LineSymbolizer.Line LineSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class BasicLineSymbolizer : LineSymbolizer, IDisposableEx, IDisposable, ILineSymbolizer, ISymbolizer<ILineal>, ISymbolizer, ICloneable Methods | Improve this Doc View Source Clone() Creates a clone of this symbolizer Declaration public override object Clone() Returns Type Description Object A symbolizer exactly like this one Overrides BaseSymbolizer.Clone() | Improve this Doc View Source OnRenderInternal(MapViewport, ILineString, Graphics) Method that does the actual rendering of individual features. Declaration protected override void OnRenderInternal(MapViewport map, ILineString lineString, Graphics graphics) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.ILineString lineString The linestring Graphics graphics The graphics object Overrides LineSymbolizer.OnRenderInternal(MapViewport, ILineString, Graphics) Implements IDisposableEx System.IDisposable ILineSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.BasicLineSymbolizerWithOffset.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.BasicLineSymbolizerWithOffset.html",
    "title": "Class BasicLineSymbolizerWithOffset | SharpMap",
    "keywords": "Class BasicLineSymbolizerWithOffset A very basic line symbolizer class without any fuzzy things. It simply draws the linestring. Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer BasicLineSymbolizerWithOffset Implements IDisposableEx IDisposable ILineSymbolizer ISymbolizer < GeoAPI.Geometries.ILineal > ISymbolizer ICloneable Inherited Members LineSymbolizer.ReleaseManagedResources() LineSymbolizer.Render(MapViewport, ILineal, Graphics) LineSymbolizer.LineStringToPath(ILineString, MapViewport) LineSymbolizer.Line LineSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class BasicLineSymbolizerWithOffset : LineSymbolizer, IDisposableEx, IDisposable, ILineSymbolizer, ISymbolizer<ILineal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source Offset Gets or sets the affset to the right (as defined by its coordinate sequence) of the lines Declaration public float Offset { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Clone() Creates a clone of this symbolizer Declaration public override object Clone() Returns Type Description Object A symbolizer exactly like this one Overrides BaseSymbolizer.Clone() | Improve this Doc View Source OnRenderInternal(MapViewport, ILineString, Graphics) Method that does the actual rendering of individual features. Declaration protected override void OnRenderInternal(MapViewport map, ILineString lineString, Graphics graphics) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.ILineString lineString The linestring Graphics graphics The graphics object Overrides LineSymbolizer.OnRenderInternal(MapViewport, ILineString, Graphics) Implements IDisposableEx System.IDisposable ILineSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.BasicPolygonSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.BasicPolygonSymbolizer.html",
    "title": "Class BasicPolygonSymbolizer | SharpMap",
    "keywords": "Class BasicPolygonSymbolizer Basic polygon symbolizer Inheritance Object DisposableObject BaseSymbolizer PolygonSymbolizer BasicPolygonSymbolizer Implements IDisposableEx IDisposable IPolygonSymbolizer ISymbolizer < GeoAPI.Geometries.IPolygonal > ISymbolizer ICloneable Inherited Members PolygonSymbolizer.Fill PolygonSymbolizer.RenderOrigin PolygonSymbolizer.UseClipping PolygonSymbolizer.Render(MapViewport, IPolygonal, Graphics) PolygonSymbolizer.Begin(Graphics, MapViewport, Int32) PolygonSymbolizer.End(Graphics, MapViewport) PolygonSymbolizer.PolygonToGraphicsPath(Map, IPolygon) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Symbolize(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class BasicPolygonSymbolizer : PolygonSymbolizer, IDisposableEx, IDisposable, IPolygonSymbolizer, ISymbolizer<IPolygonal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source BasicPolygonSymbolizer() Creates an instance of this class Declaration public BasicPolygonSymbolizer() Properties | Improve this Doc View Source Outline Gets or sets the pen to render the outline of the polygon Declaration public Pen Outline { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description Object A new object that is a copy of this instance. Overrides BaseSymbolizer.Clone() | Improve this Doc View Source OnRenderInternal(MapViewport, IPolygon, Graphics) Method that does the actual rendering of geometries Declaration protected override void OnRenderInternal(MapViewport map, IPolygon polygon, Graphics g) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.IPolygon polygon The feature Graphics g The graphics object Overrides PolygonSymbolizer.OnRenderInternal(MapViewport, IPolygon, Graphics) | Improve this Doc View Source ReleaseManagedResources() Method to release all managed resources Declaration protected override void ReleaseManagedResources() Overrides PolygonSymbolizer.ReleaseManagedResources() Implements IDisposableEx System.IDisposable IPolygonSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.CachedLineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.CachedLineSymbolizer.html",
    "title": "Class CachedLineSymbolizer | SharpMap",
    "keywords": "Class CachedLineSymbolizer A Line symbolizer that creates GraphicsPath objects in the OnRenderInternal(MapViewport, ILineString, Graphics) function. These graphic paths are symbolized in subsequent symbolize calls. Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer CachedLineSymbolizer Implements IDisposableEx IDisposable ILineSymbolizer ISymbolizer < GeoAPI.Geometries.ILineal > ISymbolizer ICloneable Inherited Members LineSymbolizer.Render(MapViewport, ILineal, Graphics) LineSymbolizer.LineStringToPath(ILineString, MapViewport) LineSymbolizer.Line BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public class CachedLineSymbolizer : LineSymbolizer, IDisposableEx, IDisposable, ILineSymbolizer, ISymbolizer<ILineal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source CachedLineSymbolizer() Creates an instance of this class Declaration public CachedLineSymbolizer() Properties | Improve this Doc View Source ImmediateMode Do not cache the geometries paths Declaration public bool ImmediateMode { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LineSymbolizeHandlers The line symbolizers to apply to the Paths . Declaration public List<ILineSymbolizeHandler> LineSymbolizeHandlers { get; } Property Value Type Description List < ILineSymbolizeHandler > | Improve this Doc View Source Paths The cached path Declaration public List<GraphicsPath> Paths { get; } Property Value Type Description List < GraphicsPath > Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to indicate that the symbolizer has to be prepared. Declaration public override void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g MapViewport map Int32 aproximateNumberOfGeometries Overrides BaseSymbolizer.Begin(Graphics, MapViewport, Int32) | Improve this Doc View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description Object A new object that is a copy of this instance. Overrides BaseSymbolizer.Clone() | Improve this Doc View Source End(Graphics, MapViewport) Method to indicate that the symbolizers work is done and it can clean up. Declaration public override void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map Overrides BaseSymbolizer.End(Graphics, MapViewport) | Improve this Doc View Source OnRenderInternal(MapViewport, ILineString, Graphics) Function that actually renders the linestring Declaration protected override void OnRenderInternal(MapViewport map, ILineString lineString, Graphics graphics) Parameters Type Name Description MapViewport map GeoAPI.Geometries.ILineString lineString Graphics graphics Overrides LineSymbolizer.OnRenderInternal(MapViewport, ILineString, Graphics) | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides LineSymbolizer.ReleaseManagedResources() | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to indicate that the symbolizer should do its symbolizer work. Declaration public override void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g MapViewport map Overrides LineSymbolizer.Symbolize(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILineSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.CharacterPointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.CharacterPointSymbolizer.html",
    "title": "Class CharacterPointSymbolizer | SharpMap",
    "keywords": "Class CharacterPointSymbolizer Text Point Style Inheritance Object DisposableObject BaseSymbolizer PointSymbolizer CharacterPointSymbolizer Implements IDisposableEx IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer < GeoAPI.Geometries.IPuntal > ISymbolizer ICloneable Inherited Members PointSymbolizer.CanvasArea PointSymbolizer.Offset PointSymbolizer.Rotation PointSymbolizer.RenderPoint(MapViewport, Coordinate, Graphics) PointSymbolizer.ToRasterPointSymbolizer() PointSymbolizer.Render(MapViewport, IPuntal, Graphics) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class CharacterPointSymbolizer : PointSymbolizer, IDisposableEx, IDisposable, IPointSymbolizerEx, IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source CharacterPointSymbolizer() Initializes a new TextPointStyle Declaration public CharacterPointSymbolizer() Properties | Improve this Doc View Source CharacterIndex The index of the character, -1 if the Text is longer than 1 character. Declaration public int CharacterIndex { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Font Gets or sets the font to symbolize Declaration public Font Font { get; set; } Property Value Type Description Font Remarks The default value is Wingdings | Improve this Doc View Source Foreground Gets or sets the brush to symbolize Declaration public Brush Foreground { get; set; } Property Value Type Description Brush Remarks The default value is Brushes.Firebrick | Improve this Doc View Source Halo Declaration public int Halo { get; set; } Property Value Type Description Int32 | Improve this Doc View Source HaloBrush Gets or sets the brush to render the halo Declaration public Brush HaloBrush { get; set; } Property Value Type Description Brush Remarks The default value is Brushes.Transparent | Improve this Doc View Source Scale Gets or sets the scale factor for this symbol Always returns 1f Declaration public override float Scale { get; set; } Property Value Type Description Single Overrides PointSymbolizer.Scale | Improve this Doc View Source Size Gets or sets the size of the generated symbol Always return Empty as the size is determined by the Size Declaration public override Size Size { get; set; } Property Value Type Description Size Overrides PointSymbolizer.Size | Improve this Doc View Source StringFormat The format for symbolization Declaration public StringFormat StringFormat { get; set; } Property Value Type Description StringFormat | Improve this Doc View Source Text The text for the symbol Declaration public string Text { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Creates a clone of this object Declaration public override object Clone() Returns Type Description Object A CharacterPointSymbolizer that matches this instance Overrides BaseSymbolizer.Clone() | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Implements IDisposableEx System.IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.CohenSutherlandLineClipping.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.CohenSutherlandLineClipping.html",
    "title": "Class CohenSutherlandLineClipping | SharpMap",
    "keywords": "Class CohenSutherlandLineClipping SharpMap's Cohen-Sutherland line clipping algorithm Inheritance Object CohenSutherlandLineClipping Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public class CohenSutherlandLineClipping Remarks Inspired by http://en.wikipedia.org/wiki/Line_clipping Constructors | Improve this Doc View Source CohenSutherlandLineClipping(Double, Double, Double, Double) Creates an instance of this class Declaration public CohenSutherlandLineClipping(double xmin, double ymin, double xmax, double ymax) Parameters Type Name Description Double xmin The minimum x-ordinate value Double ymin The minimum y-ordinate value Double xmax The maximum x-ordinate value Double ymax The maximum y-ordinate value Methods | Improve this Doc View Source ClipLineString(ILineString) Clips a GeoAPI.Geometries.ILineString to the bounding box defined by CohenSutherlandLineClipping(Double, Double, Double, Double) . Declaration public IMultiLineString ClipLineString(ILineString lineString) Parameters Type Name Description GeoAPI.Geometries.ILineString lineString The line string to clip Returns Type Description GeoAPI.Geometries.IMultiLineString A (possibly multi) line string | Improve this Doc View Source ClipLineString(IMultiLineString) Clips a GeoAPI.Geometries.IMultiLineString to the bounding box defined by CohenSutherlandLineClipping(Double, Double, Double, Double) . Declaration public IMultiLineString ClipLineString(IMultiLineString lineStrings) Parameters Type Name Description GeoAPI.Geometries.IMultiLineString lineStrings The multi-line string to clip Returns Type Description GeoAPI.Geometries.IMultiLineString A (possibly multi) line string"
  },
  "api/SharpMap.Rendering.Symbolizer.GeometrySymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.GeometrySymbolizer.html",
    "title": "Class GeometrySymbolizer | SharpMap",
    "keywords": "Class GeometrySymbolizer Multi geometry symbolizer class Inheritance Object GeometrySymbolizer Implements ISymbolizer < GeoAPI.Geometries.IGeometry > ISymbolizer ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class GeometrySymbolizer : ISymbolizer<IGeometry>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source GeometrySymbolizer() Creates an instance of this class Declaration public GeometrySymbolizer() Properties | Improve this Doc View Source LineSymbolizer Gets or sets the line symbolizer Declaration public ILineSymbolizer LineSymbolizer { get; set; } Property Value Type Description ILineSymbolizer | Improve this Doc View Source PixelOffsetMode Gets or sets a value indicating which PixelOffsetMode is to be used for rendering Declaration public PixelOffsetMode PixelOffsetMode { get; set; } Property Value Type Description PixelOffsetMode | Improve this Doc View Source PointSymbolizer Gets or sets the point symbolizer Declaration public IPointSymbolizer PointSymbolizer { get; set; } Property Value Type Description IPointSymbolizer | Improve this Doc View Source PolygonSymbolizer Gets or sets the polygon symbolizer Declaration public IPolygonSymbolizer PolygonSymbolizer { get; set; } Property Value Type Description IPolygonSymbolizer | Improve this Doc View Source SmoothingMode Gets or sets a value indicating which SmoothingMode is to be used for rendering Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to indicate that the symbolizer has to be prepared. Declaration public void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Int32 aproximateNumberOfGeometries The approximate number of geometries | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source End(Graphics, MapViewport) Method to indicate that the symbolizers work is done and it can clean up. Declaration public void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map | Improve this Doc View Source Render(MapViewport, IGeometry, Graphics) Function to render the geometry Declaration public void Render(MapViewport map, IGeometry geometry, Graphics graphics) Parameters Type Name Description MapViewport map The map object, mainly needed for transformation purposes. GeoAPI.Geometries.IGeometry geometry The geometry to symbolize. Graphics graphics The graphics object to use. | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to indicate that the symbolizer should do its symbolizer work. Declaration public void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Implements ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.html",
    "title": "Namespace SharpMap.Rendering.Symbolizer | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Symbolizer Classes BaseSymbolizer Abstract base symbolizer class. BasicLineSymbolizer A very basic line symbolizer class without any fuzzy things. It simply draws the linestring. BasicLineSymbolizerWithOffset A very basic line symbolizer class without any fuzzy things. It simply draws the linestring. BasicPolygonSymbolizer Basic polygon symbolizer CachedLineSymbolizer A Line symbolizer that creates GraphicsPath objects in the OnRenderInternal(MapViewport, ILineString, Graphics) function. These graphic paths are symbolized in subsequent symbolize calls. CharacterPointSymbolizer Text Point Style CohenSutherlandLineClipping SharpMap's Cohen-Sutherland line clipping algorithm GeometrySymbolizer Multi geometry symbolizer class LineSymbolizer Abstract base class for all line symbolizer classes ListPointSymbolizer ListPointSymbolizer class PathPointSymbolizer Symbolizer class that renders custom symbols made up of custom paths PathPointSymbolizer.PathDefinition Path definition class PlainLineSymbolizeHandler Line symbolize helper class that plainly draws a line. PointSymbolizer Base class for all possible Point symbolizers PolygonSymbolizer Base class for all geometry symbolizers PolygonSymbolizerUsingLineSymbolizer Polygon symbolizer class that uses LineSymbolizer to symbolize the outline RasterPointSymbolizer Utility Utility class to Symbolizers, mainly used for pleasant setup; WarpedLineSymbolizeHander Class that symbolizes a path by warping a Pattern to the provided graphics path. WarpedLineSymbolizer Warps a Pattern to a linestrings Interfaces ILineSymbolizeHandler Interface for all classes providing Line symbolization handling routine ILineSymbolizer Interface for all classes that render lines IPointSymbolizer Interface for all classes that can symbolize Points IPointSymbolizerEx An extended interface for IPointSymbolizer IPolygonSymbolizer Interface for classes that can symbolize polygons ISymbolizer Basic interface for all symbolizers ISymbolizer<TGeometry> Generic interface for symbolizers that render symbolize specific geometries"
  },
  "api/SharpMap.Rendering.Symbolizer.ILineSymbolizeHandler.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.ILineSymbolizeHandler.html",
    "title": "Interface ILineSymbolizeHandler | SharpMap",
    "keywords": "Interface ILineSymbolizeHandler Interface for all classes providing Line symbolization handling routine Inherited Members IDisposableEx.IsDisposed IDisposable.Dispose() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface ILineSymbolizeHandler : IDisposableEx, IDisposable Methods | Improve this Doc View Source SymbolizePaths(Graphics, IEnumerable<GraphicsPath>) Function to symbolize the graphics path to the graphics object Declaration void SymbolizePaths(Graphics g, IEnumerable<GraphicsPath> paths) Parameters Type Name Description Graphics g The graphics object IEnumerable < GraphicsPath > paths The Paths"
  },
  "api/SharpMap.Rendering.Symbolizer.ILineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.ILineSymbolizer.html",
    "title": "Interface ILineSymbolizer | SharpMap",
    "keywords": "Interface ILineSymbolizer Interface for all classes that render lines Inherited Members ISymbolizer<ILineal>.Render(MapViewport, ILineal, Graphics) ISymbolizer.SmoothingMode ISymbolizer.PixelOffsetMode ISymbolizer.Begin(Graphics, MapViewport, Int32) ISymbolizer.Symbolize(Graphics, MapViewport) ISymbolizer.End(Graphics, MapViewport) ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface ILineSymbolizer : ISymbolizer<ILineal>, ISymbolizer, ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.IPointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.IPointSymbolizer.html",
    "title": "Interface IPointSymbolizer | SharpMap",
    "keywords": "Interface IPointSymbolizer Interface for all classes that can symbolize Points Inherited Members ISymbolizer<IPuntal>.Render(MapViewport, IPuntal, Graphics) ISymbolizer.SmoothingMode ISymbolizer.PixelOffsetMode ISymbolizer.Begin(Graphics, MapViewport, Int32) ISymbolizer.Symbolize(Graphics, MapViewport) ISymbolizer.End(Graphics, MapViewport) ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface IPointSymbolizer : ISymbolizer<IPuntal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source Offset Offset of the point from the point Declaration PointF Offset { get; set; } Property Value Type Description PointF | Improve this Doc View Source Rotation Rotation of the symbol Declaration float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Gets or sets the scale Declaration float Scale { get; set; } Property Value Type Description Single | Improve this Doc View Source Size Gets or sets the Size of the symbol Implementations may ignore the setter, the getter must return a Size with positive width and height values. Declaration Size Size { get; set; } Property Value Type Description Size"
  },
  "api/SharpMap.Rendering.Symbolizer.IPointSymbolizerEx.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.IPointSymbolizerEx.html",
    "title": "Interface IPointSymbolizerEx | SharpMap",
    "keywords": "Interface IPointSymbolizerEx An extended interface for IPointSymbolizer Inherited Members IPointSymbolizer.Offset IPointSymbolizer.Rotation IPointSymbolizer.Size IPointSymbolizer.Scale ISymbolizer<IPuntal>.Render(MapViewport, IPuntal, Graphics) ISymbolizer.SmoothingMode ISymbolizer.PixelOffsetMode ISymbolizer.Begin(Graphics, MapViewport, Int32) ISymbolizer.Symbolize(Graphics, MapViewport) ISymbolizer.End(Graphics, MapViewport) ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface IPointSymbolizerEx : IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source CanvasArea Gets a value indicating the rectangle enclosing the extent of this symbol Declaration RectangleF CanvasArea { get; } Property Value Type Description RectangleF"
  },
  "api/SharpMap.Rendering.Symbolizer.IPolygonSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.IPolygonSymbolizer.html",
    "title": "Interface IPolygonSymbolizer | SharpMap",
    "keywords": "Interface IPolygonSymbolizer Interface for classes that can symbolize polygons Inherited Members ISymbolizer<IPolygonal>.Render(MapViewport, IPolygonal, Graphics) ISymbolizer.SmoothingMode ISymbolizer.PixelOffsetMode ISymbolizer.Begin(Graphics, MapViewport, Int32) ISymbolizer.Symbolize(Graphics, MapViewport) ISymbolizer.End(Graphics, MapViewport) ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface IPolygonSymbolizer : ISymbolizer<IPolygonal>, ISymbolizer, ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.ISymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.ISymbolizer.html",
    "title": "Interface ISymbolizer | SharpMap",
    "keywords": "Interface ISymbolizer Basic interface for all symbolizers Inherited Members ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface ISymbolizer : ICloneable Properties | Improve this Doc View Source PixelOffsetMode Gets or sets a value indicating which PixelOffsetMode is to be used for rendering Declaration PixelOffsetMode PixelOffsetMode { get; set; } Property Value Type Description PixelOffsetMode | Improve this Doc View Source SmoothingMode Gets or sets a value indicating which SmoothingMode is to be used for rendering Declaration SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to indicate that the symbolizer has to be prepared. Declaration void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Int32 aproximateNumberOfGeometries The approximate number of geometries | Improve this Doc View Source End(Graphics, MapViewport) Method to indicate that the symbolizers work is done and it can clean up. Declaration void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to indicate that the symbolizer should do its symbolizer work. Declaration void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map"
  },
  "api/SharpMap.Rendering.Symbolizer.ISymbolizer-1.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.ISymbolizer-1.html",
    "title": "Interface ISymbolizer<TGeometry> | SharpMap",
    "keywords": "Interface ISymbolizer<TGeometry> Generic interface for symbolizers that render symbolize specific geometries Inherited Members ISymbolizer.SmoothingMode ISymbolizer.PixelOffsetMode ISymbolizer.Begin(Graphics, MapViewport, Int32) ISymbolizer.Symbolize(Graphics, MapViewport) ISymbolizer.End(Graphics, MapViewport) ICloneable.Clone() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public interface ISymbolizer<TGeometry> : ISymbolizer, ICloneable where TGeometry : class Type Parameters Name Description TGeometry The allowed type of geometries to symbolize Methods | Improve this Doc View Source Render(MapViewport, TGeometry, Graphics) Function to render the geometry Declaration void Render(MapViewport map, TGeometry geometry, Graphics graphics) Parameters Type Name Description MapViewport map The map object, mainly needed for transformation purposes. TGeometry geometry The geometry to symbolize. Graphics graphics The graphics object to use."
  },
  "api/SharpMap.Rendering.Symbolizer.LineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.LineSymbolizer.html",
    "title": "Class LineSymbolizer | SharpMap",
    "keywords": "Class LineSymbolizer Abstract base class for all line symbolizer classes Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer BasicLineSymbolizer BasicLineSymbolizerWithOffset CachedLineSymbolizer WarpedLineSymbolizer Implements IDisposableEx IDisposable ILineSymbolizer ISymbolizer < GeoAPI.Geometries.ILineal > ISymbolizer ICloneable Inherited Members BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Clone() BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public abstract class LineSymbolizer : BaseSymbolizer, IDisposableEx, IDisposable, ILineSymbolizer, ISymbolizer<ILineal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source LineSymbolizer() Creates an instance of this class. Line is set to a random SharpMap.Drawing.KnownColor . Declaration protected LineSymbolizer() Properties | Improve this Doc View Source Line Gets or sets the Pen to render the LineString Declaration public Pen Line { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source LineStringToPath(ILineString, MapViewport) Function to transform a linestring to a graphics path for further processing Declaration public static GraphicsPath LineStringToPath(ILineString lineString, MapViewport map) Parameters Type Name Description GeoAPI.Geometries.ILineString lineString The Linestring MapViewport map The map Returns Type Description GraphicsPath A GraphicsPath | Improve this Doc View Source OnRenderInternal(MapViewport, ILineString, Graphics) Function that actually renders the linestring Declaration protected abstract void OnRenderInternal(MapViewport map, ILineString lineString, Graphics graphics) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.ILineString lineString The line string to symbolize. Graphics graphics The graphics | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source Render(MapViewport, ILineal, Graphics) Method to render a LineString to the Graphics object. Declaration public void Render(MapViewport map, ILineal lineal, Graphics g) Parameters Type Name Description MapViewport map The map object GeoAPI.Geometries.ILineal lineal Linestring to symbolize Graphics g The graphics object to use. | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to perform symbolization Declaration public override void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Overrides BaseSymbolizer.Symbolize(Graphics, MapViewport) Implements IDisposableEx System.IDisposable ILineSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.ListPointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.ListPointSymbolizer.html",
    "title": "Class ListPointSymbolizer | SharpMap",
    "keywords": "Class ListPointSymbolizer ListPointSymbolizer class Inheritance Object Collection < PointSymbolizer > ListPointSymbolizer Implements IList < PointSymbolizer > ICollection < PointSymbolizer > IReadOnlyList < PointSymbolizer > IReadOnlyCollection < PointSymbolizer > IEnumerable < PointSymbolizer > IList ICollection IEnumerable IPointSymbolizerEx IPointSymbolizer ISymbolizer < GeoAPI.Geometries.IPuntal > ISymbolizer ICloneable IDisposableEx IDisposable Inherited Members System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.System.Collections.IList.set_Item(System.Int32, System.Object) Collection<PointSymbolizer>.Add(PointSymbolizer) Collection<PointSymbolizer>.Clear() Collection<PointSymbolizer>.Contains(PointSymbolizer) Collection<PointSymbolizer>.CopyTo(PointSymbolizer[], Int32) Collection<PointSymbolizer>.GetEnumerator() Collection<PointSymbolizer>.IndexOf(PointSymbolizer) Collection<PointSymbolizer>.Insert(Int32, PointSymbolizer) Collection<PointSymbolizer>.Remove(PointSymbolizer) Collection<PointSymbolizer>.RemoveAt(Int32) Collection<PointSymbolizer>.ICollection.CopyTo(Array, Int32) Collection<PointSymbolizer>.IEnumerable.GetEnumerator() Collection<PointSymbolizer>.IList.Add(Object) Collection<PointSymbolizer>.IList.Contains(Object) Collection<PointSymbolizer>.IList.IndexOf(Object) Collection<PointSymbolizer>.IList.Insert(Int32, Object) Collection<PointSymbolizer>.IList.Remove(Object) Collection<PointSymbolizer>.Count Collection<PointSymbolizer>.Item[Int32] Collection<PointSymbolizer>.Items Collection<PointSymbolizer>.ICollection<PointSymbolizer>.IsReadOnly Collection<PointSymbolizer>.ICollection.IsSynchronized Collection<PointSymbolizer>.ICollection.SyncRoot Collection<PointSymbolizer>.IList.IsFixedSize Collection<PointSymbolizer>.IList.IsReadOnly Collection<PointSymbolizer>.IList.Item[Int32] Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class ListPointSymbolizer : Collection<PointSymbolizer>, IList<PointSymbolizer>, ICollection<PointSymbolizer>, IReadOnlyList<PointSymbolizer>, IReadOnlyCollection<PointSymbolizer>, IEnumerable<PointSymbolizer>, IList, ICollection, IEnumerable, IPointSymbolizerEx, IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable, IDisposableEx, IDisposable Properties | Improve this Doc View Source CanvasArea Gets a value indicating the area of the map covered during the last rendering cycle. Declaration public RectangleF CanvasArea { get; } Property Value Type Description RectangleF | Improve this Doc View Source IsDisposed Gets whether this object was already disposed Declaration public bool IsDisposed { get; } Property Value Type Description Boolean | Improve this Doc View Source Offset Offset of the point from the point Declaration public PointF Offset { get; set; } Property Value Type Description PointF | Improve this Doc View Source PixelOffsetMode Gets or sets a value indicating which PixelOffsetMode is to be used for rendering Declaration public PixelOffsetMode PixelOffsetMode { get; set; } Property Value Type Description PixelOffsetMode | Improve this Doc View Source Rotation Rotation of the symbol Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Gets or sets the scale Declaration public float Scale { get; set; } Property Value Type Description Single | Improve this Doc View Source Size Gets or sets the Size of the symbol Implementations may ignore the setter, the getter must return a Size with positive width and height values. Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source SmoothingMode Gets or sets a value indicating which SmoothingMode is to be used for rendering Declaration public SmoothingMode SmoothingMode { get; set; } Property Value Type Description SmoothingMode Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to indicate that the symbolizer has to be prepared. Declaration public void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Int32 aproximateNumberOfGeometries The approximate number of geometries | Improve this Doc View Source ClearItems() Declaration protected override void ClearItems() Overrides System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.ClearItems() | Improve this Doc View Source Clone() Creates a new object that is a copy of the current instance. Declaration public object Clone() Returns Type Description Object A new object that is a copy of this instance. | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source End(Graphics, MapViewport) Method to indicate that the symbolizers work is done and it can clean up. Declaration public void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map | Improve this Doc View Source InsertItem(Int32, PointSymbolizer) Declaration protected override void InsertItem(int index, PointSymbolizer item) Parameters Type Name Description Int32 index PointSymbolizer item Overrides System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.InsertItem(System.Int32, SharpMap.Rendering.Symbolizer.PointSymbolizer) | Improve this Doc View Source RemoveItem(Int32) Declaration protected override void RemoveItem(int index) Parameters Type Name Description Int32 index Overrides System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.RemoveItem(System.Int32) | Improve this Doc View Source Render(MapViewport, IPuntal, Graphics) Method to render the Point to the Graphics object. Declaration public void Render(MapViewport map, IPuntal points, Graphics g) Parameters Type Name Description MapViewport map The map object GeoAPI.Geometries.IPuntal points Location where to render the Symbol Graphics g The graphics object to use. | Improve this Doc View Source SetItem(Int32, PointSymbolizer) Declaration protected override void SetItem(int index, PointSymbolizer item) Parameters Type Name Description Int32 index PointSymbolizer item Overrides System.Collections.ObjectModel.Collection<SharpMap.Rendering.Symbolizer.PointSymbolizer>.SetItem(System.Int32, SharpMap.Rendering.Symbolizer.PointSymbolizer) | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to indicate that the symbolizer should do its symbolizer work. Declaration public void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object MapViewport map The map Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IPointSymbolizerEx IPointSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable IDisposableEx System.IDisposable"
  },
  "api/SharpMap.Rendering.Symbolizer.PathPointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PathPointSymbolizer.html",
    "title": "Class PathPointSymbolizer | SharpMap",
    "keywords": "Class PathPointSymbolizer Symbolizer class that renders custom symbols made up of custom paths Inheritance Object DisposableObject BaseSymbolizer PointSymbolizer PathPointSymbolizer Implements IDisposableEx IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer < GeoAPI.Geometries.IPuntal > ISymbolizer ICloneable Inherited Members PointSymbolizer.CanvasArea PointSymbolizer.Offset PointSymbolizer.Rotation PointSymbolizer.Scale PointSymbolizer.RenderPoint(MapViewport, Coordinate, Graphics) PointSymbolizer.ToRasterPointSymbolizer() PointSymbolizer.Render(MapViewport, IPuntal, Graphics) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class PathPointSymbolizer : PointSymbolizer, IDisposableEx, IDisposable, IPointSymbolizerEx, IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source PathPointSymbolizer(PathPointSymbolizer.PathDefinition[]) Creates an instance of this class Declaration public PathPointSymbolizer(PathPointSymbolizer.PathDefinition[] paths) Parameters Type Name Description PathPointSymbolizer.PathDefinition [] paths Properties | Improve this Doc View Source Size Gets or sets the Size of the symbol Implementations may ignore the setter, the getter must return a Size with positive width and height values. Declaration public override Size Size { get; set; } Property Value Type Description Size Overrides PointSymbolizer.Size Methods | Improve this Doc View Source Clone() Declaration public override object Clone() Returns Type Description Object Overrides BaseSymbolizer.Clone() | Improve this Doc View Source CreateCircle(Pen, Brush, Single) Creates a PathPointSymbolizer that renders circles. Declaration public static PathPointSymbolizer CreateCircle(Pen line, Brush fill, float size) Parameters Type Name Description Pen line The pen to outline the circle Brush fill the brush to fill the circle Single size The size of the circle Returns Type Description PathPointSymbolizer The PathPointSymbolizer object | Improve this Doc View Source CreateEllipse(Pen, Brush, Single, Single) Creates a PathPointSymbolizer that renders ellipses. Declaration public static PathPointSymbolizer CreateEllipse(Pen line, Brush fill, float a, float b) Parameters Type Name Description Pen line The pen to outline the ellipse Brush fill the brush to fill the ellipse Single a The x-axis radius of the ellipse Single b The x-axis radius of the ellipse Returns Type Description PathPointSymbolizer The PathPointSymbolizer object | Improve this Doc View Source CreateRectangle(Pen, Brush, Single, Single) Creates a PathPointSymbolizer that renders rectangles. Declaration public static PathPointSymbolizer CreateRectangle(Pen line, Brush fill, float width, float height) Parameters Type Name Description Pen line The pen to outline the rectangle Brush fill the brush to fill the rectangle Single width The width of the rectangle Single height The height of the rectangle Returns Type Description PathPointSymbolizer The PathPointSymbolizer object | Improve this Doc View Source CreateSquare(Pen, Brush, Single) Creates a PathPointSymbolizer that renders squares. Declaration public static PathPointSymbolizer CreateSquare(Pen line, Brush fill, float size) Parameters Type Name Description Pen line The pen to outline the square Brush fill the brush to fill the square Single size The size of the square Returns Type Description PathPointSymbolizer The PathPointSymbolizer object | Improve this Doc View Source CreateTriangle(Pen, Brush, Single) Creates a PathPointSymbolizer that renders bottom-down-triangless. Declaration public static PathPointSymbolizer CreateTriangle(Pen line, Brush fill, float size) Parameters Type Name Description Pen line The pen to outline the triangle Brush fill the brush to fill the triangle Single size The size of the triangle Returns Type Description PathPointSymbolizer The PathPointSymbolizer object | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Implements IDisposableEx System.IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.PathPointSymbolizer.PathDefinition.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PathPointSymbolizer.PathDefinition.html",
    "title": "Class PathPointSymbolizer.PathDefinition | SharpMap",
    "keywords": "Class PathPointSymbolizer.PathDefinition Path definition class Inheritance Object PathPointSymbolizer.PathDefinition Implements IDisposable ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class PathDefinition : IDisposable, ICloneable Properties | Improve this Doc View Source Fill Gets or sets the Brush to fill the path Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Line Gets or sets the Pen to draw the path Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source Path The GraphicsPath to be drawn and/or filled Declaration public GraphicsPath Path { get; set; } Property Value Type Description GraphicsPath Methods | Improve this Doc View Source Clone() Creates a new object that is a copy of the current instance. Declaration public object Clone() Returns Type Description Object A new object that is a copy of this instance. | Improve this Doc View Source Dispose() Method to perform cleanup methods for unmanaged resources Declaration public void Dispose() Implements System.IDisposable System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.PlainLineSymbolizeHandler.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PlainLineSymbolizeHandler.html",
    "title": "Class PlainLineSymbolizeHandler | SharpMap",
    "keywords": "Class PlainLineSymbolizeHandler Line symbolize helper class that plainly draws a line. Inheritance Object DisposableObject PlainLineSymbolizeHandler Implements ILineSymbolizeHandler IDisposableEx IDisposable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public class PlainLineSymbolizeHandler : DisposableObject, ILineSymbolizeHandler, IDisposableEx, IDisposable Properties | Improve this Doc View Source Line Gets or sets the Pen to use Declaration public Pen Line { get; set; } Property Value Type Description Pen Methods | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source SymbolizePaths(Graphics, IEnumerable<GraphicsPath>) Function to symbolize the graphics path to the graphics object Declaration public void SymbolizePaths(Graphics g, IEnumerable<GraphicsPath> path) Parameters Type Name Description Graphics g The graphics object IEnumerable < GraphicsPath > path The Path Implements ILineSymbolizeHandler IDisposableEx System.IDisposable"
  },
  "api/SharpMap.Rendering.Symbolizer.PointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PointSymbolizer.html",
    "title": "Class PointSymbolizer | SharpMap",
    "keywords": "Class PointSymbolizer Base class for all possible Point symbolizers Inheritance Object DisposableObject BaseSymbolizer PointSymbolizer CharacterPointSymbolizer PathPointSymbolizer RasterPointSymbolizer Implements IDisposableEx IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer < GeoAPI.Geometries.IPuntal > ISymbolizer ICloneable Inherited Members BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Clone() BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.ReleaseManagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public abstract class PointSymbolizer : BaseSymbolizer, IDisposableEx, IDisposable, IPointSymbolizerEx, IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source CanvasArea The calculated rectangle enclosing the extent of this symbol Declaration public RectangleF CanvasArea { get; protected set; } Property Value Type Description RectangleF | Improve this Doc View Source Offset Offset of the point from the point Declaration public PointF Offset { get; set; } Property Value Type Description PointF | Improve this Doc View Source Rotation Rotation of the symbol Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source Scale Gets or sets the scale Declaration public virtual float Scale { get; set; } Property Value Type Description Single | Improve this Doc View Source Size Gets or sets the Size of the symbol Implementations may ignore the setter, the getter must return a Size with positive width and height values. Declaration public abstract Size Size { get; set; } Property Value Type Description Size Methods | Improve this Doc View Source Render(MapViewport, IPuntal, Graphics) Function to render the geometry Declaration public void Render(MapViewport map, IPuntal geometry, Graphics graphics) Parameters Type Name Description MapViewport map The map object, mainly needed for transformation purposes. GeoAPI.Geometries.IPuntal geometry The geometry to symbolize. Graphics graphics The graphics object to use. | Improve this Doc View Source RenderPoint(MapViewport, Coordinate, Graphics) Function to render the symbol Declaration protected void RenderPoint(MapViewport map, Coordinate point, Graphics g) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.Coordinate point The point to symbolize Graphics g The graphics object | Improve this Doc View Source ToRasterPointSymbolizer() Utility function to transform any IPointSymbolizer into an unscaled RasterPointSymbolizer . This may bring performance benefits. Declaration public virtual IPointSymbolizer ToRasterPointSymbolizer() Returns Type Description IPointSymbolizer Implements IDisposableEx System.IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.PolygonSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PolygonSymbolizer.html",
    "title": "Class PolygonSymbolizer | SharpMap",
    "keywords": "Class PolygonSymbolizer Base class for all geometry symbolizers Inheritance Object DisposableObject BaseSymbolizer PolygonSymbolizer BasicPolygonSymbolizer PolygonSymbolizerUsingLineSymbolizer Implements IDisposableEx IDisposable IPolygonSymbolizer ISymbolizer < GeoAPI.Geometries.IPolygonal > ISymbolizer ICloneable Inherited Members BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Clone() BaseSymbolizer.Symbolize(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public abstract class PolygonSymbolizer : BaseSymbolizer, IDisposableEx, IDisposable, IPolygonSymbolizer, ISymbolizer<IPolygonal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source PolygonSymbolizer() Creates an instance of his class. Fill is set to a SolidBrush with a random SharpMap.Drawing.KnownColor . Declaration protected PolygonSymbolizer() Properties | Improve this Doc View Source Fill Gets or sets the brush to fill the polygon Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source RenderOrigin The render origin for brushes (Texture, Gradient, ...) Declaration public Point RenderOrigin { get; set; } Property Value Type Description Point | Improve this Doc View Source UseClipping Gets or sets if polygons should be clipped or not. Declaration public bool UseClipping { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to perform preparatory work for symbilizing. Declaration public override void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Int32 aproximateNumberOfGeometries An approximate number of geometries to symbolize Overrides BaseSymbolizer.Begin(Graphics, MapViewport, Int32) | Improve this Doc View Source End(Graphics, MapViewport) Method to restore the state of the graphics object and do cleanup work. Declaration public override void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Overrides BaseSymbolizer.End(Graphics, MapViewport) | Improve this Doc View Source OnRenderInternal(MapViewport, IPolygon, Graphics) Method to perform actual rendering Declaration protected abstract void OnRenderInternal(MapViewport map, IPolygon polygon, Graphics g) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.IPolygon polygon The polygon to render Graphics g The graphics object to use | Improve this Doc View Source PolygonToGraphicsPath(Map, IPolygon) Conversion function for a polygon to a graphics path Declaration protected static GraphicsPath PolygonToGraphicsPath(Map map, IPolygon polygon) Parameters Type Name Description Map map The map GeoAPI.Geometries.IPolygon polygon The polygon Returns Type Description GraphicsPath A graphics path | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source Render(MapViewport, IPolygonal, Graphics) Function to render the geometry Declaration public void Render(MapViewport map, IPolygonal geometry, Graphics graphics) Parameters Type Name Description MapViewport map The map object, mainly needed for transformation purposes. GeoAPI.Geometries.IPolygonal geometry The geometry to symbolize. Graphics graphics The graphics object to use. Implements IDisposableEx System.IDisposable IPolygonSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.PolygonSymbolizerUsingLineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.PolygonSymbolizerUsingLineSymbolizer.html",
    "title": "Class PolygonSymbolizerUsingLineSymbolizer | SharpMap",
    "keywords": "Class PolygonSymbolizerUsingLineSymbolizer Polygon symbolizer class that uses LineSymbolizer to symbolize the outline Inheritance Object DisposableObject BaseSymbolizer PolygonSymbolizer PolygonSymbolizerUsingLineSymbolizer Implements IDisposableEx IDisposable IPolygonSymbolizer ISymbolizer < GeoAPI.Geometries.IPolygonal > ISymbolizer ICloneable Inherited Members PolygonSymbolizer.Fill PolygonSymbolizer.RenderOrigin PolygonSymbolizer.UseClipping PolygonSymbolizer.Render(MapViewport, IPolygonal, Graphics) PolygonSymbolizer.PolygonToGraphicsPath(Map, IPolygon) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class PolygonSymbolizerUsingLineSymbolizer : PolygonSymbolizer, IDisposableEx, IDisposable, IPolygonSymbolizer, ISymbolizer<IPolygonal>, ISymbolizer, ICloneable Constructors | Improve this Doc View Source PolygonSymbolizerUsingLineSymbolizer() Creates an instance of this class Declaration public PolygonSymbolizerUsingLineSymbolizer() Properties | Improve this Doc View Source Outline Gets or sets the LineSymbolizer to draw the outline of the polygon Declaration public LineSymbolizer Outline { get; set; } Property Value Type Description LineSymbolizer Methods | Improve this Doc View Source Begin(Graphics, MapViewport, Int32) Method to perform preparatory work for symbilizing. Declaration public override void Begin(Graphics g, MapViewport map, int aproximateNumberOfGeometries) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Int32 aproximateNumberOfGeometries An approximate number of geometries to symbolize Overrides PolygonSymbolizer.Begin(Graphics, MapViewport, Int32) | Improve this Doc View Source Clone() Creates a new object that is a copy of the current instance. Declaration public override object Clone() Returns Type Description Object A new object that is a copy of this instance. Overrides BaseSymbolizer.Clone() | Improve this Doc View Source End(Graphics, MapViewport) Method to restore the state of the graphics object and do cleanup work. Declaration public override void End(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Overrides PolygonSymbolizer.End(Graphics, MapViewport) | Improve this Doc View Source OnRenderInternal(MapViewport, IPolygon, Graphics) Method to perform actual rendering Declaration protected override void OnRenderInternal(MapViewport map, IPolygon polygon, Graphics g) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.IPolygon polygon The polygon to render Graphics g The graphics object to use Overrides PolygonSymbolizer.OnRenderInternal(MapViewport, IPolygon, Graphics) | Improve this Doc View Source ReleaseManagedResources() Method that releases all managed resources Declaration protected override void ReleaseManagedResources() Overrides PolygonSymbolizer.ReleaseManagedResources() | Improve this Doc View Source Symbolize(Graphics, MapViewport) Method to perform symbolization Declaration public override void Symbolize(Graphics g, MapViewport map) Parameters Type Name Description Graphics g The graphics object to symbolize upon MapViewport map The map Overrides BaseSymbolizer.Symbolize(Graphics, MapViewport) Implements IDisposableEx System.IDisposable IPolygonSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.RasterPointSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.RasterPointSymbolizer.html",
    "title": "Class RasterPointSymbolizer | SharpMap",
    "keywords": "Class RasterPointSymbolizer Inheritance Object DisposableObject BaseSymbolizer PointSymbolizer RasterPointSymbolizer Implements IDisposableEx IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer < GeoAPI.Geometries.IPuntal > ISymbolizer ICloneable Inherited Members PointSymbolizer.CanvasArea PointSymbolizer.Offset PointSymbolizer.Rotation PointSymbolizer.Scale PointSymbolizer.RenderPoint(MapViewport, Coordinate, Graphics) PointSymbolizer.ToRasterPointSymbolizer() PointSymbolizer.Render(MapViewport, IPuntal, Graphics) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class RasterPointSymbolizer : PointSymbolizer, IDisposableEx, IDisposable, IPointSymbolizerEx, IPointSymbolizer, ISymbolizer<IPuntal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source RemapColor Optional colour to be replaced by SymbolColor during re-map. Pixels must have an exact match (including RemapColor.Alpha) to be re-mapped. Declaration public Color RemapColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Size Gets or sets the Size of the symbol Implementations may ignore the setter, the getter must return a Size with positive width and height values. Declaration public override Size Size { get; set; } Property Value Type Description Size Overrides PointSymbolizer.Size | Improve this Doc View Source Symbol Gets or sets the symbol Declaration public Image Symbol { get; set; } Property Value Type Description Image | Improve this Doc View Source SymbolColor Optional colour to replace the RemapColor pixels in Symbol. If Transparency is also specified, transparency will replace SymbolColor.Alpha. Declaration public Color SymbolColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Transparency Optional transparency in range 0 (opaque) to 1 (fully transparent). Declaration public float Transparency { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Clone() Declaration public override object Clone() Returns Type Description Object Overrides BaseSymbolizer.Clone() | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Implements IDisposableEx System.IDisposable IPointSymbolizerEx IPointSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.Symbolizer.Utility.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.Utility.html",
    "title": "Class Utility | SharpMap",
    "keywords": "Class Utility Utility class to Symbolizers, mainly used for pleasant setup; Inheritance Object Utility Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public static class Utility Methods | Improve this Doc View Source RandomKnownColor() Method to Color to get a random known color Declaration public static Color RandomKnownColor() Returns Type Description Color A random color form the SharpMap.Drawing.KnownColor enumeration | Improve this Doc View Source ScaleSizeToDeviceUnits(Single, GraphicsUnit, Graphics) Scales sizes to device units Declaration public static float ScaleSizeToDeviceUnits(float size, GraphicsUnit unit, Graphics g) Parameters Type Name Description Single size GraphicsUnit unit Graphics g Returns Type Description Single"
  },
  "api/SharpMap.Rendering.Symbolizer.WarpedLineSymbolizeHander.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.WarpedLineSymbolizeHander.html",
    "title": "Class WarpedLineSymbolizeHander | SharpMap",
    "keywords": "Class WarpedLineSymbolizeHander Class that symbolizes a path by warping a Pattern to the provided graphics path. Inheritance Object DisposableObject WarpedLineSymbolizeHander Implements ILineSymbolizeHandler IDisposableEx IDisposable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax public class WarpedLineSymbolizeHander : DisposableObject, ILineSymbolizeHandler, IDisposableEx, IDisposable Properties | Improve this Doc View Source Fill Gets or sets the Brush to fill the graphics path Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Interval Gets or sets the interval with witch to repeat the pattern Declaration public float Interval { get; set; } Property Value Type Description Single | Improve this Doc View Source Line Gets or sets the Pen to draw the graphics path Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source Pattern The pattern to warp. Declaration public GraphicsPath Pattern { get; set; } Property Value Type Description GraphicsPath Methods | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source SymbolizePaths(Graphics, IEnumerable<GraphicsPath>) Function to symbolize the graphics path to the graphics object Declaration public void SymbolizePaths(Graphics g, IEnumerable<GraphicsPath> paths) Parameters Type Name Description Graphics g The graphics object IEnumerable < GraphicsPath > paths The paths Implements ILineSymbolizeHandler IDisposableEx System.IDisposable"
  },
  "api/SharpMap.Rendering.Symbolizer.WarpedLineSymbolizer.html": {
    "href": "api/SharpMap.Rendering.Symbolizer.WarpedLineSymbolizer.html",
    "title": "Class WarpedLineSymbolizer | SharpMap",
    "keywords": "Class WarpedLineSymbolizer Warps a Pattern to a linestrings Inheritance Object DisposableObject BaseSymbolizer LineSymbolizer WarpedLineSymbolizer Implements IDisposableEx IDisposable ILineSymbolizer ISymbolizer < GeoAPI.Geometries.ILineal > ISymbolizer ICloneable Inherited Members LineSymbolizer.Render(MapViewport, ILineal, Graphics) LineSymbolizer.LineStringToPath(ILineString, MapViewport) LineSymbolizer.Line LineSymbolizer.Symbolize(Graphics, MapViewport) BaseSymbolizer.SmoothingMode BaseSymbolizer.PixelOffsetMode BaseSymbolizer.Begin(Graphics, MapViewport, Int32) BaseSymbolizer.End(Graphics, MapViewport) DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Symbolizer Assembly : SharpMap.dll Syntax [Serializable] public class WarpedLineSymbolizer : LineSymbolizer, IDisposableEx, IDisposable, ILineSymbolizer, ISymbolizer<ILineal>, ISymbolizer, ICloneable Properties | Improve this Doc View Source Fill Gets or sets the brush used to fill closed objects Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Interval The interval between each pattern object Declaration public float Interval { get; set; } Property Value Type Description Single | Improve this Doc View Source Pattern Pattern to warp to Declaration public GraphicsPath Pattern { get; set; } Property Value Type Description GraphicsPath Methods | Improve this Doc View Source Clone() Declaration public override object Clone() Returns Type Description Object Overrides BaseSymbolizer.Clone() | Improve this Doc View Source GetGreaterSeries(Single, Single) Creates a pattern symbolizing a linestring like this >>>>> Declaration public static GraphicsPath GetGreaterSeries(float x, float y) Parameters Type Name Description Single x The length of the peak Single y the offset left and right from the original line Returns Type Description GraphicsPath The pattern | Improve this Doc View Source GetTriangle(Single, Int32) Creates a triangle pattern Declaration public static GraphicsPath GetTriangle(float size, int orientation) Parameters Type Name Description Single size The base length of the triangle Int32 orientation The orientation of the triangle All other values are reduced using modulo operation Returns Type Description GraphicsPath | Improve this Doc View Source GetTriangleSeries(Single, Single) Creates a triangle pattern Declaration [Obsolete(\"Use GetTriangle along with Interval\")] public static GraphicsPath GetTriangleSeries(float x, float y) Parameters Type Name Description Single x The base length of the triangle Single y The location of the next triangle Returns Type Description GraphicsPath | Improve this Doc View Source GetTriangleSeriesForward(Single, Single) Creates a forward oriented triangle pattern Declaration [Obsolete(\"Use GetTriangle along with Interval\")] public static GraphicsPath GetTriangleSeriesForward(float x, float y) Parameters Type Name Description Single x The base length of the triangle Single y The location of the next triangle Returns Type Description GraphicsPath | Improve this Doc View Source GetZigZag(Single, Single) Create a \"zigzag\" pattern, sort of like a rotated by 90 degree Z Declaration public static GraphicsPath GetZigZag(float x, float y) Parameters Type Name Description Single x The width of a step op the linestring axis. Single y The offset left and right from the axis. Returns Type Description GraphicsPath The pattern | Improve this Doc View Source OnRenderInternal(MapViewport, ILineString, Graphics) Function that actually renders the linestring Declaration protected override void OnRenderInternal(MapViewport map, ILineString lineString, Graphics graphics) Parameters Type Name Description MapViewport map The map GeoAPI.Geometries.ILineString lineString The line string to symbolize. Graphics graphics The graphics Overrides LineSymbolizer.OnRenderInternal(MapViewport, ILineString, Graphics) | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides LineSymbolizer.ReleaseManagedResources() Implements IDisposableEx System.IDisposable ILineSymbolizer ISymbolizer<TGeometry> ISymbolizer System.ICloneable"
  },
  "api/SharpMap.Rendering.TextOnPath.html": {
    "href": "api/SharpMap.Rendering.TextOnPath.html",
    "title": "Class TextOnPath | SharpMap",
    "keywords": "Class TextOnPath Text on path generator class Inheritance Object TextOnPath Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax [Obsolete(\"Deprecated in favor of more efficient rendering techniques\")] public class TextOnPath Fields | Improve this Doc View Source LastError The last catched exception is stored here Declaration public Exception LastError Field Value Type Description Exception Properties | Improve this Doc View Source Angles Gets or sets a list of angles (in radians?) Declaration public List<float> Angles { get; } Property Value Type Description List < Single > | Improve this Doc View Source ColorHalo Gets or sets the Pen to use for halo'ing the text Declaration public Pen ColorHalo { get; set; } Property Value Type Description Pen | Improve this Doc View Source FillColorTop Gets or sets a value indicating the Brush used to fill the text path Declaration public Brush FillColorTop { get; set; } Property Value Type Description Brush | Improve this Doc View Source Font Gets or sets the Font to use for drawing the text Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source Graphics Gets or sets the Graphics object Declaration public Graphics Graphics { get; set; } Property Value Type Description Graphics | Improve this Doc View Source GraphicsPath Gets or sets a value indicating the GraphicsPath used to render text along Declaration public GraphicsPath GraphicsPath { get; set; } Property Value Type Description GraphicsPath | Improve this Doc View Source LetterSpacePercentage Gets or sets a value controlling the space between letters Declaration public int LetterSpacePercentage { get; set; } Property Value Type Description Int32 Remarks The default value is 100 | Improve this Doc View Source MeasureString Gets or sets a value indicating whether the string should be measured Declaration public bool MeasureString { get; set; } Property Value Type Description Boolean | Improve this Doc View Source PathColorTop Gets or sets a value indicating the color of the GraphicsPath Declaration public Color PathColorTop { get; set; } Property Value Type Description Color | Improve this Doc View Source PathDataTop Gets or sets a value indicating the path's data Declaration public PathData PathDataTop { get; set; } Property Value Type Description PathData | Improve this Doc View Source PointsText Gets or sets a list of PointF s Declaration public List<PointF> PointsText { get; set; } Property Value Type Description List < PointF > | Improve this Doc View Source PointsTextUp Gets or sets a list of PointF s Declaration public List<Point> PointsTextUp { get; set; } Property Value Type Description List < Point > | Improve this Doc View Source RegionList Gets or sets a list of regions Declaration public List<RectangleF> RegionList { get; set; } Property Value Type Description List < RectangleF > | Improve this Doc View Source RotateDegree Gets or sets a value indicating the rotation Declaration public float RotateDegree { get; set; } Property Value Type Description Single | Improve this Doc View Source ShowPath Gets or sets a value indicating that the used path should be rendered as well Declaration public bool ShowPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Text Gets or sets a value indicating the text to render Declaration public string Text { get; set; } Property Value Type Description String | Improve this Doc View Source TextPathAlignTop Get or sets a value indicating the horizontal alignment of the path Declaration public TextPathAlign TextPathAlignTop { get; set; } Property Value Type Description TextPathAlign | Improve this Doc View Source TextPathPathPosition Gets or sets a value indicating the vertical alignment Declaration public TextPathPosition TextPathPathPosition { get; set; } Property Value Type Description TextPathPosition Methods | Improve this Doc View Source DrawTextOnPath() Method to draw the text on the GraphicsPath Declaration public void DrawTextOnPath() | Improve this Doc View Source DrawTextOnPath(PathData, String, Font, Pen, Brush, Int32) Declaration public void DrawTextOnPath(PathData pathdata, string text, Font font, Pen haloPen, Brush fillcolor, int letterspacepercentage) Parameters Type Name Description PathData pathdata The path data String text The text Font font The font Pen haloPen The halo pen Brush fillcolor The brush to fill letters Int32 letterspacepercentage The | Improve this Doc View Source DrawTextOnPathEx() Method to draw the text on the GraphicsPath Declaration public RectangleF DrawTextOnPathEx() Returns Type Description RectangleF The area covered by the rendering process | Improve this Doc View Source GetLinePoints(PointF, PointF, Int32) Metod to get Declaration public PointF[] GetLinePoints(PointF p1, PointF p2, int stepWitdth) Parameters Type Name Description PointF p1 PointF p2 Int32 stepWitdth Returns Type Description PointF [] | Improve this Doc View Source IsVisible(PointF[], Int32) Method to evaluate visibility Declaration public bool IsVisible(PointF[] points, int maxPoints) Parameters Type Name Description PointF [] points An array of PointF s Int32 maxPoints The maximum number of points Returns Type Description Boolean"
  },
  "api/SharpMap.Rendering.TextPathAlign.html": {
    "href": "api/SharpMap.Rendering.TextPathAlign.html",
    "title": "Enum TextPathAlign | SharpMap",
    "keywords": "Enum TextPathAlign Horizontal alignment options for texts on path Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax [Obsolete] public enum TextPathAlign Fields Name Description Center Aligned in the middle Left Aligned on the left Right Aligned on the right"
  },
  "api/SharpMap.Rendering.TextPathPosition.html": {
    "href": "api/SharpMap.Rendering.TextPathPosition.html",
    "title": "Enum TextPathPosition | SharpMap",
    "keywords": "Enum TextPathPosition Vertical alignment option for texts on path Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax [Obsolete] public enum TextPathPosition Fields Name Description CenterPath Center OverPath Above the path UnderPath Below the path"
  },
  "api/SharpMap.Rendering.Thematics.ColorBlend.html": {
    "href": "api/SharpMap.Rendering.Thematics.ColorBlend.html",
    "title": "Class ColorBlend | SharpMap",
    "keywords": "Class ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. Inheritance Object ColorBlend Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public class ColorBlend Constructors | Improve this Doc View Source ColorBlend(Color[], Single[]) Initializes a new instance of the ColorBlend class. Declaration public ColorBlend(Color[] colors, float[] positions) Parameters Type Name Description Color [] colors An array of Color structures that represents the colors to use at corresponding positions along a gradient. Single [] positions An array of values that specify percentages of distance along the gradient line. Properties | Improve this Doc View Source BathymetryMOHID Gets a linear gradient scale with six colours making a Bathymetry like used in MOHID. Declaration public static ColorBlend BathymetryMOHID { get; } Property Value Type Description ColorBlend Remarks Colors pass from Dark Blue over Green , Yellow to Dark Red | Improve this Doc View Source BlackToWhite Gets a linear gradient scale from black to white Declaration public static ColorBlend BlackToWhite { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToGreen Gets a linear gradient scale from blue to green Declaration public static ColorBlend BlueToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source BlueToRed Gets a linear gradient scale from blue to red Declaration public static ColorBlend BlueToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source Colors Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient. Declaration public Color[] Colors { get; set; } Property Value Type Description Color [] An array of Color structures that represents the colors to use at corresponding positions along a gradient. Remarks This property is an array of Color structures that represents the colors to use at corresponding positions along a gradient. Along with the Positions property, this property defines a multicolor gradient. | Improve this Doc View Source DigitalTerrainModelMOHID Gets a linear gradient scale with nine colours making a DTM like used in MOHID. Declaration public static ColorBlend DigitalTerrainModelMOHID { get; } Property Value Type Description ColorBlend Remarks Colors pass from Dark Blue over Green , Yellow to Dark Red | Improve this Doc View Source GreenToBlue Gets a linear gradient scale from green to blue Declaration public static ColorBlend GreenToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source GreenToRed Gets a linear gradient scale from green to red Declaration public static ColorBlend GreenToRed { get; } Property Value Type Description ColorBlend | Improve this Doc View Source InverseRainbowMOHID Gets a linear gradient scale with nine colours making a INVERSE RAINBOW like used in MOHID. Declaration public static ColorBlend InverseRainbowMOHID { get; } Property Value Type Description ColorBlend Remarks Colors pass from Dark Red, over Yellow and Green to Dark Blue | Improve this Doc View Source Positions Gets or sets the positions along a gradient line. Declaration public float[] Positions { get; set; } Property Value Type Description Single [] An array of values that specify percentages of distance along the gradient line. Remarks The elements of this array specify percentages of distance along the gradient line. For example, an element value of 0.2f specifies that this point is 20 percent of the total distance from the starting point. The elements in this array are represented by float values between 0.0f and 1.0f, and the first element of the array must be 0.0f and the last element must be 1.0f. Along with the Colors property, this property defines a multicolor gradient. | Improve this Doc View Source Rainbow5 Gets a linear gradient scale with five colours making a rainbow from red to blue. Declaration public static ColorBlend Rainbow5 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 0.25: { Color.Red, Color.Yellow, Color.Green, Color.Cyan, Color.Blue } | Improve this Doc View Source Rainbow7 Gets a linear gradient scale with seven colours making a rainbow from red to violet. Declaration public static ColorBlend Rainbow7 { get; } Property Value Type Description ColorBlend Remarks Colors span the following with an interval of 1/6: { Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Blue, Color.Indigo, Color.Violet } | Improve this Doc View Source RainbowMOHID Gets a linear gradient scale with nine colours making a RAINBOW like used in MOHID. Declaration public static ColorBlend RainbowMOHID { get; } Property Value Type Description ColorBlend Remarks Colors pass from Dark Blue over Green , Yellow to Dark Red | Improve this Doc View Source RedToBlue Gets a linear gradient scale from red to blue Declaration public static ColorBlend RedToBlue { get; } Property Value Type Description ColorBlend | Improve this Doc View Source RedToGreen Gets a linear gradient scale from red to green Declaration public static ColorBlend RedToGreen { get; } Property Value Type Description ColorBlend | Improve this Doc View Source WhiteToBlack Gets a linear gradient scale from white to black Declaration public static ColorBlend WhiteToBlack { get; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source GetColor(Single) Gets the color from the scale at position 'pos'. Declaration public Color GetColor(float pos) Parameters Type Name Description Single pos Position on scale between 0.0f and 1.0f Returns Type Description Color Color on scale Remarks If the position is outside the scale [0..1] only the fractional part is used (in other words the scale restarts for each integer-part). | Improve this Doc View Source ThreeColors(Color, Color, Color) Creates a linear gradient scale from three colors Declaration public static ColorBlend ThreeColors(Color fromColor, Color middleColor, Color toColor) Parameters Type Name Description Color fromColor Color middleColor Color toColor Returns Type Description ColorBlend | Improve this Doc View Source ToBrush(Rectangle, Single) Converts the color blend to a gradient brush Declaration public LinearGradientBrush ToBrush(Rectangle rectangle, float angle) Parameters Type Name Description Rectangle rectangle Single angle Returns Type Description LinearGradientBrush | Improve this Doc View Source TwoColors(Color, Color) Creates a linear gradient scale from two colors Declaration public static ColorBlend TwoColors(Color fromColor, Color toColor) Parameters Type Name Description Color fromColor Color toColor Returns Type Description ColorBlend See Also GradientTheme"
  },
  "api/SharpMap.Rendering.Thematics.CustomTheme.GetStyleMethod.html": {
    "href": "api/SharpMap.Rendering.Thematics.CustomTheme.GetStyleMethod.html",
    "title": "Delegate CustomTheme.GetStyleMethod | SharpMap",
    "keywords": "Delegate CustomTheme.GetStyleMethod Custom Style Delegate method Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax public delegate IStyle GetStyleMethod(FeatureDataRow dr); Parameters Type Name Description FeatureDataRow dr Feature Returns Type Description IStyle Style to be applied to feature Remarks The GetStyle delegate is used for determining the style of a feature using the StyleDelegate property. The method must take a FeatureDataRow and return an IStyle . If the method returns null, the default style will be used for rendering. The following example can used for highlighting all features where the attribute \"NAME\" starts with \"S\". SharpMap.Rendering.Thematics.CustomTheme iTheme = new SharpMap.Rendering.Thematics.CustomTheme(GetCustomStyle); SharpMap.Styles.VectorStyle defaultstyle = new SharpMap.Styles.VectorStyle(); //Create default renderstyle defaultstyle.Fill = Brushes.Gray; iTheme.DefaultStyle = defaultstyle; [...] //Set up delegate for determining fill-color. //Delegate will fill all objects with a yellow color where the attribute \"NAME\" starts with \"S\". private static SharpMap.Styles.VectorStyle GetCustomStyle(SharpMap.Data.FeatureDataRow row) { if (row[&quot;NAME&quot;].ToString().StartsWith(&quot;S&quot;)) { SharpMap.Styles.VectorStyle style = new SharpMap.Styles.VectorStyle(); style.Fill = Brushes.Yellow; return style; } else return null; //Return null which will render the default style }"
  },
  "api/SharpMap.Rendering.Thematics.CustomTheme.html": {
    "href": "api/SharpMap.Rendering.Thematics.CustomTheme.html",
    "title": "Class CustomTheme | SharpMap",
    "keywords": "Class CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. Inheritance Object CustomTheme Implements IThemeEx ITheme ISerializable ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public class CustomTheme : IThemeEx, ITheme, ISerializable, ICloneable Constructors | Improve this Doc View Source CustomTheme(CustomTheme.GetStyleMethod) Initializes a new instance of the CustomTheme class Declaration public CustomTheme(CustomTheme.GetStyleMethod getStyleMethod) Parameters Type Name Description CustomTheme.GetStyleMethod getStyleMethod Properties | Improve this Doc View Source DefaultStyle Gets or sets the default style when an attribute isn't found in any bucket Declaration public IStyle DefaultStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source GetStyleDelegateEx Custom Style Delegate method providing access to current zoom/scale via MapViewport. GetStyleDelegateEx takes priority over GetStyle Declaration public Func<MapViewport, FeatureDataRow, IStyle> GetStyleDelegateEx { get; set; } Property Value Type Description Func < MapViewport , FeatureDataRow , IStyle > Style to be applied to feature Remarks GetStyleDelegateEx is used for determining the style of a feature. Provide a lambda-style reference to public function in your implementation of CustomTheme Func < MapViewport, FeatureDataRow, IStyle> f = (mvp, fdr) => MyPublicFunction(mvp, fdr); GetStyleDelegateEx = f; in which signature of MyPublicFunction is: public SharpMap.Styles.VectorStyle MyPublicFunction(MapViewport mapViewport, FeatureDataRow feature) | Improve this Doc View Source StyleDelegate Gets or sets the style delegate used for determining the style of a feature If map zoom/scale are also required by delegate then refer to IThemeEx and GetStyleDelegateEx property Declaration public CustomTheme.GetStyleMethod StyleDelegate { get; set; } Property Value Type Description CustomTheme.GetStyleMethod Remarks The delegate must take a FeatureDataRow and return an IStyle . If the method returns null, the default style will be used for rendering (note - default style may be set to null if required). The example below creates a delegate that can be used for assigning the rendering of a road theme. If the road-class is larger than '3', it will be rendered using a thick red line. private static SharpMap.Styles.VectorStyle GetRoadStyle(SharpMap.Data.FeatureDataRow row) { SharpMap.Styles.VectorStyle style = new SharpMap.Styles.VectorStyle(); if(((int)row[\"RoadClass\"])>3) style.Line = new Pen(Color.Red,5f); else style.Line = new Pen(Color.Black,1f); return style; } See Also CustomTheme.GetStyleMethod Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source GetStyle(FeatureDataRow) Returns the Style based on an attribute value Declaration public IStyle GetStyle(FeatureDataRow feature) Parameters Type Name Description FeatureDataRow feature DataRow Returns Type Description IStyle Style generated by GetStyle-Delegate | Improve this Doc View Source GetStyle(MapViewport, FeatureDataRow) Returns the Style based on an mapViewPort scale or zoom and/or attribute value(s) Declaration public IStyle GetStyle(MapViewport mapViewPort, FeatureDataRow feature) Parameters Type Name Description MapViewport mapViewPort MapViewport FeatureDataRow feature DataRow Returns Type Description IStyle Style generated by GetStyle-Delegate Explicit Interface Implementations | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements IThemeEx ITheme System.Runtime.Serialization.ISerializable System.ICloneable"
  },
  "api/SharpMap.Rendering.Thematics.FontSizeTheme.html": {
    "href": "api/SharpMap.Rendering.Thematics.FontSizeTheme.html",
    "title": "Class FontSizeTheme | SharpMap",
    "keywords": "Class FontSizeTheme A theme that calculates the font size dependant on the map's zoom Inheritance Object DisposableObject FontSizeTheme Implements IDisposableEx IDisposable ITheme Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public class FontSizeTheme : DisposableObject, IDisposableEx, IDisposable, ITheme Examples // Create a map var map = new SharpMap.Map(); // Create the label layer var layer = new SharpMap.Layers.LabelLayer(\"Label\"); // Assign data source layer.DataSource = myDataSource; // Assign theme layer.Theme = new SharpMap.Rendering.Thematics.FontSizeTheme(layer, map) { // these values are both optional MinFontSize = 6f, FontSizeScale = 10f, //BaseTheme = SomeOtherLabelStyleTheme }; // Add layer to map map.Layers.Add(layer); Constructors | Improve this Doc View Source FontSizeTheme(LabelLayer, Map) Creates an instance of this class Declaration public FontSizeTheme(LabelLayer layer, Map map) Parameters Type Name Description LabelLayer layer Map map Properties | Improve this Doc View Source BaseTheme Gets or sets an additional theme that has to be computed before this style is applied Declaration public ITheme BaseTheme { get; set; } Property Value Type Description ITheme | Improve this Doc View Source CalculateSize Function to calculate the size of the font in Pixel Declaration public Func<Map, float, float> CalculateSize { get; set; } Property Value Type Description Func < Map , Single , Single > | Improve this Doc View Source FontSizeScale Gets or sets a value indicating the scale factor for the font size Declaration public float? FontSizeScale { get; set; } Property Value Type Description Nullable < Single > | Improve this Doc View Source MinFontSize Gets or sets a value indicating at which size the font is being drawn Declaration public float? MinFontSize { get; set; } Property Value Type Description Nullable < Single > Methods | Improve this Doc View Source GetStyle(FeatureDataRow) Returns the style based on a feature Declaration public IStyle GetStyle(FeatureDataRow attribute) Parameters Type Name Description FeatureDataRow attribute Set of attribute values to calculate the IStyle from Returns Type Description IStyle The style | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() | Improve this Doc View Source TreatSizeAsMapUnits(Map, Single) Default Implementation of a size conversion from map units to Pixel . Declaration public float TreatSizeAsMapUnits(Map map, float sizeInMapUnits) Parameters Type Name Description Map map The map Single sizeInMapUnits The size of the font in map units Returns Type Description Single A font size in pixel | Improve this Doc View Source UpdateStyle(LabelStyle, Single) Method to update the style according to the new size Declaration protected virtual LabelStyle UpdateStyle(LabelStyle labelStyle, float newSize) Parameters Type Name Description LabelStyle labelStyle The label style Single newSize A new size Returns Type Description LabelStyle The updated label style Implements IDisposableEx System.IDisposable ITheme"
  },
  "api/SharpMap.Rendering.Thematics.GradientTheme.html": {
    "href": "api/SharpMap.Rendering.Thematics.GradientTheme.html",
    "title": "Class GradientTheme | SharpMap",
    "keywords": "Class GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. Inheritance Object GradientThemeBase GradientTheme Implements ITheme ICloneable Inherited Members GradientThemeBase.Min GradientThemeBase.Max GradientThemeBase.MinStyle GradientThemeBase.MaxStyle GradientThemeBase.TextColorBlend GradientThemeBase.LineColorBlend GradientThemeBase.FillColorBlend GradientThemeBase.CalculateVectorStyle(VectorStyle, VectorStyle, Double) GradientThemeBase.CalculateLabelStyle(LabelStyle, LabelStyle, Double) GradientThemeBase.Fraction(Double) GradientThemeBase.InterpolateBool(Boolean, Boolean, Double) GradientThemeBase.InterpolateFloat(Single, Single, Double) GradientThemeBase.InterpolateDouble(Double, Double, Double) GradientThemeBase.InterpolateBrush(Brush, Brush, Double) GradientThemeBase.InterpolatePen(Pen, Pen, Double) GradientThemeBase.InterpolateColor(Color, Color, Double) GradientThemeBase.GetStyle(FeatureDataRow) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public class GradientTheme : GradientThemeBase, ITheme, ICloneable Constructors | Improve this Doc View Source GradientTheme(String, Double, Double, IStyle, IStyle) Initializes a new instance of the GradientTheme class Declaration public GradientTheme(string columnName, double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description String columnName Name of column to extract the attribute Double minValue Minimum value Double maxValue Maximum value IStyle minStyle Color for minimum value IStyle maxStyle Color for maximum value Remarks The gradient theme interpolates linearly between two styles based on a numerical attribute in the datasource. This is useful for scaling symbols, line widths, line and fill colors from numerical attributes. Colors are interpolated between two colors, but if you want to interpolate through more colors (fx. a rainbow), set the TextColorBlend , LineColorBlend and FillColorBlend properties to a custom ColorBlend . The following properties are scaled (properties not mentioned here are not interpolated): Property Remarks Color Red, Green, Blue and Alpha values are linearly interpolated. Pen The color, width, color of pens are interpolated. MiterLimit,StartCap,EndCap,LineJoin,DashStyle,DashPattern,DashOffset,DashCap,CompoundArray, and Alignment are switched in the middle of the min/max values. SolidBrush SolidBrush color are interpolated. Other brushes are not supported. VectorStyle MaxVisible, MinVisible, Line, Outline, Fill and SymbolScale are scaled linearly. Symbol, EnableOutline and Enabled switch in the middle of the min/max values. LabelStyle FontSize, BackColor, ForeColor, MaxVisible, MinVisible, Offset are scaled linearly. All other properties use min-style. Creating a rainbow colorblend showing colors from red, through yellow, green and blue depicting the population density of a country. //Create two vector styles to interpolate between SharpMap.Styles.VectorStyle min = new SharpMap.Styles.VectorStyle(); SharpMap.Styles.VectorStyle max = new SharpMap.Styles.VectorStyle(); min.Outline.Width = 1f; //Outline width of the minimum value max.Outline.Width = 3f; //Outline width of the maximum value //Create a theme interpolating population density between 0 and 400 SharpMap.Rendering.Thematics.GradientTheme popdens = new SharpMap.Rendering.Thematics.GradientTheme(\"PopDens\", 0, 400, min, max); //Set the fill-style colors to be a rainbow blend from red to blue. popdens.FillColorBlend = SharpMap.Rendering.Thematics.ColorBlend.Rainbow5; myVectorLayer.Theme = popdens; Properties | Improve this Doc View Source ColumnName Gets or sets the column name from where to get the attribute value Declaration public string ColumnName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source GetAttributeValue(FeatureDataRow) Function to get a Double value for ColumnName from row . Declaration protected override double GetAttributeValue(FeatureDataRow row) Parameters Type Name Description FeatureDataRow row The row Returns Type Description Double A Double value Overrides GradientThemeBase.GetAttributeValue(FeatureDataRow) Implements ITheme System.ICloneable"
  },
  "api/SharpMap.Rendering.Thematics.GradientThemeBase.html": {
    "href": "api/SharpMap.Rendering.Thematics.GradientThemeBase.html",
    "title": "Class GradientThemeBase | SharpMap",
    "keywords": "Class GradientThemeBase Gradient theme base class Inheritance Object GradientThemeBase GradientTheme Implements ITheme Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public abstract class GradientThemeBase : ITheme Constructors | Improve this Doc View Source GradientThemeBase(Double, Double, IStyle, IStyle) Creates an instance of this class Declaration protected GradientThemeBase(double minValue, double maxValue, IStyle minStyle, IStyle maxStyle) Parameters Type Name Description Double minValue The minimum value Double maxValue The maximum value IStyle minStyle The IStyle to apply for values equal to minValue IStyle maxStyle The IStyle to apply for values equal to maxValue Properties | Improve this Doc View Source FillColorBlend Gets or sets the ColorBlend used as Fill Declaration public ColorBlend FillColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source LineColorBlend Gets or sets the ColorBlend used on lines Declaration public ColorBlend LineColorBlend { get; set; } Property Value Type Description ColorBlend | Improve this Doc View Source Max Gets or sets the maximum value of the gradient Declaration public double Max { get; set; } Property Value Type Description Double | Improve this Doc View Source MaxStyle Gets or sets the IStyle for the maximum value Declaration public IStyle MaxStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source Min Gets or sets the minimum value of the gradient Declaration public double Min { get; set; } Property Value Type Description Double | Improve this Doc View Source MinStyle Gets or sets the IStyle for the minimum value Declaration public IStyle MinStyle { get; set; } Property Value Type Description IStyle | Improve this Doc View Source TextColorBlend Gets or sets the ColorBlend used on labels Declaration public ColorBlend TextColorBlend { get; set; } Property Value Type Description ColorBlend Methods | Improve this Doc View Source CalculateLabelStyle(LabelStyle, LabelStyle, Double) Function to compute a new LabelStyle for the given value Declaration protected LabelStyle CalculateLabelStyle(LabelStyle min, LabelStyle max, double value) Parameters Type Name Description LabelStyle min The minimum LabelStyle LabelStyle max The maximum LabelStyle Double value The value Returns Type Description LabelStyle A LabelStyle | Improve this Doc View Source CalculateVectorStyle(VectorStyle, VectorStyle, Double) Function to compute a new VectorStyle for the given value Declaration protected VectorStyle CalculateVectorStyle(VectorStyle min, VectorStyle max, double value) Parameters Type Name Description VectorStyle min The minimum VectorStyle VectorStyle max The maximum VectorStyle Double value The value Returns Type Description VectorStyle A VectorStyle | Improve this Doc View Source Fraction(Double) Function to compute the fraction for attr based on Min and Max Declaration protected double Fraction(double attr) Parameters Type Name Description Double attr The attribute value to compute the fraction for Returns Type Description Double A value in the ℝ[0, 1] | Improve this Doc View Source GetAttributeValue(FeatureDataRow) Function to get a Double value from row . Declaration protected abstract double GetAttributeValue(FeatureDataRow row) Parameters Type Name Description FeatureDataRow row The row Returns Type Description Double A Double value | Improve this Doc View Source GetStyle(FeatureDataRow) Returns the style based on a numeric DataColumn, where style properties are linearly interpolated between max and min values. Declaration public virtual IStyle GetStyle(FeatureDataRow row) Parameters Type Name Description FeatureDataRow row Feature Returns Type Description IStyle IStyle calculated by a linear interpolation between the min/max styles | Improve this Doc View Source InterpolateBool(Boolean, Boolean, Double) Function to interpolate a Boolean value for attr . Declaration protected bool InterpolateBool(bool min, bool max, double attr) Parameters Type Name Description Boolean min The value to return if Fraction(Double) / attr ) <= 0.5d Boolean max The value to return if Fraction(Double) / attr ) > 0.5d Double attr The value to test Returns Type Description Boolean min , if Fraction(Double) / attr ) <= 0.5d , else max | Improve this Doc View Source InterpolateBrush(Brush, Brush, Double) Function to interpolate a Brush value for attr Declaration protected SolidBrush InterpolateBrush(Brush min, Brush max, double attr) Parameters Type Name Description Brush min The minimum value Brush max The maximum value Double attr The value to test Returns Type Description SolidBrush An interpolated SolidBrush . Remarks Currently only SolidBrush es are interpolated | Improve this Doc View Source InterpolateColor(Color, Color, Double) Function to interpolate a Color value for attr Declaration protected Color InterpolateColor(Color minCol, Color maxCol, double attr) Parameters Type Name Description Color minCol The minimum Color Color maxCol The maximum Color Double attr The value to test Returns Type Description Color An interpolated Color . | Improve this Doc View Source InterpolateDouble(Double, Double, Double) Function to interpolate a Single value for attr Declaration protected double InterpolateDouble(double min, double max, double attr) Parameters Type Name Description Double min The minimum value Double max The maximum value Double attr The value to test Returns Type Description Double A value in the ℝ[ min , max ] | Improve this Doc View Source InterpolateFloat(Single, Single, Double) Function to interpolate a Single value for attr Declaration protected float InterpolateFloat(float min, float max, double attr) Parameters Type Name Description Single min The minimum value Single max The maximum value Double attr The value to test Returns Type Description Single A value in the ℝ[ min , max ] | Improve this Doc View Source InterpolatePen(Pen, Pen, Double) Function to interpolate a Pen value for attr Declaration protected Pen InterpolatePen(Pen min, Pen max, double attr) Parameters Type Name Description Pen min The minimum value Pen max The maximum value Double attr The value to test Returns Type Description Pen An interpolated Pen . Remarks Currently only SolidColor pens are interpolated Implements ITheme"
  },
  "api/SharpMap.Rendering.Thematics.html": {
    "href": "api/SharpMap.Rendering.Thematics.html",
    "title": "Namespace SharpMap.Rendering.Thematics | SharpMap",
    "keywords": "Namespace SharpMap.Rendering.Thematics Classes ColorBlend Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. CustomTheme The CustomTheme class is used for defining your own thematic rendering by using a custom get-style-delegate. FontSizeTheme A theme that calculates the font size dependant on the map's zoom GradientTheme The GradientTheme class defines a gradient color thematic rendering of features based by a numeric attribute. GradientThemeBase Gradient theme base class UniqueValuesTheme<T> UniqueValuesTheme is a theme each rendered feature is matched against at category that have a different style Interfaces ITheme Interface for rendering a thematic layer IThemeEx Extended interface for rendering a thematic layer based upon current scale or zoom and/or feature attributes Delegates CustomTheme.GetStyleMethod Custom Style Delegate method"
  },
  "api/SharpMap.Rendering.Thematics.ITheme.html": {
    "href": "api/SharpMap.Rendering.Thematics.ITheme.html",
    "title": "Interface ITheme | SharpMap",
    "keywords": "Interface ITheme Interface for rendering a thematic layer Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax public interface ITheme Remarks Implementations of this interface should consider implementing ICloneable when they make use of Pen , Brush or likewise objects of the System.Drawing namespace. Otherwise they are prone to GDI+ rendering exceptions. Methods | Improve this Doc View Source GetStyle(FeatureDataRow) Returns the style based on a feature Declaration IStyle GetStyle(FeatureDataRow feature) Parameters Type Name Description FeatureDataRow feature Set of attribute values to calculate the IStyle from Returns Type Description IStyle The style"
  },
  "api/SharpMap.Rendering.Thematics.IThemeEx.html": {
    "href": "api/SharpMap.Rendering.Thematics.IThemeEx.html",
    "title": "Interface IThemeEx | SharpMap",
    "keywords": "Interface IThemeEx Extended interface for rendering a thematic layer based upon current scale or zoom and/or feature attributes Inherited Members ITheme.GetStyle(FeatureDataRow) Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax public interface IThemeEx : ITheme Remarks Implementations of this interface should consider implementing ICloneable when they make use of Pen , Brush or likewise objects of the System.Drawing namespace. Otherwise they are prone to GDI+ rendering exceptions. Methods | Improve this Doc View Source GetStyle(MapViewport, FeatureDataRow) Calculates a style for a given feature based on a given mapViewPort . Declaration IStyle GetStyle(MapViewport mapViewPort, FeatureDataRow feature) Parameters Type Name Description MapViewport mapViewPort The viewport FeatureDataRow feature The feature Returns Type Description IStyle A style"
  },
  "api/SharpMap.Rendering.Thematics.UniqueValuesTheme-1.html": {
    "href": "api/SharpMap.Rendering.Thematics.UniqueValuesTheme-1.html",
    "title": "Class UniqueValuesTheme<T> | SharpMap",
    "keywords": "Class UniqueValuesTheme<T> UniqueValuesTheme is a theme each rendered feature is matched against at category that have a different style Inheritance Object UniqueValuesTheme<T> Implements ITheme ICloneable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering.Thematics Assembly : SharpMap.dll Syntax [Serializable] public class UniqueValuesTheme<T> : ITheme, ICloneable Type Parameters Name Description T Type of the featureattribute to match Constructors | Improve this Doc View Source UniqueValuesTheme(String, Dictionary<T, IStyle>, IStyle) CategoriesTheme is a theme each rendered feature is matched against at category that have a different style Declaration public UniqueValuesTheme(string attributeName, Dictionary<T, IStyle> styleMap, IStyle defaultStyle) Parameters Type Name Description String attributeName the featureattribute to categorize by Dictionary <T, IStyle > styleMap the map of attributevalue to style IStyle defaultStyle the default style to map features that does not exist in the stylemap with Properties | Improve this Doc View Source AttributeName Gets the name of the attribute column Declaration public string AttributeName { get; } Property Value Type Description String | Improve this Doc View Source DefaultStyle Gets the default style, that is applied if Attribute Declaration public IStyle DefaultStyle { get; } Property Value Type Description IStyle | Improve this Doc View Source UniqueValues Gets the unique values Declaration public string[] UniqueValues { get; } Property Value Type Description String [] Methods | Improve this Doc View Source Clone() Declaration public object Clone() Returns Type Description Object | Improve this Doc View Source GetStyle(FeatureDataRow) Returns the style based on a feature Declaration public IStyle GetStyle(FeatureDataRow attribute) Parameters Type Name Description FeatureDataRow attribute Set of attribute values to calculate the IStyle from Returns Type Description IStyle The style | Improve this Doc View Source GetStyle(String) Function to retrieve the style for a given value Declaration public IStyle GetStyle(string value) Parameters Type Name Description String value The attribute value as string Returns Type Description IStyle The style Implements ITheme System.ICloneable"
  },
  "api/SharpMap.Rendering.VectorRenderer.html": {
    "href": "api/SharpMap.Rendering.VectorRenderer.html",
    "title": "Class VectorRenderer | SharpMap",
    "keywords": "Class VectorRenderer This class renders individual geometry features to a graphics object using the settings of a map object. Inheritance Object VectorRenderer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public static class VectorRenderer Properties | Improve this Doc View Source SizeOfString Delegate used to determine the SizeF of a given string. Declaration public static VectorRenderer.SizeOfStringDelegate SizeOfString { get; set; } Property Value Type Description VectorRenderer.SizeOfStringDelegate Methods | Improve this Doc View Source DrawLabel(Graphics, PointF, PointF, Font, Color, Brush, Pen, Single, String, MapViewport, LabelStyle.HorizontalAlignmentEnum, Nullable<PointF>) Renders a label to the map. Declaration public static void DrawLabel(Graphics g, PointF labelPoint, PointF offset, Font font, Color foreColor, Brush backColor, Pen halo, float rotation, string text, MapViewport map, LabelStyle.HorizontalAlignmentEnum alignment = LabelStyle.HorizontalAlignmentEnum.Left, PointF? rotationPoint = default(PointF? )) Parameters Type Name Description Graphics g Graphics reference PointF labelPoint Label placement PointF offset Offset of label in screen coordinates Font font Font used for rendering Color foreColor Font foreground color Brush backColor Background color Pen halo Color of halo Single rotation Text rotation in degrees String text Text to render MapViewport map Map reference LabelStyle.HorizontalAlignmentEnum alignment Horizontal alignment for multi line labels. If not set Near is used Nullable < PointF > rotationPoint Point where the rotation should take place | Improve this Doc View Source DrawLabelEx(Graphics, PointF, PointF, Font, Color, Brush, Pen, Single, String, MapViewport, LabelStyle.HorizontalAlignmentEnum, Nullable<PointF>) Renders a label to the map. Declaration public static RectangleF DrawLabelEx(Graphics g, PointF labelPoint, PointF offset, Font font, Color foreColor, Brush backColor, Pen halo, float rotation, string text, MapViewport map, LabelStyle.HorizontalAlignmentEnum alignment = LabelStyle.HorizontalAlignmentEnum.Left, PointF? rotationPoint = default(PointF? )) Parameters Type Name Description Graphics g Graphics reference PointF labelPoint Label placement PointF offset Offset of label in screen coordinates Font font Font used for rendering Color foreColor Font foreground color Brush backColor Background color Pen halo Color of halo Single rotation Text rotation in degrees String text Text to render MapViewport map Map reference LabelStyle.HorizontalAlignmentEnum alignment Horizontal alignment for multi line labels. If not set Near is used Nullable < PointF > rotationPoint Point where the rotation should take place Returns Type Description RectangleF | Improve this Doc View Source DrawLineString(Graphics, ILineString, Pen, MapViewport) Renders a LineString to the map. Declaration [Obsolete(\"Not called, will be removed\")] public static void DrawLineString(Graphics g, ILineString line, Pen pen, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.ILineString line LineString to render Pen pen Pen style used for rendering MapViewport map Map reference | Improve this Doc View Source DrawLineString(Graphics, ILineString, Pen, MapViewport, Single) Renders a LineString to the map. Declaration public static void DrawLineString(Graphics g, ILineString line, Pen pen, MapViewport map, float offset) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.ILineString line LineString to render Pen pen Pen style used for rendering MapViewport map Map reference Single offset Offset by which line will be moved to right | Improve this Doc View Source DrawLineStringEx(Graphics, ILineString, Pen, MapViewport, Single) Renders a LineString to the map. Declaration public static RectangleF DrawLineStringEx(Graphics g, ILineString line, Pen pen, MapViewport map, float offset) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.ILineString line LineString to render Pen pen Pen style used for rendering MapViewport map Map reference Single offset Offset by which line will be moved to right Returns Type Description RectangleF The area of the map that was affected by the drawing of the geometry. | Improve this Doc View Source DrawMultiLineString(Graphics, IMultiLineString, Pen, MapViewport, Single) Renders a MultiLineString to the map. Declaration public static void DrawMultiLineString(Graphics g, IMultiLineString lines, Pen pen, MapViewport map, float offset) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiLineString lines MultiLineString to be rendered Pen pen Pen style used for rendering MapViewport map Map reference Single offset Offset by which line will be moved to right | Improve this Doc View Source DrawMultiLineStringEx(Graphics, IMultiLineString, Pen, MapViewport, Single) Renders a MultiLineString to the map. Declaration public static RectangleF DrawMultiLineStringEx(Graphics g, IMultiLineString lines, Pen pen, MapViewport map, float offset) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiLineString lines MultiLineString to be rendered Pen pen Pen style used for rendering MapViewport map Map reference Single offset Offset by which line will be moved to right Returns Type Description RectangleF The area of the map that was affected by the drawing operation | Improve this Doc View Source DrawMultiPoint(IPointSymbolizer, Graphics, IMultiPoint, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static void DrawMultiPoint(IPointSymbolizer symbolizer, Graphics g, IMultiPoint points, MapViewport map) Parameters Type Name Description IPointSymbolizer symbolizer Symbolizer to decorate point Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render MapViewport map Map reference | Improve this Doc View Source DrawMultiPoint(Graphics, IMultiPoint, Brush, Single, PointF, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static void DrawMultiPoint(Graphics g, IMultiPoint points, Brush brush, float size, PointF offset, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render Brush brush Brush reference Single size Size of drawn Point PointF offset Symbol offset af scale=1 MapViewport map Map reference | Improve this Doc View Source DrawMultiPoint(Graphics, IMultiPoint, Image, Single, PointF, Single, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static void DrawMultiPoint(Graphics g, IMultiPoint points, Image symbol, float symbolScale, PointF offset, float rotation, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render Image symbol Symbol to place over point Single symbolScale The amount that the symbol should be scaled. A scale of '1' equals to no scaling PointF offset Symbol offset af scale=1 Single rotation Symbol rotation in degrees MapViewport map Map reference | Improve this Doc View Source DrawMultiPointEx(IPointSymbolizer, Graphics, IMultiPoint, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static RectangleF DrawMultiPointEx(IPointSymbolizer symbolizer, Graphics g, IMultiPoint points, MapViewport map) Parameters Type Name Description IPointSymbolizer symbolizer Symbolizer to decorate point Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawMultiPointEx(Graphics, IMultiPoint, Brush, Single, PointF, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static RectangleF DrawMultiPointEx(Graphics g, IMultiPoint points, Brush brush, float size, PointF offset, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render Brush brush Brush reference Single size Size of drawn Point PointF offset Symbol offset af scale=1 MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawMultiPointEx(Graphics, IMultiPoint, Image, Single, PointF, Single, MapViewport) Renders a GeoAPI.Geometries.IMultiPoint to the map. Declaration public static RectangleF DrawMultiPointEx(Graphics g, IMultiPoint points, Image symbol, float symbolScale, PointF offset, float rotation, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPoint points MultiPoint to render Image symbol Symbol to place over point Single symbolScale The amount that the symbol should be scaled. A scale of '1' equals to no scaling PointF offset Symbol offset af scale=1 Single rotation Symbol rotation in degrees MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawMultiPolygon(Graphics, IMultiPolygon, Brush, Pen, Boolean, MapViewport) Renders a multipolygon byt rendering each polygon in the collection by calling DrawPolygon. Declaration public static void DrawMultiPolygon(Graphics g, IMultiPolygon multiPolygon, Brush brush, Pen pen, bool clip, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPolygon multiPolygon MultiPolygon to render Brush brush Brush used for filling (null or transparent for no filling) Pen pen Outline pen style (null if no outline) Boolean clip Specifies whether polygon clipping should be applied MapViewport map Map reference | Improve this Doc View Source DrawMultiPolygonEx(Graphics, IMultiPolygon, Brush, Pen, Boolean, MapViewport) Renders a multipolygon byt rendering each polygon in the collection by calling DrawPolygon. Declaration public static RectangleF DrawMultiPolygonEx(Graphics g, IMultiPolygon multiPolygon, Brush brush, Pen pen, bool clip, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IMultiPolygon multiPolygon MultiPolygon to render Brush brush Brush used for filling (null or transparent for no filling) Pen pen Outline pen style (null if no outline) Boolean clip Specifies whether polygon clipping should be applied MapViewport map Map reference Returns Type Description RectangleF The area of the map that was affected by the drawing of the geometry. | Improve this Doc View Source DrawPoint(IPointSymbolizer, Graphics, IPoint, MapViewport) Renders a point to the map. Declaration public static void DrawPoint(IPointSymbolizer symbolizer, Graphics g, IPoint point, MapViewport map) Parameters Type Name Description IPointSymbolizer symbolizer Symbolizer to decorate point Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render MapViewport map Map reference | Improve this Doc View Source DrawPoint(Graphics, IPoint, Brush, Single, PointF, MapViewport) Renders a point to the map. Declaration public static void DrawPoint(Graphics g, IPoint point, Brush b, float size, PointF offset, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render Brush b Brush reference Single size Size of drawn Point PointF offset Symbol offset af scale=1 MapViewport map Map reference | Improve this Doc View Source DrawPoint(Graphics, IPoint, Image, Single, PointF, Single, MapViewport) Renders a point to the map. Declaration public static void DrawPoint(Graphics g, IPoint point, Image symbol, float symbolscale, PointF offset, float rotation, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render Image symbol Symbol to place over point Single symbolscale The amount that the symbol should be scaled. A scale of '1' equals to no scaling PointF offset Symbol offset af scale=1 Single rotation Symbol rotation in degrees MapViewport map Map reference | Improve this Doc View Source DrawPointEx(IPointSymbolizer, Graphics, IPoint, MapViewport) Renders a point to the map. Declaration public static RectangleF DrawPointEx(IPointSymbolizer symbolizer, Graphics g, IPoint point, MapViewport map) Parameters Type Name Description IPointSymbolizer symbolizer Symbolizer to decorate point Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawPointEx(Graphics, IPoint, Brush, Single, PointF, MapViewport) Renders a point to the map. Declaration public static RectangleF DrawPointEx(Graphics g, IPoint point, Brush b, float size, PointF offset, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render Brush b Brush reference Single size Size of drawn Point PointF offset Symbol offset af scale=1 MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawPointEx(Graphics, IPoint, Image, Single, PointF, Single, MapViewport) Renders a point to the map. Declaration public static RectangleF DrawPointEx(Graphics g, IPoint point, Image symbol, float symbolScale, PointF offset, float rotation, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPoint point Point to render Image symbol Symbol to place over point Single symbolScale The amount that the symbol should be scaled. A scale of '1' equals to no scaling PointF offset Symbol offset af scale=1 Single rotation Symbol rotation in degrees MapViewport map Map reference Returns Type Description RectangleF | Improve this Doc View Source DrawPolygon(Graphics, IPolygon, Brush, Pen, Boolean, MapViewport) Renders a polygon to the map. Declaration public static void DrawPolygon(Graphics g, IPolygon pol, Brush brush, Pen pen, bool clip, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPolygon pol Polygon to render Brush brush Brush used for filling (null or transparent for no filling) Pen pen Outline pen style (null if no outline) Boolean clip Specifies whether polygon clipping should be applied MapViewport map Map reference | Improve this Doc View Source DrawPolygonEx(Graphics, IPolygon, Brush, Pen, Boolean, MapViewport) Renders a polygon to the map. Declaration public static RectangleF DrawPolygonEx(Graphics g, IPolygon pol, Brush brush, Pen pen, bool clip, MapViewport map) Parameters Type Name Description Graphics g Graphics reference GeoAPI.Geometries.IPolygon pol Polygon to render Brush brush Brush used for filling (null or transparent for no filling) Pen pen Outline pen style (null if no outline) Boolean clip Specifies whether polygon clipping should be applied MapViewport map Map reference Returns Type Description RectangleF The area of the map that was affected by the drawing of the geometry. | Improve this Doc View Source LimitValues(PointF[], Single) Purpose of this method is to prevent the 'overflow error' exception in the FillPath method. This Exception is thrown when the coordinate values become too big (values over -2E+9f always throw an exception, values under 1E+8f seem to be okay). This method limits the coordinates to the values given by the second parameter (plus an minus). Theoretically the lines to and from these limited points are not correct but GDI+ paints incorrect even before that limit is reached. Declaration public static PointF[] LimitValues(PointF[] vertices, float limit) Parameters Type Name Description PointF [] vertices The vertices that need to be limited Single limit The limit at which coordinate values will be cutoff Returns Type Description PointF [] The limited vertices | Improve this Doc View Source SizeOfString74(Graphics, String, Font) Function to get the SizeF of a string when rendered with the given font. Declaration [Obsolete] public static SizeF SizeOfString74(Graphics g, string text, Font font) Parameters Type Name Description Graphics g Graphics object String text the text to render Font font the font to use Returns Type Description SizeF the size | Improve this Doc View Source SizeOfStringBase(Graphics, String, Font) Function to get the SizeF of a string when rendered with the given font. Declaration public static SizeF SizeOfStringBase(Graphics g, string text, Font font) Parameters Type Name Description Graphics g Graphics object String text the text to render Font font the font to use Returns Type Description SizeF the size | Improve this Doc View Source SizeOfStringCeiling(Graphics, String, Font) Function to get the SizeF of a string when rendered with the given font. Declaration public static SizeF SizeOfStringCeiling(Graphics g, string text, Font font) Parameters Type Name Description Graphics g Graphics object String text the text to render Font font the font to use Returns Type Description SizeF the size"
  },
  "api/SharpMap.Rendering.VectorRenderer.SizeOfStringDelegate.html": {
    "href": "api/SharpMap.Rendering.VectorRenderer.SizeOfStringDelegate.html",
    "title": "Delegate VectorRenderer.SizeOfStringDelegate | SharpMap",
    "keywords": "Delegate VectorRenderer.SizeOfStringDelegate Signature for a function that evaluates the length of a string when rendered on a Graphics object with a given font Namespace : SharpMap.Rendering Assembly : SharpMap.dll Syntax public delegate SizeF SizeOfStringDelegate(Graphics g, string text, Font font); Parameters Type Name Description Graphics g Graphics object String text the text to render Font font the font to use Returns Type Description SizeF the size"
  },
  "api/SharpMap.Session.html": {
    "href": "api/SharpMap.Session.html",
    "title": "Class Session | SharpMap",
    "keywords": "Class Session A SharpMap Session class Inheritance Object Session Implements ISession Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap Assembly : SharpMap.dll Syntax public class Session : ISession Properties | Improve this Doc View Source CoordinateSystemRepository Gets the coordinate system repository Declaration public ICoordinateSystemRepository CoordinateSystemRepository { get; set; } Property Value Type Description ICoordinateSystemRepository | Improve this Doc View Source CoordinateSystemServices Gets the coordinate system services instance Declaration public ICoordinateSystemServices CoordinateSystemServices { get; set; } Property Value Type Description GeoAPI.ICoordinateSystemServices | Improve this Doc View Source GeometryServices The geometry services instance Declaration public IGeometryServices GeometryServices { get; set; } Property Value Type Description GeoAPI.IGeometryServices | Improve this Doc View Source Instance Gets a value indicating the current instance Declaration public static ISession Instance { get; } Property Value Type Description ISession Methods | Improve this Doc View Source ReadConfiguration() Method to read the configuration Declaration public ISession ReadConfiguration() Returns Type Description ISession A reference to this session | Improve this Doc View Source SetCoordinateSystemRepository(ICoordinateSystemRepository) Method to set the coordinate system repository class Declaration public ISession SetCoordinateSystemRepository(ICoordinateSystemRepository coordinateSystemRepository) Parameters Type Name Description ICoordinateSystemRepository coordinateSystemRepository The coordinate system repository class Returns Type Description ISession A reference to this session | Improve this Doc View Source SetCoordinateSystemServices(ICoordinateSystemServices) Method to set the coordinate system services class Declaration public ISession SetCoordinateSystemServices(ICoordinateSystemServices coordinateSystemServices) Parameters Type Name Description GeoAPI.ICoordinateSystemServices coordinateSystemServices The coordinate system services class Returns Type Description ISession A reference to this session | Improve this Doc View Source SetGeometryServices(IGeometryServices) Method to set the geometry services class Declaration public ISession SetGeometryServices(IGeometryServices geometryServices) Parameters Type Name Description GeoAPI.IGeometryServices geometryServices The geometry services class Returns Type Description ISession A reference to this session Implements ISession"
  },
  "api/SharpMap.Styles.GroupStyle.html": {
    "href": "api/SharpMap.Styles.GroupStyle.html",
    "title": "Class GroupStyle | SharpMap",
    "keywords": "Class GroupStyle GroupStyle is a holder where several styles can be applied in order Inheritance Object DisposableObject Style VectorStyle GroupStyle Implements IDisposableEx IStyle IDisposable ICloneable Inherited Members VectorStyle.DefaultSymbol VectorStyle.Clone() VectorStyle.ICloneable.Clone() VectorStyle.Line VectorStyle.Outline VectorStyle.EnableOutline VectorStyle.Fill VectorStyle.PointColor VectorStyle.PointSize VectorStyle.Symbol VectorStyle.SymbolScale VectorStyle.SymbolOffset VectorStyle.SymbolRotation VectorStyle.LineOffset VectorStyle.PointSymbolizer VectorStyle.LineSymbolizer VectorStyle.PolygonSymbolizer VectorStyle.ReleaseManagedResources() VectorStyle.CreateRandomStyle() VectorStyle.CreateRandomPuntalStyle() VectorStyle.CreateRandomLinealStyle() VectorStyle.CreateRandomPolygonalStyle() VectorStyle.CreateRandomKnownColor(Int32) Style.MinVisible Style.MaxVisible Style.VisibilityUnits Style.Enabled DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax [Serializable] public class GroupStyle : VectorStyle, IDisposableEx, IStyle, IDisposable, ICloneable Properties | Improve this Doc View Source Count Gets a value indicating the number of VectorStyle s contained in this instance. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Indexer to the VectorStyle s Declaration public VectorStyle this[int idx] { get; } Parameters Type Name Description Int32 idx The index of the VectorStyle Property Value Type Description VectorStyle A VectorStyle Methods | Improve this Doc View Source AddStyle(VectorStyle) Method to add a VectorStyle Declaration public void AddStyle(VectorStyle style) Parameters Type Name Description VectorStyle style Implements IDisposableEx IStyle System.IDisposable System.ICloneable"
  },
  "api/SharpMap.Styles.html": {
    "href": "api/SharpMap.Styles.html",
    "title": "Namespace SharpMap.Styles | SharpMap",
    "keywords": "Namespace SharpMap.Styles Classes GroupStyle GroupStyle is a holder where several styles can be applied in order LabelStyle Defines a style used for rendering labels SldConverter A conversion class to get a VectorStyle from an Styled Layer Descriptor (v1.0) document Style Defines a style used for for defining layer styles VectorStyle Defines a style used for rendering vector data Interfaces IStyle Defines an interface for defining layer styles Enums LabelStyle.HorizontalAlignmentEnum Label text alignment LabelStyle.VerticalAlignmentEnum Label text alignment VisibilityUnits Enumerator of available VisibilityUnits"
  },
  "api/SharpMap.Styles.IStyle.html": {
    "href": "api/SharpMap.Styles.IStyle.html",
    "title": "Interface IStyle | SharpMap",
    "keywords": "Interface IStyle Defines an interface for defining layer styles Inherited Members IDisposable.Dispose() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax public interface IStyle : IDisposable Remarks Implementation should Properties | Improve this Doc View Source Enabled Gets or sets whether objects in this style is rendered or not Declaration bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source VisibilityUnits Gets or Sets what level-reference the Min/Max values are defined in Declaration VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits"
  },
  "api/SharpMap.Styles.LabelStyle.HorizontalAlignmentEnum.html": {
    "href": "api/SharpMap.Styles.LabelStyle.HorizontalAlignmentEnum.html",
    "title": "Enum LabelStyle.HorizontalAlignmentEnum | SharpMap",
    "keywords": "Enum LabelStyle.HorizontalAlignmentEnum Label text alignment Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax public enum HorizontalAlignmentEnum : short Fields Name Description Center Centered Left Left oriented Right Right oriented"
  },
  "api/SharpMap.Styles.LabelStyle.html": {
    "href": "api/SharpMap.Styles.LabelStyle.html",
    "title": "Class LabelStyle | SharpMap",
    "keywords": "Class LabelStyle Defines a style used for rendering labels Inheritance Object DisposableObject Style LabelStyle Implements IDisposableEx IStyle IDisposable ICloneable Inherited Members Style.MinVisible Style.MaxVisible Style.VisibilityUnits Style.Enabled DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax [Serializable] public class LabelStyle : Style, IDisposableEx, IStyle, IDisposable, ICloneable Constructors | Improve this Doc View Source LabelStyle() Initializes a new LabelStyle Declaration public LabelStyle() Properties | Improve this Doc View Source BackColor The background color of the label. Set to transparent brush or null if background isn't needed Declaration public Brush BackColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source CollisionBuffer Distance around label where collision buffer is active Declaration public SizeF CollisionBuffer { get; set; } Property Value Type Description SizeF | Improve this Doc View Source CollisionDetection Gets or sets whether Collision Detection is enabled for the labels. If set to true, label collision will be tested. Declaration public bool CollisionDetection { get; set; } Property Value Type Description Boolean Remarks Just setting this property in a GetStyle(FeatureDataRow) method does not lead to the desired result. You must set it to for the whole layer using the default Style. | Improve this Doc View Source Font Label Font Declaration public Font Font { get; set; } Property Value Type Description Font | Improve this Doc View Source ForeColor Font color Declaration public Color ForeColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Halo Creates a halo around the text Declaration public Pen Halo { get; set; } Property Value Type Description Pen | Improve this Doc View Source HorizontalAlignment The horizontal alignment of the text in relation to the labelpoint Declaration public LabelStyle.HorizontalAlignmentEnum HorizontalAlignment { get; set; } Property Value Type Description LabelStyle.HorizontalAlignmentEnum | Improve this Doc View Source IgnoreLength Gets or sets if length of linestring should be ignored Declaration public bool IgnoreLength { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsTextOnPath get or set label on path Declaration [Obsolete(\"TextOnPath has been deprecated in favor of more efficient rendering techniques\")] public bool IsTextOnPath { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Offset Specifies relative position of labels with respect to objects label point Declaration public PointF Offset { get; set; } Property Value Type Description PointF | Improve this Doc View Source Rotation The Rotation of the text Declaration public float Rotation { get; set; } Property Value Type Description Single | Improve this Doc View Source VerticalAlignment The horizontal alignment of the text in relation to the labelpoint Declaration public LabelStyle.VerticalAlignmentEnum VerticalAlignment { get; set; } Property Value Type Description LabelStyle.VerticalAlignmentEnum Methods | Improve this Doc View Source Clone() Method to create a deep copy of this LabelStyle Declaration public LabelStyle Clone() Returns Type Description LabelStyle A LabelStyle resembling this instance. | Improve this Doc View Source GetFontForGraphics(Graphics) Method to create a font that ca Declaration public Font GetFontForGraphics(Graphics g) Parameters Type Name Description Graphics g Returns Type Description Font | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IDisposableEx IStyle System.IDisposable System.ICloneable"
  },
  "api/SharpMap.Styles.LabelStyle.VerticalAlignmentEnum.html": {
    "href": "api/SharpMap.Styles.LabelStyle.VerticalAlignmentEnum.html",
    "title": "Enum LabelStyle.VerticalAlignmentEnum | SharpMap",
    "keywords": "Enum LabelStyle.VerticalAlignmentEnum Label text alignment Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax public enum VerticalAlignmentEnum : short Fields Name Description Bottom Left oriented Middle Centered Top Right oriented"
  },
  "api/SharpMap.Styles.SldConverter.html": {
    "href": "api/SharpMap.Styles.SldConverter.html",
    "title": "Class SldConverter | SharpMap",
    "keywords": "Class SldConverter A conversion class to get a VectorStyle from an Styled Layer Descriptor (v1.0) document Inheritance Object SldConverter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax public class SldConverter Methods | Improve this Doc View Source ParseFeatureStyle(XmlDocument) Method to parse the vector styles from a XmlDocument Declaration public static IDictionary<string, VectorStyle> ParseFeatureStyle(XmlDocument doc) Parameters Type Name Description XmlDocument doc The xml document Returns Type Description IDictionary < String , VectorStyle > A dictionary of vector styles | Improve this Doc View Source ParseFeatureStyleFromFile(String) Method to parse the vector styles from a xml file Declaration public static IDictionary<string, VectorStyle> ParseFeatureStyleFromFile(string filePath) Parameters Type Name Description String filePath The file path of the xml file Returns Type Description IDictionary < String , VectorStyle > A dictionary of vector styles | Improve this Doc View Source ParseFeatureStyleFromXmlText(String) Method to parse the vector styles from a xml text Declaration public static IDictionary<string, VectorStyle> ParseFeatureStyleFromXmlText(string xmlText) Parameters Type Name Description String xmlText The xml text Returns Type Description IDictionary < String , VectorStyle > A dictionary of vector styles"
  },
  "api/SharpMap.Styles.Style.html": {
    "href": "api/SharpMap.Styles.Style.html",
    "title": "Class Style | SharpMap",
    "keywords": "Class Style Defines a style used for for defining layer styles Inheritance Object DisposableObject Style LabelStyle VectorStyle Implements IDisposableEx IStyle IDisposable Inherited Members DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.ReleaseManagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax [Serializable] public class Style : DisposableObject, IDisposableEx, IStyle, IDisposable Constructors | Improve this Doc View Source Style() Initializes a style as sets Min=0, Max=double.MaxValue and Visible=true Declaration public Style() Properties | Improve this Doc View Source Enabled Specified whether style is rendered or not Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxVisible Gets or sets the maximum zoom value where the style is applied Declaration public double MaxVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source MinVisible Gets or sets the minimum zoom value where the style is applied Declaration public double MinVisible { get; set; } Property Value Type Description Double | Improve this Doc View Source VisibilityUnits Gets or sets what units the min/max visible properties are defined in Declaration public VisibilityUnits VisibilityUnits { get; set; } Property Value Type Description VisibilityUnits Implements IDisposableEx IStyle System.IDisposable"
  },
  "api/SharpMap.Styles.VectorStyle.html": {
    "href": "api/SharpMap.Styles.VectorStyle.html",
    "title": "Class VectorStyle | SharpMap",
    "keywords": "Class VectorStyle Defines a style used for rendering vector data Inheritance Object DisposableObject Style VectorStyle GroupStyle Implements IDisposableEx IStyle IDisposable ICloneable Inherited Members Style.MinVisible Style.MaxVisible Style.VisibilityUnits Style.Enabled DisposableObject.Dispose() DisposableObject.ReleaseUnmanagedResources() DisposableObject.CheckDisposed() DisposableObject.IsDisposed Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax [Serializable] public class VectorStyle : Style, IDisposableEx, IStyle, IDisposable, ICloneable Constructors | Improve this Doc View Source VectorStyle() Initializes a new VectorStyle and sets the default values Declaration public VectorStyle() Remarks Default style values when initialized: *LineStyle: 1px solid black *FillStyle: Solid black *Outline: No Outline *Symbol: null-reference Fields | Improve this Doc View Source DefaultSymbol Default Symbol Declaration public static readonly Image DefaultSymbol Field Value Type Description Image Properties | Improve this Doc View Source EnableOutline Specified whether the objects are rendered with or without outlining Declaration public bool EnableOutline { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Fill Fillstyle for Polygon geometries Declaration public Brush Fill { get; set; } Property Value Type Description Brush | Improve this Doc View Source Line Linestyle for line geometries Declaration public Pen Line { get; set; } Property Value Type Description Pen | Improve this Doc View Source LineOffset Gets or sets the offset (in pixel units) by which line will be offset from its original posision (perpendicular). Declaration public float LineOffset { get; set; } Property Value Type Description Single Remarks A positive value offsets the line to the right A negative value offsets to the left | Improve this Doc View Source LineSymbolizer Gets or sets the symbolizer for lineal geometries Declaration public ILineSymbolizer LineSymbolizer { get; set; } Property Value Type Description ILineSymbolizer Remarks Setting this property will lead to ignorance towards all GeoAPI.Geometries.ILineal related style settings | Improve this Doc View Source Outline Outline style for line and polygon geometries Declaration public Pen Outline { get; set; } Property Value Type Description Pen | Improve this Doc View Source PointColor Fillstyle for Point geometries (will be used if no Symbol is set) Declaration public Brush PointColor { get; set; } Property Value Type Description Brush | Improve this Doc View Source PointSize Size for Point geometries (if drawn with PointColor), will not have affect for Points drawn with Symbol Declaration public float PointSize { get; set; } Property Value Type Description Single | Improve this Doc View Source PointSymbolizer Gets or sets the symbolizer for puntal geometries Declaration public IPointSymbolizer PointSymbolizer { get; set; } Property Value Type Description IPointSymbolizer Remarks Setting this property will lead to ignorance towards all GeoAPI.Geometries.IPuntal related style settings | Improve this Doc View Source PolygonSymbolizer Gets or sets the symbolizer for polygonal geometries Declaration public IPolygonSymbolizer PolygonSymbolizer { get; set; } Property Value Type Description IPolygonSymbolizer Remarks Setting this property will lead to ignorance towards all GeoAPI.Geometries.IPolygonal related style settings | Improve this Doc View Source Symbol Symbol used for rendering points Declaration public Image Symbol { get; set; } Property Value Type Description Image | Improve this Doc View Source SymbolOffset Gets or sets the offset in pixels of the symbol. Declaration public PointF SymbolOffset { get; set; } Property Value Type Description PointF Remarks The symbol offset is scaled with the SymbolScale property and refers to the offset af SymbolScale =1.0. | Improve this Doc View Source SymbolRotation Gets or sets the rotation of the symbol in degrees (clockwise is positive) Declaration public float SymbolRotation { get; set; } Property Value Type Description Single | Improve this Doc View Source SymbolScale Scale of the symbol (defaults to 1) Declaration public float SymbolScale { get; set; } Property Value Type Description Single Remarks Setting the symbolscale to '2.0' doubles the size of the symbol, where a scale of 0.5 makes the scale half the size of the original image Methods | Improve this Doc View Source Clone() Declaration public VectorStyle Clone() Returns Type Description VectorStyle | Improve this Doc View Source CreateRandomKnownColor(Int32) Factory method to create a random color from the SharpMap.Drawing.KnownColor s enumeration Declaration public static Color CreateRandomKnownColor(int alpha = 255) Parameters Type Name Description Int32 alpha An optional alpha value. Returns Type Description Color | Improve this Doc View Source CreateRandomLinealStyle() Factory method to create a random puntal style Declaration public static VectorStyle CreateRandomLinealStyle() Returns Type Description VectorStyle A puntal vector style | Improve this Doc View Source CreateRandomPolygonalStyle() Factory method to create a random puntal style Declaration public static VectorStyle CreateRandomPolygonalStyle() Returns Type Description VectorStyle A puntal vector style | Improve this Doc View Source CreateRandomPuntalStyle() Factory method to create a random puntal style Declaration public static VectorStyle CreateRandomPuntalStyle() Returns Type Description VectorStyle A puntal vector style | Improve this Doc View Source CreateRandomStyle() Utility function to create a random style Declaration public static VectorStyle CreateRandomStyle() Returns Type Description VectorStyle A vector style | Improve this Doc View Source ReleaseManagedResources() Releases managed resources Declaration protected override void ReleaseManagedResources() Overrides DisposableObject.ReleaseManagedResources() Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description Object Implements IDisposableEx IStyle System.IDisposable System.ICloneable"
  },
  "api/SharpMap.Styles.VisibilityUnits.html": {
    "href": "api/SharpMap.Styles.VisibilityUnits.html",
    "title": "Enum VisibilityUnits | SharpMap",
    "keywords": "Enum VisibilityUnits Enumerator of available VisibilityUnits Namespace : SharpMap.Styles Assembly : SharpMap.dll Syntax public enum VisibilityUnits Fields Name Description Scale Map Scale - does not vary with aspect ratio of the viewport ZoomLevel Map ZoomLevel - varies with aspect ratio of viewport"
  },
  "api/SharpMap.Utilities.GeoSpatialMath.html": {
    "href": "api/SharpMap.Utilities.GeoSpatialMath.html",
    "title": "Class GeoSpatialMath | SharpMap",
    "keywords": "Class GeoSpatialMath A Inheritance Object GeoSpatialMath Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public static class GeoSpatialMath Fields | Improve this Doc View Source DegToRad Conversion factor degrees to radians Declaration public const double DegToRad = 0.017453292519943295 Field Value Type Description Double | Improve this Doc View Source MetersPerDegreeAtEquator Meters per degree at equator Declaration public const double MetersPerDegreeAtEquator = 111320.15648544901 Field Value Type Description Double | Improve this Doc View Source MetersPerInch Meters per inch Declaration public const double MetersPerInch = 0.0254 Field Value Type Description Double | Improve this Doc View Source MetersPerMile Meters per mile Declaration public const double MetersPerMile = 1609.347219 Field Value Type Description Double | Improve this Doc View Source MilesPerDegreeAtEquator Miles per degree at equator Declaration public const double MilesPerDegreeAtEquator = 69.171 Field Value Type Description Double | Improve this Doc View Source WebMercatorEnv Web Mercator Domain as Envelope Declaration public static readonly Envelope WebMercatorEnv Field Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source WebMercatorRadius Web Mercator SRID constant Declaration public const double WebMercatorRadius = 6378137 Field Value Type Description Double | Improve this Doc View Source WebMercatorSrid Web Mercator SRID constant Declaration public const int WebMercatorSrid = 3857 Field Value Type Description Int32 Methods | Improve this Doc View Source DiffLongitude(Double, Double) Calculate the difference between two longitudal values constrained 0 - 180 deg Declaration public static double DiffLongitude(double lon1, double lon2) Parameters Type Name Description Double lon1 The first longitue value in degrees Double lon2 The second longitue value in degrees Returns Type Description Double The distance in degrees | Improve this Doc View Source GreatCircleDistance(Double, Double, Double) Calculate the great circle distance between 2 points (ie the shortest distance on the sphere) Declaration public static double GreatCircleDistance(double lon1, double lon2, double lat) Parameters Type Name Description Double lon1 The first longitue value Double lon2 The second longitue value Double lat The common latitued value for lon1 and lon2 Returns Type Description Double The distance in meters | Improve this Doc View Source GreatCircleDistance(Double, Double, Double, Double) Calculate the distance between 2 points on the great circle Declaration public static double GreatCircleDistance(double lon1, double lat1, double lon2, double lat2) Parameters Type Name Description Double lon1 The first longitue value Double lat1 The latitude value for lon1 Double lon2 The second longitue value Double lat2 The latitude value for lon2 Returns Type Description Double The distance in meters | Improve this Doc View Source GreatCircleDistanceReflex(Double, Double, Double) Calculate the great circle distance between 2 points without constraining longitudinal REFLEX angle 0-180deg (ie supports angles > 180 deg). Typically used to support scale calculations on a global projection from longitude -180 to +180 (or even greater when zoomed out), this will NOT be the shortest distance on the sphere when longitudinal angle > 180 degrees. Declaration public static double GreatCircleDistanceReflex(double lon1, double lon2, double lat) Parameters Type Name Description Double lon1 The first longitude value Double lon2 The second longitude value Double lat The common latitude value for lon1 and lon2 Returns Type Description Double The distance in meters from LHS to RHS of a global projection. This will NOT the shortest distance on sphere for longitudinal REFLEX (> 180deg) angles"
  },
  "api/SharpMap.Utilities.html": {
    "href": "api/SharpMap.Utilities.html",
    "title": "Namespace SharpMap.Utilities | SharpMap",
    "keywords": "Namespace SharpMap.Utilities Classes GeoSpatialMath A LeastSquaresTransform Calculates Affine and Helmert transformation using Least-Squares Regression of input and output points LineOffset Methods for calculating line offsets Providers Provider helper utilities ScaleCalculations Functions for calculating Scales Surrogates A class containing several serialization surrogate classes Surrogates.AdjustableArrowCapSurrogate Surrogate class used to serialize AdjustableArrowCap Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef Object reference class for AdjustableArrowCap Surrogates.BlendSurrogate Surrogate class for Blend Surrogates.BrushSurrogate A serialization surrogate for Brush brushes. Surrogates.ColorBlendSurrogate Surrogate class for ColorBlend Surrogates.ColorMapSurrogate Surrogate class for ColorMap Surrogates.ColorMatrixSurrogate Surrogate class for ColorMap Surrogates.CustomLineCapSurrogate Surrogate class used to serialize CustomLineCap objects Surrogates.CustomLineCapSurrogate.CustomLineCapRef Serialization utility class Surrogates.GraphicsPathSurrogate Serialization surrogate class for GraphicsPath Surrogates.GraphicsPathSurrogate.GraphicsPathRef Object reference class for GraphicsPath Surrogates.HatchBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Surrogates.HatchBrushSurrogate.HatchBrushRef HatchBrush-Stub class for serialization Surrogates.LinearGradientBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef TextureBrush-Stub class for serialization Surrogates.MatrixSurrogate Surrogate class used for serializing System.Drawing.Drawing2D.Matrix Surrogates.MatrixSurrogate.MatrixRef Matrix-Stub class Surrogates.PenSurrogate Surrogate class used for serializing System.Drawing.Pen Surrogates.PenSurrogate.PenRef Serialization utility class Surrogates.SolidBrushSurrogate Surrogate class used for serializing System.Drawing.SolidBrush Surrogates.TextureBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Surrogates.TextureBrushSurrogate.TextureBrushRef TextureBrush-Stub class for serialization Transform Class for transforming between world and image coordinate Version Version information helper class"
  },
  "api/SharpMap.Utilities.Indexing.BinaryTree-2.html": {
    "href": "api/SharpMap.Utilities.Indexing.BinaryTree-2.html",
    "title": "Class BinaryTree<T, U> | SharpMap",
    "keywords": "Class BinaryTree<T, U> The BinaryTree class are used for indexing values to enhance the speed of queries Inheritance Object BinaryTree<T, U> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Indexing Assembly : SharpMap.dll Syntax [Serializable] public class BinaryTree<T, U> where T : IComparable<T> Type Parameters Name Description T Value type to be indexed U Value ID type Constructors | Improve this Doc View Source BinaryTree() Initializes a new instance of the generic binary tree. Declaration public BinaryTree() Properties | Improve this Doc View Source InOrder Gets an enumerator for all the values in the tree in ascending order Declaration public IEnumerable<BinaryTree<T, U>.ItemValue> InOrder { get; } Property Value Type Description IEnumerable < BinaryTree.ItemValue <>> Methods | Improve this Doc View Source Add(BinaryTree<T, U>.ItemValue) Inserts a value into the tree Declaration public void Add(BinaryTree<T, U>.ItemValue item) Parameters Type Name Description BinaryTree.ItemValue <> item | Improve this Doc View Source Add(BinaryTree<T, U>.ItemValue[]) Inserts a value into the tree Declaration public void Add(params BinaryTree<T, U>.ItemValue[] items) Parameters Type Name Description BinaryTree.ItemValue <>[] items | Improve this Doc View Source Between(T, T) Gets and enumerator for the values between min and max in ascending order Declaration public IEnumerable<BinaryTree<T, U>.ItemValue> Between(T min, T max) Parameters Type Name Description T min T max Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source Find(T) Enumerates all objects with the specified value Declaration public IEnumerable<BinaryTree<T, U>.ItemValue> Find(T value) Parameters Type Name Description T value Value to search for Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source StartsWith(String) Enumerates the objects whose string-representation starts with 'str' Declaration public IEnumerable<BinaryTree<T, U>.ItemValue> StartsWith(string str) Parameters Type Name Description String str Returns Type Description IEnumerable < BinaryTree.ItemValue <>> Enumerator | Improve this Doc View Source TraceTree() This is the classic computer science binary tree iteration Declaration public void TraceTree()"
  },
  "api/SharpMap.Utilities.Indexing.BinaryTree-2.ItemValue.html": {
    "href": "api/SharpMap.Utilities.Indexing.BinaryTree-2.ItemValue.html",
    "title": "Struct BinaryTree<T, U>.ItemValue | SharpMap",
    "keywords": "Struct BinaryTree<T, U>.ItemValue A value in a BinaryTree<T, U> . Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Utilities.Indexing Assembly : SharpMap.dll Syntax public struct ItemValue Constructors | Improve this Doc View Source ItemValue(T, U) Creates an instance of an item in a BinaryTree<T, U> . Declaration public ItemValue(T value, U id) Parameters Type Name Description T value Value U id Identifier for the value Fields | Improve this Doc View Source Id Identifier for the value Declaration public U Id Field Value Type Description U | Improve this Doc View Source Value Value Declaration public T Value Field Value Type Description T"
  },
  "api/SharpMap.Utilities.Indexing.html": {
    "href": "api/SharpMap.Utilities.Indexing.html",
    "title": "Namespace SharpMap.Utilities.Indexing | SharpMap",
    "keywords": "Namespace SharpMap.Utilities.Indexing Classes BinaryTree<T, U> The BinaryTree class are used for indexing values to enhance the speed of queries Structs BinaryTree<T, U>.ItemValue A value in a BinaryTree<T, U> . Interfaces ISpatialIndex<TOid> Interface for a spatial index ISpatialIndexFactory<TOid> Interface for all classes that can create a spatial index ISpatialIndexItem<TOid> Interface for items stored in a spatial index"
  },
  "api/SharpMap.Utilities.Indexing.ISpatialIndex-1.html": {
    "href": "api/SharpMap.Utilities.Indexing.ISpatialIndex-1.html",
    "title": "Interface ISpatialIndex<TOid> | SharpMap",
    "keywords": "Interface ISpatialIndex<TOid> Interface for a spatial index Namespace : SharpMap.Utilities.Indexing Assembly : SharpMap.dll Syntax public interface ISpatialIndex<TOid> Type Parameters Name Description TOid The type of the object identifier Properties | Improve this Doc View Source Box Gets a value indicating the area covered by this spatial index Declaration Envelope Box { get; } Property Value Type Description GeoAPI.Geometries.Envelope Methods | Improve this Doc View Source DeleteIndex(String) Method to delete the spatial index from the disk Declaration void DeleteIndex(string filename) Parameters Type Name Description String filename The filename | Improve this Doc View Source SaveIndex(String) Method to save the spatial index to disk Declaration void SaveIndex(string filename) Parameters Type Name Description String filename The filename | Improve this Doc View Source Search(Envelope) Method to search for Declaration Collection<TOid> Search(Envelope extent) Parameters Type Name Description GeoAPI.Geometries.Envelope extent The extent to search Returns Type Description Collection <TOid> A collection of items"
  },
  "api/SharpMap.Utilities.Indexing.ISpatialIndexFactory-1.html": {
    "href": "api/SharpMap.Utilities.Indexing.ISpatialIndexFactory-1.html",
    "title": "Interface ISpatialIndexFactory<TOid> | SharpMap",
    "keywords": "Interface ISpatialIndexFactory<TOid> Interface for all classes that can create a spatial index Namespace : SharpMap.Utilities.Indexing Assembly : SharpMap.dll Syntax public interface ISpatialIndexFactory<TOid> Type Parameters Name Description TOid The type of the object identifier Properties | Improve this Doc View Source Extension Gets a value indicating the file extension Declaration string Extension { get; } Property Value Type Description String Methods | Improve this Doc View Source Create(TOid, Envelope) Method to create a spatial index item Declaration ISpatialIndexItem<TOid> Create(TOid oid, Envelope box) Parameters Type Name Description TOid oid The object's identifier GeoAPI.Geometries.Envelope box The extent Returns Type Description ISpatialIndexItem <TOid> A new spatial index item | Improve this Doc View Source Create(Envelope, Int32, IEnumerable<ISpatialIndexItem<TOid>>) Method to create a spatial index Declaration ISpatialIndex<TOid> Create(Envelope extent, int expectedNumberOfEntries, IEnumerable<ISpatialIndexItem<TOid>> entries) Parameters Type Name Description GeoAPI.Geometries.Envelope extent The extent covered by the spatial index Int32 expectedNumberOfEntries IEnumerable < ISpatialIndexItem <TOid>> entries The entries Returns Type Description ISpatialIndex <TOid> A spatial index | Improve this Doc View Source Load(String) Method to create a spatial index by loading it from file Declaration ISpatialIndex<TOid> Load(string fileName) Parameters Type Name Description String fileName The filename of the file, the spatial index is associated with. The implementation has to take care of the renaming strategy, e.g. change the extension. Returns Type Description ISpatialIndex <TOid> The loaded index"
  },
  "api/SharpMap.Utilities.Indexing.ISpatialIndexItem-1.html": {
    "href": "api/SharpMap.Utilities.Indexing.ISpatialIndexItem-1.html",
    "title": "Interface ISpatialIndexItem<TOid> | SharpMap",
    "keywords": "Interface ISpatialIndexItem<TOid> Interface for items stored in a spatial index Namespace : SharpMap.Utilities.Indexing Assembly : SharpMap.dll Syntax public interface ISpatialIndexItem<out TOid> Type Parameters Name Description TOid The type of the object identifier Properties | Improve this Doc View Source Box Gets the spatial extent of the object Declaration Envelope Box { get; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ID Gets the object's identifier Declaration TOid ID { get; } Property Value Type Description TOid"
  },
  "api/SharpMap.Utilities.LeastSquaresTransform.html": {
    "href": "api/SharpMap.Utilities.LeastSquaresTransform.html",
    "title": "Class LeastSquaresTransform | SharpMap",
    "keywords": "Class LeastSquaresTransform Calculates Affine and Helmert transformation using Least-Squares Regression of input and output points Inheritance Object LeastSquaresTransform Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class LeastSquaresTransform Constructors | Improve this Doc View Source LeastSquaresTransform() Initialize Least Squares transformations Declaration public LeastSquaresTransform() Methods | Improve this Doc View Source AddInputOutputPoint(Coordinate, Coordinate) Adds an input and output value pair to the collection Declaration public void AddInputOutputPoint(Coordinate input, Coordinate output) Parameters Type Name Description GeoAPI.Geometries.Coordinate input GeoAPI.Geometries.Coordinate output | Improve this Doc View Source GetAffineTransformation() Return an array with the six affine transformation parameters {a,b,c,d,e,f} and the sum of the squares of the residuals (s0) Declaration public double[] GetAffineTransformation() Returns Type Description Double [] Array with the six transformation parameters and sum of squared residuals: a,b,c,d,e,f,s0 Remarks a,b defines scale vector 1 of coordinate system, d,e scale vector 2. c,f defines offset. Converting from input (X,Y) to output coordinate system (X',Y') is done by: X' = a*X + b*Y + c, Y' = d*X + e*Y + f Transformation based on Mikhail \"Introduction to Modern Photogrammetry\" p. 399-300. Extended to arbitrary number of measurements by M. Nielsen | Improve this Doc View Source GetHelmertTransformation() Calculates the four helmert transformation parameters {a,b,c,d} and the sum of the squares of the residuals (s0) Declaration public double[] GetHelmertTransformation() Returns Type Description Double [] Array with the four transformation parameters, and sum of squared residuals: a,b,c,d,s0 Remarks a,b defines scale vector 1 of coordinate system, d,e scale vector 2. c,f defines offset. Converting from input (X,Y) to output coordinate system (X',Y') is done by: X' = a*X + b*Y + c, Y' = -b*X + a*Y + d This is a transformation initially based on the affine transformation but slightly simpler. | Improve this Doc View Source GetInputPoint(Int32) Gets the input point value at the specified index Declaration public Coordinate GetInputPoint(int i) Parameters Type Name Description Int32 i index Returns Type Description GeoAPI.Geometries.Coordinate Input point value a index 'i' | Improve this Doc View Source GetOutputPoint(Int32) Gets the output point value at the specified index Declaration public Coordinate GetOutputPoint(int i) Parameters Type Name Description Int32 i index Returns Type Description GeoAPI.Geometries.Coordinate Output point value a index 'i' | Improve this Doc View Source RemoveInputOutputPointAt(Int32) Removes input and output value pair at the specified index Declaration public void RemoveInputOutputPointAt(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source SetInputPointAt(Coordinate, Int32) Sets the input point value at the specified index Declaration public void SetInputPointAt(Coordinate p, int i) Parameters Type Name Description GeoAPI.Geometries.Coordinate p Point value Int32 i index | Improve this Doc View Source SetOutputPointAt(Coordinate, Int32) Sets the output point value at the specified index Declaration public void SetOutputPointAt(Coordinate p, int i) Parameters Type Name Description GeoAPI.Geometries.Coordinate p Point value Int32 i index"
  },
  "api/SharpMap.Utilities.LineOffset.html": {
    "href": "api/SharpMap.Utilities.LineOffset.html",
    "title": "Class LineOffset | SharpMap",
    "keywords": "Class LineOffset Methods for calculating line offsets Inheritance Object LineOffset Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class LineOffset Methods | Improve this Doc View Source OffsetPolyline(PointF[], Single) Offset a Linestring the given amount perpendicular to the line For example if a line should be drawn 10px to the right of its original position Positive offset offsets right Negative offset offsets left Declaration public static PointF[] OffsetPolyline(PointF[] lineCoordinates, float offset) Parameters Type Name Description PointF [] lineCoordinates LineString Single offset offset amount Returns Type Description PointF [] Array of coordinates for the offseted line"
  },
  "api/SharpMap.Utilities.Providers.html": {
    "href": "api/SharpMap.Utilities.Providers.html",
    "title": "Class Providers | SharpMap",
    "keywords": "Class Providers Provider helper utilities Inheritance Object Providers Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class Providers Methods | Improve this Doc View Source GetProviders() Returns a list of available data providers in this assembly Declaration public static Collection<Type> GetProviders() Returns Type Description Collection < Type >"
  },
  "api/SharpMap.Utilities.ScaleCalculations.html": {
    "href": "api/SharpMap.Utilities.ScaleCalculations.html",
    "title": "Class ScaleCalculations | SharpMap",
    "keywords": "Class ScaleCalculations Functions for calculating Scales Inheritance Object ScaleCalculations Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public static class ScaleCalculations Methods | Improve this Doc View Source CalculateScaleLatLong(Double, Double, Double, Double, Int32) Calculate the Representative Fraction Scale for a Lat/Long map. Declaration public static double CalculateScaleLatLong(double lon1, double lon2, double lat, double widthPage, int dpi) Parameters Type Name Description Double lon1 LowerLeft Longitude Double lon2 LowerRight Longitude Double lat LowerLeft Latitude Double widthPage The width of the display area Int32 dpi DPI used to render the map Returns Type Description Double | Improve this Doc View Source CalculateScaleNonLatLong(Double, Double, Double, Int32) Calculate the Representative Fraction Scale for non Lat/Long map. Declaration public static double CalculateScaleNonLatLong(double mapWidthMeters, double mapSizeWidth, double mapUnitFactor, int dpi) Parameters Type Name Description Double mapWidthMeters The current extent width of the Map Double mapSizeWidth The width of the display area Double mapUnitFactor MapUnitFactor is the factor the unit used on the map Int32 dpi DPI used to render the map Returns Type Description Double | Improve this Doc View Source GetMapZoomFromScaleNonLatLong(Double, Double, Int32, Double) Calculates the Zoom-Level for a given Scale, DPI and MapWidth Declaration public static double GetMapZoomFromScaleNonLatLong(double scale, double mapUnitFactor, int dpi, double mapSizeWidth) Parameters Type Name Description Double scale Double mapUnitFactor Int32 dpi Double mapSizeWidth Returns Type Description Double"
  },
  "api/SharpMap.Utilities.SpatialIndexing.Heuristic.html": {
    "href": "api/SharpMap.Utilities.SpatialIndexing.Heuristic.html",
    "title": "Struct Heuristic | SharpMap",
    "keywords": "Struct Heuristic Heuristics used for tree generation Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Utilities.SpatialIndexing Assembly : SharpMap.dll Syntax public struct Heuristic Fields | Improve this Doc View Source maxdepth Maximum tree depth Declaration public int maxdepth Field Value Type Description Int32 | Improve this Doc View Source minerror Minimum Error metric – the volume of a box + a unit cube. The unit cube in the metric prevents big boxes that happen to be flat having a zero result and muddling things up. Declaration public int minerror Field Value Type Description Int32 | Improve this Doc View Source mintricnt Minimum object count at node Declaration public int mintricnt Field Value Type Description Int32 | Improve this Doc View Source tartricnt Target object count at node Declaration public int tartricnt Field Value Type Description Int32"
  },
  "api/SharpMap.Utilities.SpatialIndexing.html": {
    "href": "api/SharpMap.Utilities.SpatialIndexing.html",
    "title": "Namespace SharpMap.Utilities.SpatialIndexing | SharpMap",
    "keywords": "Namespace SharpMap.Utilities.SpatialIndexing Classes QuadTree Constructs a Quad-tree node from a object list and creates its children recursively QuadTreeFactory A factory to create QuadTree spatial indices. Structs Heuristic Heuristics used for tree generation QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree"
  },
  "api/SharpMap.Utilities.SpatialIndexing.QuadTree.BoxObjects.html": {
    "href": "api/SharpMap.Utilities.SpatialIndexing.QuadTree.BoxObjects.html",
    "title": "Struct QuadTree.BoxObjects | SharpMap",
    "keywords": "Struct QuadTree.BoxObjects BoundingBox and Feature ID structure used for storing in the quadtree Implements ISpatialIndexItem < UInt32 > Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Utilities.SpatialIndexing Assembly : SharpMap.dll Syntax public struct BoxObjects : ISpatialIndexItem<uint> Properties | Improve this Doc View Source Box Boundingbox Declaration public Envelope Box { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source ID Feature ID Declaration public uint ID { get; set; } Property Value Type Description UInt32 Implements ISpatialIndexItem<TOid>"
  },
  "api/SharpMap.Utilities.SpatialIndexing.QuadTree.html": {
    "href": "api/SharpMap.Utilities.SpatialIndexing.QuadTree.html",
    "title": "Class QuadTree | SharpMap",
    "keywords": "Class QuadTree Constructs a Quad-tree node from a object list and creates its children recursively Inheritance Object QuadTree Implements IDisposable ISpatialIndex < UInt32 > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.SpatialIndexing Assembly : SharpMap.dll Syntax public class QuadTree : IDisposable, ISpatialIndex<uint> Constructors | Improve this Doc View Source QuadTree(List<QuadTree.BoxObjects>, UInt32, Heuristic) Creates a node and either splits the objects recursively into sub-nodes, or stores them at the node depending on the heuristics. Tree is built top->down Declaration public QuadTree(List<QuadTree.BoxObjects> objList, uint depth, Heuristic heurdata) Parameters Type Name Description List < QuadTree.BoxObjects > objList Geometries to index UInt32 depth Current depth of tree Heuristic heurdata Heuristics data Fields | Improve this Doc View Source _ID Node ID Declaration public uint? _ID Field Value Type Description Nullable < UInt32 > Properties | Improve this Doc View Source Box Gets/sets the Axis Aligned Bounding Box Declaration public Envelope Box { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source Child0 Gets/sets the left child node Declaration public QuadTree Child0 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Child1 Gets/sets the right child node Declaration public QuadTree Child1 { get; set; } Property Value Type Description QuadTree | Improve this Doc View Source Depth Gets the depth of the current node in the tree Declaration public uint Depth { get; } Property Value Type Description UInt32 | Improve this Doc View Source IsLeaf Determines whether the node is a leaf (if data is stored at the node, we assume the node is a leaf) Declaration public bool IsLeaf { get; } Property Value Type Description Boolean | Improve this Doc View Source IsPrunable Gets a value indicating whether this branch is prunable Declaration public bool IsPrunable { get; } Property Value Type Description Boolean | Improve this Doc View Source NodeCount Gets the number of Nodes Declaration public int NodeCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AddNode(QuadTree.BoxObjects, Heuristic) Adds a new QuadTree.BoxObjects to this node. Declaration public void AddNode(QuadTree.BoxObjects o, Heuristic h) Parameters Type Name Description QuadTree.BoxObjects o The boxed object Heuristic h The child node creation heuristic | Improve this Doc View Source CreateRootNode(Envelope) Creates a quadtree root node. Declaration public static QuadTree CreateRootNode(Envelope b) Parameters Type Name Description GeoAPI.Geometries.Envelope b The root bounding box Returns Type Description QuadTree The root node for the quadtree | Improve this Doc View Source DeleteIndex(String) Method to delete the spatial index from the disk Declaration public void DeleteIndex(string filename) Parameters Type Name Description String filename The filename | Improve this Doc View Source Dispose() Disposes the node Declaration public void Dispose() | Improve this Doc View Source ErrorMetric(Envelope) Calculate the floating point error metric Declaration public static double ErrorMetric(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box Returns Type Description Double | Improve this Doc View Source FromFile(String) Loads a quadtree from a file Declaration public static QuadTree FromFile(string filename) Parameters Type Name Description String filename Returns Type Description QuadTree | Improve this Doc View Source SaveIndex(String) Saves the Quadtree to a file Declaration public void SaveIndex(string filename) Parameters Type Name Description String filename | Improve this Doc View Source Search(Envelope) Searches the tree and looks for intersections with the boundingbox 'bbox' Declaration public Collection<uint> Search(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box Boundingbox to intersect with Returns Type Description Collection < UInt32 > Implements System.IDisposable ISpatialIndex<TOid>"
  },
  "api/SharpMap.Utilities.SpatialIndexing.QuadTreeFactory.html": {
    "href": "api/SharpMap.Utilities.SpatialIndexing.QuadTreeFactory.html",
    "title": "Class QuadTreeFactory | SharpMap",
    "keywords": "Class QuadTreeFactory A factory to create QuadTree spatial indices. Inheritance Object QuadTreeFactory Implements ISpatialIndexFactory < UInt32 > Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.SpatialIndexing Assembly : SharpMap.dll Syntax public class QuadTreeFactory : ISpatialIndexFactory<uint> Properties | Improve this Doc View Source Extension Gets a value indicating the extension of the index file Declaration public string Extension { get; } Property Value Type Description String | Improve this Doc View Source SpatialIndexCreationOption Gets or sets the default spatial index creation option Declaration public static ShapeFile.SpatialIndexCreation SpatialIndexCreationOption { get; set; } Property Value Type Description ShapeFile.SpatialIndexCreation Methods | Improve this Doc View Source Create(Envelope, Int32, IEnumerable<ISpatialIndexItem<UInt32>>) Method to create a spatial index Declaration public ISpatialIndex<uint> Create(Envelope extent, int expectedNumberOfEntries, IEnumerable<ISpatialIndexItem<uint>> entries) Parameters Type Name Description GeoAPI.Geometries.Envelope extent The extent covered by the spatial index Int32 expectedNumberOfEntries IEnumerable < ISpatialIndexItem < UInt32 >> entries The entries Returns Type Description ISpatialIndex < UInt32 > A spatial index | Improve this Doc View Source Create(UInt32, Envelope) Method to create a spatial index item Declaration public ISpatialIndexItem<uint> Create(uint oid, Envelope box) Parameters Type Name Description UInt32 oid The object's identifier GeoAPI.Geometries.Envelope box The extent Returns Type Description ISpatialIndexItem < UInt32 > A new spatial index item | Improve this Doc View Source Load(String) Method to create a spatial index by loading it from file Declaration public ISpatialIndex<uint> Load(string fileName) Parameters Type Name Description String fileName The filename of the spatial index Returns Type Description ISpatialIndex < UInt32 > The loaded index Implements ISpatialIndexFactory<TOid>"
  },
  "api/SharpMap.Utilities.Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef.html",
    "title": "Class Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef | SharpMap",
    "keywords": "Class Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef Object reference class for AdjustableArrowCap Inheritance Object Surrogates.AdjustableArrowCapSurrogate.AdjustableArrowCapRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class AdjustableArrowCapRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source AdjustableArrowCapRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public AdjustableArrowCapRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info StreamingContext context The streaming context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.AdjustableArrowCapSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.AdjustableArrowCapSurrogate.html",
    "title": "Class Surrogates.AdjustableArrowCapSurrogate | SharpMap",
    "keywords": "Class Surrogates.AdjustableArrowCapSurrogate Surrogate class used to serialize AdjustableArrowCap Inheritance Object Surrogates.AdjustableArrowCapSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class AdjustableArrowCapSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.BlendSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.BlendSurrogate.html",
    "title": "Class Surrogates.BlendSurrogate | SharpMap",
    "keywords": "Class Surrogates.BlendSurrogate Surrogate class for Blend Inheritance Object Surrogates.BlendSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class BlendSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.BrushSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.BrushSurrogate.html",
    "title": "Class Surrogates.BrushSurrogate | SharpMap",
    "keywords": "Class Surrogates.BrushSurrogate A serialization surrogate for Brush brushes. Inheritance Object Surrogates.BrushSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class BrushSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. ISurrogateSelector selector A surrogate selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.ColorBlendSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.ColorBlendSurrogate.html",
    "title": "Class Surrogates.ColorBlendSurrogate | SharpMap",
    "keywords": "Class Surrogates.ColorBlendSurrogate Surrogate class for ColorBlend Inheritance Object Surrogates.ColorBlendSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class ColorBlendSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.ColorMapSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.ColorMapSurrogate.html",
    "title": "Class Surrogates.ColorMapSurrogate | SharpMap",
    "keywords": "Class Surrogates.ColorMapSurrogate Surrogate class for ColorMap Inheritance Object Surrogates.ColorMapSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class ColorMapSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.ColorMatrixSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.ColorMatrixSurrogate.html",
    "title": "Class Surrogates.ColorMatrixSurrogate | SharpMap",
    "keywords": "Class Surrogates.ColorMatrixSurrogate Surrogate class for ColorMap Inheritance Object Surrogates.ColorMatrixSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class ColorMatrixSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.CustomLineCapSurrogate.CustomLineCapRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.CustomLineCapSurrogate.CustomLineCapRef.html",
    "title": "Class Surrogates.CustomLineCapSurrogate.CustomLineCapRef | SharpMap",
    "keywords": "Class Surrogates.CustomLineCapSurrogate.CustomLineCapRef Serialization utility class Inheritance Object Surrogates.CustomLineCapSurrogate.CustomLineCapRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class CustomLineCapRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source CustomLineCapRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public CustomLineCapRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.CustomLineCapSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.CustomLineCapSurrogate.html",
    "title": "Class Surrogates.CustomLineCapSurrogate | SharpMap",
    "keywords": "Class Surrogates.CustomLineCapSurrogate Surrogate class used to serialize CustomLineCap objects Inheritance Object Surrogates.CustomLineCapSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class CustomLineCapSurrogate : ISerializationSurrogate Remarks Unfortunately this does not work, since the Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.GraphicsPathSurrogate.GraphicsPathRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.GraphicsPathSurrogate.GraphicsPathRef.html",
    "title": "Class Surrogates.GraphicsPathSurrogate.GraphicsPathRef | SharpMap",
    "keywords": "Class Surrogates.GraphicsPathSurrogate.GraphicsPathRef Object reference class for GraphicsPath Inheritance Object Surrogates.GraphicsPathSurrogate.GraphicsPathRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class GraphicsPathRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source GraphicsPathRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public GraphicsPathRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The streaming information StreamingContext context The streaming context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.GraphicsPathSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.GraphicsPathSurrogate.html",
    "title": "Class Surrogates.GraphicsPathSurrogate | SharpMap",
    "keywords": "Class Surrogates.GraphicsPathSurrogate Serialization surrogate class for GraphicsPath Inheritance Object Surrogates.GraphicsPathSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class GraphicsPathSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj SerializationInfo info StreamingContext context ISurrogateSelector selector Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.HatchBrushSurrogate.HatchBrushRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.HatchBrushSurrogate.HatchBrushRef.html",
    "title": "Class Surrogates.HatchBrushSurrogate.HatchBrushRef | SharpMap",
    "keywords": "Class Surrogates.HatchBrushSurrogate.HatchBrushRef HatchBrush-Stub class for serialization Inheritance Object Surrogates.HatchBrushSurrogate.HatchBrushRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class HatchBrushRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source HatchBrushRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public HatchBrushRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.HatchBrushSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.HatchBrushSurrogate.html",
    "title": "Class Surrogates.HatchBrushSurrogate | SharpMap",
    "keywords": "Class Surrogates.HatchBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Inheritance Object Surrogates.HatchBrushSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class HatchBrushSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.html": {
    "href": "api/SharpMap.Utilities.Surrogates.html",
    "title": "Class Surrogates | SharpMap",
    "keywords": "Class Surrogates A class containing several serialization surrogate classes Inheritance Object Surrogates Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class Surrogates Methods | Improve this Doc View Source GetSurrogateSelectors() Gets the surrogate selecteds for System.Drawing.Pen and System.Drawing.Brush Declaration public static SurrogateSelector GetSurrogateSelectors() Returns Type Description SurrogateSelector SurrogateSelector"
  },
  "api/SharpMap.Utilities.Surrogates.LinearGradientBrushSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.LinearGradientBrushSurrogate.html",
    "title": "Class Surrogates.LinearGradientBrushSurrogate | SharpMap",
    "keywords": "Class Surrogates.LinearGradientBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Inheritance Object Surrogates.LinearGradientBrushSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class LinearGradientBrushSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef.html",
    "title": "Class Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef | SharpMap",
    "keywords": "Class Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef TextureBrush-Stub class for serialization Inheritance Object Surrogates.LinearGradientBrushSurrogate.LinearGradientBrushRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class LinearGradientBrushRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source LinearGradientBrushRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public LinearGradientBrushRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.MatrixSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.MatrixSurrogate.html",
    "title": "Class Surrogates.MatrixSurrogate | SharpMap",
    "keywords": "Class Surrogates.MatrixSurrogate Surrogate class used for serializing System.Drawing.Drawing2D.Matrix Inheritance Object Surrogates.MatrixSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class MatrixSurrogate : ISerializationSurrogate Methods | Improve this Doc View Source GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration public void GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.MatrixSurrogate.MatrixRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.MatrixSurrogate.MatrixRef.html",
    "title": "Class Surrogates.MatrixSurrogate.MatrixRef | SharpMap",
    "keywords": "Class Surrogates.MatrixSurrogate.MatrixRef Matrix-Stub class Inheritance Object Surrogates.MatrixSurrogate.MatrixRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class MatrixRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source MatrixRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public MatrixRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The streaming information StreamingContext context The streaming context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.PenSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.PenSurrogate.html",
    "title": "Class Surrogates.PenSurrogate | SharpMap",
    "keywords": "Class Surrogates.PenSurrogate Surrogate class used for serializing System.Drawing.Pen Inheritance Object Surrogates.PenSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class PenSurrogate : ISerializationSurrogate Methods | Improve this Doc View Source GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration public void GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.PenSurrogate.PenRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.PenSurrogate.PenRef.html",
    "title": "Class Surrogates.PenSurrogate.PenRef | SharpMap",
    "keywords": "Class Surrogates.PenSurrogate.PenRef Serialization utility class Inheritance Object Surrogates.PenSurrogate.PenRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class PenRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source PenRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public PenRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The serialization info StreamingContext context The streaming context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Surrogates.SolidBrushSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.SolidBrushSurrogate.html",
    "title": "Class Surrogates.SolidBrushSurrogate | SharpMap",
    "keywords": "Class Surrogates.SolidBrushSurrogate Surrogate class used for serializing System.Drawing.SolidBrush Inheritance Object Surrogates.SolidBrushSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class SolidBrushSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.TextureBrushSurrogate.html": {
    "href": "api/SharpMap.Utilities.Surrogates.TextureBrushSurrogate.html",
    "title": "Class Surrogates.TextureBrushSurrogate | SharpMap",
    "keywords": "Class Surrogates.TextureBrushSurrogate Surrogate class used for serializing System.Drawing.TextureBrush Inheritance Object Surrogates.TextureBrushSurrogate Implements ISerializationSurrogate Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class TextureBrushSurrogate : ISerializationSurrogate Explicit Interface Implementations | Improve this Doc View Source ISerializationSurrogate.GetObjectData(Object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. Declaration void ISerializationSurrogate.GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters Type Name Description Object obj The object to serialize. SerializationInfo info The SerializationInfo to populate with data. StreamingContext context The destination for this serialization. | Improve this Doc View Source ISerializationSurrogate.SetObjectData(Object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo Declaration object ISerializationSurrogate.SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters Type Name Description Object obj The object to populate. SerializationInfo info The information to populate the object. StreamingContext context The source from which the object is deserialized. ISurrogateSelector selector The surrogate selector where the search for a compatible surrogate begins. Returns Type Description Object Implements System.Runtime.Serialization.ISerializationSurrogate"
  },
  "api/SharpMap.Utilities.Surrogates.TextureBrushSurrogate.TextureBrushRef.html": {
    "href": "api/SharpMap.Utilities.Surrogates.TextureBrushSurrogate.TextureBrushRef.html",
    "title": "Class Surrogates.TextureBrushSurrogate.TextureBrushRef | SharpMap",
    "keywords": "Class Surrogates.TextureBrushSurrogate.TextureBrushRef TextureBrush-Stub class for serialization Inheritance Object Surrogates.TextureBrushSurrogate.TextureBrushRef Implements IObjectReference ISerializable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax [Serializable] public class TextureBrushRef : IObjectReference, ISerializable Constructors | Improve this Doc View Source TextureBrushRef(SerializationInfo, StreamingContext) Serialization constructor Declaration public TextureBrushRef(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Explicit Interface Implementations | Improve this Doc View Source IObjectReference.GetRealObject(StreamingContext) Declaration object IObjectReference.GetRealObject(StreamingContext context) Parameters Type Name Description StreamingContext context Returns Type Description Object | Improve this Doc View Source ISerializable.GetObjectData(SerializationInfo, StreamingContext) Declaration void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Implements System.Runtime.Serialization.IObjectReference System.Runtime.Serialization.ISerializable"
  },
  "api/SharpMap.Utilities.Transform.html": {
    "href": "api/SharpMap.Utilities.Transform.html",
    "title": "Class Transform | SharpMap",
    "keywords": "Class Transform Class for transforming between world and image coordinate Inheritance Object Transform Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class Transform Methods | Improve this Doc View Source MapToWorld(PointF, Map) Transforms from image coordinates to world coordinate system (WCS). NOTE: This method is only applicable when MapTransformRotation = 0. Declaration [Obsolete(\"Use MapToWorld(PointF[], Map)\")] public static Coordinate MapToWorld(PointF p, Map map) Parameters Type Name Description PointF p Point in image coordinate system Map map Map reference Returns Type Description GeoAPI.Geometries.Coordinate Point in WCS | Improve this Doc View Source MapToWorld(PointF, MapViewport) Transforms from image coordinates to world coordinate system (WCS). NOTE: This method is only applicable when MapTransformRotation = 0. Declaration [Obsolete(\"Use MapToWorld(PointF[], MapViewport)\")] public static Coordinate MapToWorld(PointF p, MapViewport map) Parameters Type Name Description PointF p Point in image coordinate system MapViewport map Map reference Returns Type Description GeoAPI.Geometries.Coordinate Point in WCS | Improve this Doc View Source MapToWorld(PointF[], Map) Am abbreviated transform from image coordinates to world coordinate system (WCS) for use ONLY when MapTransformRotation == 0 Declaration public static Coordinate[] MapToWorld(PointF[] points, Map map) Parameters Type Name Description PointF [] points Point array in image coordinates Map map Map defining current view properties Returns Type Description GeoAPI.Geometries.Coordinate [] | Improve this Doc View Source WorldToMap(Coordinate, Map) Transforms from world coordinate system (WCS) to image coordinates NOTE: This method is only applicable when MapTransformRotation = 0. Declaration [Obsolete(\"Use WorldToMap(Coordinate[], Map)\")] public static PointF WorldToMap(Coordinate p, Map map) Parameters Type Name Description GeoAPI.Geometries.Coordinate p Point in WCS Map map Map reference Returns Type Description PointF Point in image coordinates | Improve this Doc View Source WorldToMap(Coordinate[], AffineTransformation) Full affine transformation from world coordinate system (WCS) to image coordinates taking into account Zoom, Pixel Width/Height, and MapTransformRotation. Declaration public static PointF[] WorldToMap(Coordinate[] coordinates, AffineTransformation matrix) Parameters Type Name Description GeoAPI.Geometries.Coordinate [] coordinates Coordinate array in WCS NetTopologySuite.Geometries.Utilities.AffineTransformation matrix Appropriate affine transformation as defined by WorldToMapMatrix(Coordinate, Double, Double, Single, Size, Boolean) Returns Type Description PointF [] Point array in image coordinates | Improve this Doc View Source WorldToMapMatrix(Coordinate, Double, Double, Single, Size, Boolean) Affine transformation defining complete transformation from world coordinate system (WCS) to image coordinates taking into account Zoom, Pixel Width/Height, and MapTransformRotation. Additionally, if careAboutTransform = false, the viewport rotation will be reverted at the end of the transformation, to be re-applied by Graphics object when rendering. Declaration public static AffineTransformation WorldToMapMatrix(Coordinate worldCenter, double pixelWidth, double pixelHeight, float mapTransformRotation, Size imageSize, bool careAboutTransform) Parameters Type Name Description GeoAPI.Geometries.Coordinate worldCenter Map center in WCS Double pixelWidth Width of pixel in world units Double pixelHeight Height of pixel in world units Single mapTransformRotation map rotation in degrees Size imageSize Map Size when rendered Boolean careAboutTransform True for coordinate calculations, False if Graphics object will apply MapTransform Returns Type Description NetTopologySuite.Geometries.Utilities.AffineTransformation Affine Transformation"
  },
  "api/SharpMap.Utilities.Version.html": {
    "href": "api/SharpMap.Utilities.Version.html",
    "title": "Class Version | SharpMap",
    "keywords": "Class Version Version information helper class Inheritance Object Version Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities Assembly : SharpMap.dll Syntax public class Version Methods | Improve this Doc View Source GetCurrentVersion() Returns the current build version of SharpMap Declaration public static Version GetCurrentVersion() Returns Type Description Version"
  },
  "api/SharpMap.Utilities.Wfs.FeatureIdFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.FeatureIdFilter_FE1_1_0.html",
    "title": "Class FeatureIdFilter_FE1_1_0 | SharpMap",
    "keywords": "Class FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. Inheritance Object OGCFilterBase FeatureIdFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class FeatureIdFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source FeatureIdFilter_FE1_1_0(String) Initializes a new instance of the FeatureIdFilter_FE1_1_0 class. Declaration public FeatureIdFilter_FE1_1_0(string id) Parameters Type Name Description String id Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.GeometryTypeEnum.html": {
    "href": "api/SharpMap.Utilities.Wfs.GeometryTypeEnum.html",
    "title": "Enum GeometryTypeEnum | SharpMap",
    "keywords": "Enum GeometryTypeEnum Web Feature Service geometry types Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public enum GeometryTypeEnum Fields Name Description CurvePropertyType Curve LineStringPropertyType Linestring MultiCurvePropertyType Multicurve MultiLineStringPropertyType MultiLinestring MultiPointPropertyType Multipoint MultiPolygonPropertyType MultiPolygon MultiSurfacePropertyType MultiSurface PointPropertyType Point PolygonPropertyType Polygon SurfacePropertyType Surface Unknown Unknown"
  },
  "api/SharpMap.Utilities.Wfs.html": {
    "href": "api/SharpMap.Utilities.Wfs.html",
    "title": "Namespace SharpMap.Utilities.Wfs | SharpMap",
    "keywords": "Namespace SharpMap.Utilities.Wfs Classes FeatureIdFilter_FE1_1_0 This class provides an interface for creating an OGC FeatureIdFilter Version 1.1.0. HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. OGCFilterBase This class is the base class of all filters. It stores the filter arguments. OGCFilterCollection This class hosts a collection of instances implementing IFilter . PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. PropertyIsNullFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNullFilter Version 1.1.0. WFS_1_0_0_TextResources Text resources class for WebFeatureService v1.0.0 WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). WFS_1_1_0_TextResources Text resources class for WebFeatureService v1.0.0 WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. WFS_XPathTextResourcesBase Base class for IWFS_TextResources implementations WfsFeatureTypeInfo Web Feature Type info class WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. XPathQueryManager_CompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. XPathQueryManager_Decorator This class should be the base class of all decorators for classes implementing IXPathQueryManager . Interfaces IFilter Filter interface IWFS_TextResources Text resources interface IXPathQueryManager XPathQueryManager interface Enums GeometryTypeEnum Web Feature Service geometry types OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators."
  },
  "api/SharpMap.Utilities.Wfs.HttpClientUtil.html": {
    "href": "api/SharpMap.Utilities.Wfs.HttpClientUtil.html",
    "title": "Class HttpClientUtil | SharpMap",
    "keywords": "Class HttpClientUtil This class provides an easy to use interface for HTTP-GET and HTTP-POST requests. Inheritance Object HttpClientUtil Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class HttpClientUtil Constructors | Improve this Doc View Source HttpClientUtil() Initializes a new instance of the HttpClientUtil class. Declaration public HttpClientUtil() Properties | Improve this Doc View Source Credentials Gets or sets the network credentials used for authenticating the request with the Internet resource Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source PostData Sets the data of a HTTP POST request as byte array. Declaration public byte[] PostData { set; } Property Value Type Description Byte [] | Improve this Doc View Source ProxyUrl Gets and sets the proxy Url of the request. Declaration public string ProxyUrl { get; set; } Property Value Type Description String | Improve this Doc View Source Url Gets ans sets the Url of the request. Declaration public string Url { get; set; } Property Value Type Description String Methods | Improve this Doc View Source AddHeader(String, String) Adds a HTTP header. Declaration public void AddHeader(string name, string value) Parameters Type Name Description String name The name of the header String value The value of the header | Improve this Doc View Source Close() This method closes the WebResponse object. Declaration public void Close() | Improve this Doc View Source GetDataStream() Performs a HTTP-GET or HTTP-POST request and returns a datastream for reading. Declaration public Stream GetDataStream() Returns Type Description Stream | Improve this Doc View Source Reset() This method resets all configurations. Declaration public void Reset()"
  },
  "api/SharpMap.Utilities.Wfs.IFilter.html": {
    "href": "api/SharpMap.Utilities.Wfs.IFilter.html",
    "title": "Interface IFilter | SharpMap",
    "keywords": "Interface IFilter Filter interface Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public interface IFilter Methods | Improve this Doc View Source Encode() Method to encode the filter in XML. Declaration string Encode() Returns Type Description String An XML string"
  },
  "api/SharpMap.Utilities.Wfs.IWFS_TextResources.html": {
    "href": "api/SharpMap.Utilities.Wfs.IWFS_TextResources.html",
    "title": "Interface IWFS_TextResources | SharpMap",
    "keywords": "Interface IWFS_TextResources Text resources interface Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public interface IWFS_TextResources Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Gets a value indicating the feature type prefix Declaration string NSFEATURETYPEPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSGML Gets a value indicating the GML namespace URI Declaration string NSGML { get; } Property Value Type Description String | Improve this Doc View Source NSGMLPREFIX Gets a value indicating the prefix of the GML namespace Declaration string NSGMLPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOGC Gets a value indicating the the OGC namespace URI Declaration string NSOGC { get; } Property Value Type Description String | Improve this Doc View Source NSOGCPREFIX Gets a value indicating the prefix of the OGC namespace Declaration string NSOGCPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOWS Gets a value indicating the OWS namespace URI Declaration string NSOWS { get; } Property Value Type Description String | Improve this Doc View Source NSOWSPREFIX Gets a value indicating the prefix of the OWS namespace Declaration string NSOWSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMA Gets a value indicating the XML namespace URI Declaration string NSSCHEMA { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMAPREFIX Gets a value indicating the prefix of the XML namespace Declaration string NSSCHEMAPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSWFS Gets a value indicating the WFS namespace URI Declaration string NSWFS { get; } Property Value Type Description String | Improve this Doc View Source NSWFSPREFIX Gets a value indicating the prefix of the WFS namespace Declaration string NSWFSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSXLINK Gets a value indicating the XLink namespace URI Declaration string NSXLINK { get; } Property Value Type Description String | Improve this Doc View Source NSXLINKPREFIX Gets a value indicating the prefix of the XLink namespace Declaration string NSXLINKPREFIX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Gets an XPath string addressing the name of an element having a type-attribute referencing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2: Finding the name of the featuretype's element with a named complex type hosting the GML geometry. Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Gets an XPath string addressing the name of an element described by an anonymous complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2Alt: Finding the name of the featuretype's element with an anonymous complex type hosting the GML geometry. Declaration string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Gets an XPath string addressing the 'gml'-prefixed ref-attribute of an element. This is for querying the name of the GML geometry element. Declaration string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Gets an XPath string addressing an element with a 'gml'-prefixed type-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype in the most simple manner. Declaration string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Gets an XPath string addressing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype. Step1: Finding the complex type with a geometry element from GML specification. Declaration string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Gets an XPath string addressing a name-attribute. Declaration string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration string XPATH_SRS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TARGETNS Gets an XPath string addressing the target namespace in 'DescribeFeatureType'. Declaration string XPATH_TARGETNS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Gets an XPath string addressing a type-attribute. Declaration string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description String Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) Method to return the query string for a 'DescribeFeatureType' request. Declaration string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName The name of the featuretype to query Returns Type Description String An URI string for a 'DescribeFeatureType' request | Improve this Doc View Source GetCapabilitiesRequest() Method to return the query string for a 'GetCapabilities' request. Declaration string GetCapabilitiesRequest() Returns Type Description String An URI string for a 'GetCapabilities' request | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Envelope, IFilter, Boolean) Method to return the query string for a 'GetFeature' - GET request. Declaration string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element Returns Type Description String An URI for a 'GetFeature' - GET request. | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, Envelope, IFilter, Boolean) Method to return the query string for a 'GetFeature - POST request'. Declaration byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query String labelProperty A property necessary for label rendering GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element and eventually label Returns Type Description Byte [] An URI for a 'GetFeature' - POST request."
  },
  "api/SharpMap.Utilities.Wfs.IXPathQueryManager.html": {
    "href": "api/SharpMap.Utilities.Wfs.IXPathQueryManager.html",
    "title": "Interface IXPathQueryManager | SharpMap",
    "keywords": "Interface IXPathQueryManager XPathQueryManager interface Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public interface IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) Method to add/register an xml-namespace Declaration void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix The prefix used to identify the namespace String ns The full namespace qualifier | Improve this Doc View Source Clone() Function to create a deep-copy clone of this IXPathQueryManager Declaration IXPathQueryManager Clone() Returns Type Description IXPathQueryManager An IXPathQueryManager instance resembling this one. | Improve this Doc View Source Compile(String) Method to compile a xPath to a XPathExpression Declaration XPathExpression Compile(string xPath) Parameters Type Name Description String xPath The xpath to compile Returns Type Description XPathExpression The compiled XPathExpression | Improve this Doc View Source GetContextOfNextNode() This method moves the current instance of XPathQueryManager to the context of the next node a previously handed over XPath expression addresses. Declaration bool GetContextOfNextNode() Returns Type Description Boolean | Improve this Doc View Source GetContextOfNode(UInt32) This method moves the current instance of XPathQueryManager to the context of node[index] of current position. Declaration bool GetContextOfNode(uint index) Parameters Type Name Description UInt32 index The index of the node to search Returns Type Description Boolean | Improve this Doc View Source GetIterator(XPathExpression) Function to get an iterator over xPath Declaration XPathNodeIterator GetIterator(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The xPath expression to iterate Returns Type Description XPathNodeIterator An XPathNodeIterator iterator over xPath | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) Function to get an iterator over xPath , narrowed by queryParameters Declaration XPathNodeIterator GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The xPath expression to iterate DictionaryEntry [] queryParameters The parameters to narrow the xPath Returns Type Description XPathNodeIterator An XPathNodeIterator iterator over xPath | Improve this Doc View Source GetValueFromNode(XPathExpression) Function to get a value from xPath Declaration string GetValueFromNode(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The XPathExpression to get the value from Returns Type Description String A string value | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) Function to get a value from xPath Declaration string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The XPathExpression to get the value from DictionaryEntry [] queryParameters The parameters for narrowing the xPath Returns Type Description String A string value | Improve this Doc View Source GetValuesFromNodes(XPathExpression) Function to get a list of value from xPath Declaration List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The XPathExpression to get the values from Returns Type Description List < String > A list of string value | Improve this Doc View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) Function to get a list of value from xPath Declaration List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The XPathExpression to get the values from DictionaryEntry [] queryParameters The parameters for narrowing the xPath Returns Type Description List < String > A list of string value | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression) Function to return an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description IXPathQueryManager A IXPathQueryManager | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) Function to return an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager A IXPathQueryManager | Improve this Doc View Source ResetNamespaces() Method to reset/delete the current namespace context Declaration void ResetNamespaces() | Improve this Doc View Source ResetNavigator() Method to reset the inherent XPathNavigator . Declaration void ResetNavigator() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Method to set the document to sth defined by HttpClientUtil Declaration void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil The name of the file to parse | Improve this Doc View Source SetDocumentToParse(Byte[]) Method to set the document to parse to document Declaration void SetDocumentToParse(byte[] document) Parameters Type Name Description Byte [] document The document stream | Improve this Doc View Source SetDocumentToParse(Stream) Method to set the document to parse to documentStream Declaration void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream The document stream | Improve this Doc View Source SetDocumentToParse(String) Method to set the document to parse to a file named documentFilename Declaration void SetDocumentToParse(string documentFilename) Parameters Type Name Description String documentFilename The name of the file to parse"
  },
  "api/SharpMap.Utilities.Wfs.OGCFilterBase.html": {
    "href": "api/SharpMap.Utilities.Wfs.OGCFilterBase.html",
    "title": "Class OGCFilterBase | SharpMap",
    "keywords": "Class OGCFilterBase This class is the base class of all filters. It stores the filter arguments. Inheritance Object OGCFilterBase FeatureIdFilter_FE1_1_0 PropertyIsBetweenFilter_FE1_1_0 PropertyIsEqualToFilter_FE1_1_0 PropertyIsGreaterThanFilter_FE1_1_0 PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 PropertyIsLessThanFilter_FE1_1_0 PropertyIsLessThanOrEqualToFilter_FE1_1_0 PropertyIsLikeFilter_FE1_1_0 PropertyIsNotEqualToFilter_FE1_1_0 PropertyIsNullFilter_FE1_1_0 Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public abstract class OGCFilterBase Constructors | Improve this Doc View Source OGCFilterBase(String[]) Protected constructor for the abstract class. Declaration protected OGCFilterBase(string[] args) Parameters Type Name Description String [] args An array of arguments for the filter Fields | Improve this Doc View Source Args The arguments for the filter Declaration protected string[] Args Field Value Type Description String []"
  },
  "api/SharpMap.Utilities.Wfs.OGCFilterCollection.html": {
    "href": "api/SharpMap.Utilities.Wfs.OGCFilterCollection.html",
    "title": "Class OGCFilterCollection | SharpMap",
    "keywords": "Class OGCFilterCollection This class hosts a collection of instances implementing IFilter . Inheritance Object OGCFilterCollection Implements IFilter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class OGCFilterCollection : IFilter Constructors | Improve this Doc View Source OGCFilterCollection() Initializes a new instance of the OGCFilterCollection class. Declaration public OGCFilterCollection() Properties | Improve this Doc View Source Filters Gets and sets a collection of instances implementing IFilter . Declaration public List<IFilter> Filters { get; set; } Property Value Type Description List < IFilter > | Improve this Doc View Source Junctor Gets and sets the operator for combining the filters. Declaration public OGCFilterCollection.JunctorEnum Junctor { get; set; } Property Value Type Description OGCFilterCollection.JunctorEnum Methods | Improve this Doc View Source AddFilter(IFilter) This method adds an instance implementing IFilter . Declaration public void AddFilter(IFilter filter) Parameters Type Name Description IFilter filter | Improve this Doc View Source AddFilterCollection(OGCFilterCollection) This method adds an instance of OGCFilterCollection . Declaration public void AddFilterCollection(OGCFilterCollection filterCollection) Parameters Type Name Description OGCFilterCollection filterCollection | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.OGCFilterCollection.JunctorEnum.html": {
    "href": "api/SharpMap.Utilities.Wfs.OGCFilterCollection.JunctorEnum.html",
    "title": "Enum OGCFilterCollection.JunctorEnum | SharpMap",
    "keywords": "Enum OGCFilterCollection.JunctorEnum This enumeration consists of expressions denoting FE logical operators. Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public enum JunctorEnum Fields Name Description And And junctor Or Or junctor"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsBetweenFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsBetweenFilter_FE1_1_0.html",
    "title": "Class PropertyIsBetweenFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsBetweenFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsBetweenFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsBetweenFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsBetweenFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsBetweenFilter_FE1_1_0(String, String, String) Initializes a new instance of the PropertyIsBetweenFilter_FE1_1_0 class. Declaration public PropertyIsBetweenFilter_FE1_1_0(string propertyName, string lowerBoundary, string upperBoundary) Parameters Type Name Description String propertyName String lowerBoundary String upperBoundary Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsEqualToFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsEqualToFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsEqualToFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsEqualToFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsEqualToFilter_FE1_1_0 class. Declaration public PropertyIsEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsGreaterThanFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsGreaterThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsGreaterThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsGreaterThanFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsGreaterThanFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsGreaterThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsGreaterThanOrEqualToFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsGreaterThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsGreaterThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsLessThanFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsLessThanFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsLessThanFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsLessThanFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsLessThanFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanFilter_FE1_1_0 class. Declaration public PropertyIsLessThanFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsLessThanOrEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsLessThanOrEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLessThanOrEqualToFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsLessThanOrEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsLessThanOrEqualToFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLessThanOrEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLessThanOrEqualToFilter_FE1_1_0 class. Declaration public PropertyIsLessThanOrEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsLikeFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsLikeFilter_FE1_1_0.html",
    "title": "Class PropertyIsLikeFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsLikeFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsLikeFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsLikeFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsLikeFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsLikeFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsLikeFilter_FE1_1_0 class. Declaration public PropertyIsLikeFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsNotEqualToFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsNotEqualToFilter_FE1_1_0.html",
    "title": "Class PropertyIsNotEqualToFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsNotEqualToFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNotEqualToFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsNotEqualToFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsNotEqualToFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsNotEqualToFilter_FE1_1_0(String, String) Initializes a new instance of the PropertyIsNotEqualToFilter_FE1_1_0 class. Declaration public PropertyIsNotEqualToFilter_FE1_1_0(string propertyName, string arg) Parameters Type Name Description String propertyName String arg Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.PropertyIsNullFilter_FE1_1_0.html": {
    "href": "api/SharpMap.Utilities.Wfs.PropertyIsNullFilter_FE1_1_0.html",
    "title": "Class PropertyIsNullFilter_FE1_1_0 | SharpMap",
    "keywords": "Class PropertyIsNullFilter_FE1_1_0 This class provides an interface for creating an OGC PropertyIsNullFilter Version 1.1.0. Inheritance Object OGCFilterBase PropertyIsNullFilter_FE1_1_0 Implements IFilter Inherited Members OGCFilterBase.Args Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class PropertyIsNullFilter_FE1_1_0 : OGCFilterBase, IFilter Constructors | Improve this Doc View Source PropertyIsNullFilter_FE1_1_0(String) Initializes a new instance of the PropertyIsNullFilter_FE1_1_0 class. Declaration public PropertyIsNullFilter_FE1_1_0(string id) Parameters Type Name Description String id Methods | Improve this Doc View Source Encode() This method encodes the filter in XML. Declaration public string Encode() Returns Type Description String An XML string Implements IFilter"
  },
  "api/SharpMap.Utilities.Wfs.WFS_1_0_0_TextResources.html": {
    "href": "api/SharpMap.Utilities.Wfs.WFS_1_0_0_TextResources.html",
    "title": "Class WFS_1_0_0_TextResources | SharpMap",
    "keywords": "Class WFS_1_0_0_TextResources Text resources class for WebFeatureService v1.0.0 Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_0_0_XPathTextResources.XPATH_SRS WFS_1_0_0_XPathTextResources.XPATH_BBOX WFS_1_0_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_0_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_0_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WFS_1_0_0_TextResources : WFS_1_0_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName The name of the featuretype to query Returns Type Description String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Envelope, IFilter, Boolean) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element Returns Type Description String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, Envelope, IFilter, Boolean) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query String labelProperty A property necessary for label rendering GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element Returns Type Description Byte [] Implements IWFS_TextResources"
  },
  "api/SharpMap.Utilities.Wfs.WFS_1_0_0_XPathTextResources.html": {
    "href": "api/SharpMap.Utilities.Wfs.WFS_1_0_0_XPathTextResources.html",
    "title": "Class WFS_1_0_0_XPathTextResources | SharpMap",
    "keywords": "Class WFS_1_0_0_XPathTextResources This class provides text resources specific for WFS 1.0.0 XML schema (for precompiling). Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_0_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WFS_1_0_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the 'maxx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the 'maxy'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the 'minx'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the 'miny'-attribute of a featuretype's bounding box in 'GetCapabilities'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.WFS_1_1_0_TextResources.html": {
    "href": "api/SharpMap.Utilities.Wfs.WFS_1_1_0_TextResources.html",
    "title": "Class WFS_1_1_0_TextResources | SharpMap",
    "keywords": "Class WFS_1_1_0_TextResources Text resources class for WebFeatureService v1.0.0 Inheritance Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Implements IWFS_TextResources Inherited Members WFS_1_1_0_XPathTextResources.XPATH_SRS WFS_1_1_0_XPathTextResources.XPATH_BBOX WFS_1_1_0_XPathTextResources.XPATH_GETFEATURERESOURCE WFS_1_1_0_XPathTextResources.XPATH_DESCRIBEFEATURETYPERESOURCE WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMINY WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXX WFS_1_1_0_XPathTextResources.XPATH_BOUNDINGBOXMAXY WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WFS_1_1_0_TextResources : WFS_1_1_0_XPathTextResources, IWFS_TextResources Methods | Improve this Doc View Source DescribeFeatureTypeRequest(String) This method returns the query string for 'DescribeFeatureType'. Declaration public string DescribeFeatureTypeRequest(string featureTypeName) Parameters Type Name Description String featureTypeName The name of the featuretype to query Returns Type Description String | Improve this Doc View Source GetCapabilitiesRequest() This method returns the query string for 'GetCapabilities'. Declaration public string GetCapabilitiesRequest() Returns Type Description String | Improve this Doc View Source GetFeatureGETRequest(WfsFeatureTypeInfo, Envelope, IFilter, Boolean) This method returns the query string for 'GetFeature'. Declaration public string GetFeatureGETRequest(WfsFeatureTypeInfo featureTypeInfo, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element Returns Type Description String | Improve this Doc View Source GetFeaturePOSTRequest(WfsFeatureTypeInfo, String, Envelope, IFilter, Boolean) This method returns the POST request for 'GetFeature'. Declaration public byte[] GetFeaturePOSTRequest(WfsFeatureTypeInfo featureTypeInfo, string labelProperty, Envelope boundingBox, IFilter filter, bool loadAllElements) Parameters Type Name Description WfsFeatureTypeInfo featureTypeInfo A WfsFeatureTypeInfo instance providing metadata of the featuretype to query String labelProperty A property necessary for label rendering GeoAPI.Geometries.Envelope boundingBox The bounding box of the query IFilter filter An instance implementing IFilter Boolean loadAllElements True to get all feature elements, false to get only geometry element Returns Type Description Byte [] Implements IWFS_TextResources"
  },
  "api/SharpMap.Utilities.Wfs.WFS_1_1_0_XPathTextResources.html": {
    "href": "api/SharpMap.Utilities.Wfs.WFS_1_1_0_XPathTextResources.html",
    "title": "Class WFS_1_1_0_XPathTextResources | SharpMap",
    "keywords": "Class WFS_1_1_0_XPathTextResources This class provides text resources specific for WFS 1.1.0. Inheritance Object WFS_XPathTextResourcesBase WFS_1_1_0_XPathTextResources WFS_1_1_0_TextResources Inherited Members WFS_XPathTextResourcesBase.NSOGCPREFIX WFS_XPathTextResourcesBase.NSOGC WFS_XPathTextResourcesBase.NSXLINKPREFIX WFS_XPathTextResourcesBase.NSXLINK WFS_XPathTextResourcesBase.NSFEATURETYPEPREFIX WFS_XPathTextResourcesBase.NSWFSPREFIX WFS_XPathTextResourcesBase.NSWFS WFS_XPathTextResourcesBase.NSGMLPREFIX WFS_XPathTextResourcesBase.NSGML WFS_XPathTextResourcesBase.NSOWSPREFIX WFS_XPathTextResourcesBase.NSOWS WFS_XPathTextResourcesBase.NSSCHEMAPREFIX WFS_XPathTextResourcesBase.NSSCHEMA WFS_XPathTextResourcesBase.XPATH_TARGETNS WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_NAMEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_TYPEATTRIBUTEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE WFS_XPathTextResourcesBase.XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WFS_1_1_0_XPathTextResources : WFS_XPathTextResourcesBase Properties | Improve this Doc View Source XPATH_BBOX Gets an XPath string addressing the bounding box of a featuretype in 'GetCapabilities'. Declaration public string XPATH_BBOX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXX Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxx'. Declaration public string XPATH_BOUNDINGBOXMAXX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMAXY Gets an XPath string addressing the upper corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'maxy'. Declaration public string XPATH_BOUNDINGBOXMAXY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINX Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'minx'. Declaration public string XPATH_BOUNDINGBOXMINX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_BOUNDINGBOXMINY Gets an XPath string addressing the lower corner of a featuretype's bounding box in 'GetCapabilities' for extracting 'miny'. Declaration public string XPATH_BOUNDINGBOXMINY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_DESCRIBEFEATURETYPERESOURCE Gets an XPath string addressing the URI of 'DescribeFeatureType'in 'GetCapabilities'. Declaration public string XPATH_DESCRIBEFEATURETYPERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GETFEATURERESOURCE Gets an XPath string addressing the URI of 'GetFeature'in 'GetCapabilities'. Declaration public string XPATH_GETFEATURERESOURCE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_SRS Gets an XPath string addressing the SRID of a featuretype in 'GetCapabilities'. Declaration public string XPATH_SRS { get; } Property Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.WFS_XPathTextResourcesBase.html": {
    "href": "api/SharpMap.Utilities.Wfs.WFS_XPathTextResourcesBase.html",
    "title": "Class WFS_XPathTextResourcesBase | SharpMap",
    "keywords": "Class WFS_XPathTextResourcesBase Base class for IWFS_TextResources implementations Inheritance Object WFS_XPathTextResourcesBase WFS_1_0_0_XPathTextResources WFS_1_1_0_XPathTextResources Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WFS_XPathTextResourcesBase Properties | Improve this Doc View Source NSFEATURETYPEPREFIX Prefix used for feature namespace Declaration public string NSFEATURETYPEPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSGML GML namespace URI Declaration public string NSGML { get; } Property Value Type Description String | Improve this Doc View Source NSGMLPREFIX Prefix used for GML namespace Declaration public string NSGMLPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOGC OGC namespace URI Declaration public string NSOGC { get; } Property Value Type Description String | Improve this Doc View Source NSOGCPREFIX Prefix used for OGC namespace Declaration public string NSOGCPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSOWS OWS namespace URI Declaration public string NSOWS { get; } Property Value Type Description String | Improve this Doc View Source NSOWSPREFIX Prefix used for OWS namespace Declaration public string NSOWSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMA XML schema namespace URI Declaration public string NSSCHEMA { get; } Property Value Type Description String | Improve this Doc View Source NSSCHEMAPREFIX Prefix used for XML schema namespace Declaration public string NSSCHEMAPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSWFS WFS namespace URI Declaration public string NSWFS { get; } Property Value Type Description String | Improve this Doc View Source NSWFSPREFIX Prefix used for WFS namespace Declaration public string NSWFSPREFIX { get; } Property Value Type Description String | Improve this Doc View Source NSXLINK XLink namespace URI Declaration public string NSXLINK { get; } Property Value Type Description String | Improve this Doc View Source NSXLINKPREFIX Prefix used for XLink namespace Declaration public string NSXLINKPREFIX { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY Gets an XPath string addressing the name of an element having a type-attribute referencing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2: Finding the name of the featuretype's element with a named complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE Gets an XPath string addressing the name of an element described by an anonymous complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. Step2Alt: Finding the name of the featuretype's element with an anonymous complex type hosting the GML geometry. Declaration public string XPATH_GEOMETRY_ELEMREF_GEOMNAMEQUERY_ANONYMOUSTYPE { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY Gets an XPath string addressing the 'gml'-prefixed ref-attribute of an element. This is for querying the name of the GML geometry element. Declaration public string XPATH_GEOMETRY_ELEMREF_GMLELEMENTQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY Gets an XPath string addressing an element with a 'gml'-prefixed type-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype in the most simple manner. Declaration public string XPATH_GEOMETRYELEMENT_BYTYPEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY Gets an XPath string addressing a complex type hosting an element with a 'gml'-prefixed ref-attribute in 'DescribeFeatureType'. This for querying the geometry element of a featuretype. Step1: Finding the complex type with a geometry element from GML specification. Declaration public string XPATH_GEOMETRYELEMENTCOMPLEXTYPE_BYELEMREFQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_NAMEATTRIBUTEQUERY Gets an XPath string addressing a name-attribute. Declaration public string XPATH_NAMEATTRIBUTEQUERY { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TARGETNS Gets an XPath string addressing the target namespace in 'DescribeFeatureType'. Declaration public string XPATH_TARGETNS { get; } Property Value Type Description String | Improve this Doc View Source XPATH_TYPEATTRIBUTEQUERY Gets an XPath string addressing a type-attribute. Declaration public string XPATH_TYPEATTRIBUTEQUERY { get; } Property Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.BoundingBox.html": {
    "href": "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.BoundingBox.html",
    "title": "Class WfsFeatureTypeInfo.BoundingBox | SharpMap",
    "keywords": "Class WfsFeatureTypeInfo.BoundingBox The bounding box defines the spatial extent of a featuretype. Inheritance Object WfsFeatureTypeInfo.BoundingBox Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class BoundingBox Fields | Improve this Doc View Source _MaxLat Maximum latitude Declaration public double _MaxLat Field Value Type Description Double | Improve this Doc View Source _MaxLong Maximum longitude Declaration public double _MaxLong Field Value Type Description Double | Improve this Doc View Source _MinLat Minimum latitude Declaration public double _MinLat Field Value Type Description Double | Improve this Doc View Source _MinLong Minimum longitude Declaration public double _MinLong Field Value Type Description Double"
  },
  "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.ElementInfo.html": {
    "href": "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.ElementInfo.html",
    "title": "Class WfsFeatureTypeInfo.ElementInfo | SharpMap",
    "keywords": "Class WfsFeatureTypeInfo.ElementInfo The element info associated to the feature. Inheritance Object WfsFeatureTypeInfo.ElementInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax [Serializable] public class ElementInfo Constructors | Improve this Doc View Source ElementInfo(String, String) Creates an instance of this class Declaration public ElementInfo(string name, string dataType) Parameters Type Name Description String name The name of the element String dataType The data type of the element Properties | Improve this Doc View Source DataType Gets the type of the element Declaration public string DataType { get; } Property Value Type Description String | Improve this Doc View Source Name Gets the name of the element Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.GeometryInfo.html": {
    "href": "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.GeometryInfo.html",
    "title": "Class WfsFeatureTypeInfo.GeometryInfo | SharpMap",
    "keywords": "Class WfsFeatureTypeInfo.GeometryInfo The geometry info comprises the name of the geometry attribute (e.g. 'Shape\" or 'geom') and the type of the featuretype's geometry. Inheritance Object WfsFeatureTypeInfo.GeometryInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class GeometryInfo Fields | Improve this Doc View Source _GeometryName The name of the geometry, may be 'shape' or 'geom' Declaration public string _GeometryName Field Value Type Description String | Improve this Doc View Source _GeometryType The type of the features's geometry Declaration public string _GeometryType Field Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.html": {
    "href": "api/SharpMap.Utilities.Wfs.WfsFeatureTypeInfo.html",
    "title": "Class WfsFeatureTypeInfo | SharpMap",
    "keywords": "Class WfsFeatureTypeInfo Web Feature Type info class Inheritance Object WfsFeatureTypeInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class WfsFeatureTypeInfo Constructors | Improve this Doc View Source WfsFeatureTypeInfo() Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo() | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName) Parameters Type Name Description String serviceUri The Web Feature Service URI String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The feature type name String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. | Improve this Doc View Source WfsFeatureTypeInfo(String, String, String, String, String, GeometryTypeEnum) Initializes a new instance of the WfsFeatureTypeInfo class. Declaration public WfsFeatureTypeInfo(string serviceUri, string nsPrefix, string featureTypeNamespace, string featureType, string geometryName, GeometryTypeEnum geometryType) Parameters Type Name Description String serviceUri The Web Feature Service URI String nsPrefix Use an empty string or 'null', if there is no prefix for the featuretype. String featureTypeNamespace Use an empty string or 'null', if there is no namespace for the featuretype. You don't need to know the namespace of the feature type, if you use the quick geometries option. String featureType The feature type name String geometryName The geometry name is the property of the featuretype from which geometry information can be obtained from. Usually this property is called something like 'Shape' or 'geom'. It is absolutely necessary to give this parameter. GeometryTypeEnum geometryType Specifying the geometry type helps to accelerate the rendering process. Properties | Improve this Doc View Source BBox Gets or sets the spatial extent of the featuretype - defined as minimum bounding rectangle. Declaration public WfsFeatureTypeInfo.BoundingBox BBox { get; set; } Property Value Type Description WfsFeatureTypeInfo.BoundingBox | Improve this Doc View Source Cs Separator for coordinate values (for gml:coordinates) Declaration public string Cs { get; set; } Property Value Type Description String | Improve this Doc View Source DecimalDel Decimal separator (for gml:coordinates) Declaration public string DecimalDel { get; set; } Property Value Type Description String | Improve this Doc View Source Elements Gets the elements associated to the feature. Declaration public List<WfsFeatureTypeInfo.ElementInfo> Elements { get; } Property Value Type Description List < WfsFeatureTypeInfo.ElementInfo > | Improve this Doc View Source FeatureTypeNamespace Gets or sets the featuretype namespace. This argument is obligatory for data retrieving, except when using the quick geometries option. Declaration public string FeatureTypeNamespace { get; set; } Property Value Type Description String | Improve this Doc View Source Geometry Gets or sets information about the geometry of the featuretype. Setting at least the geometry name is obligatory for data retrieving. Declaration public WfsFeatureTypeInfo.GeometryInfo Geometry { get; set; } Property Value Type Description WfsFeatureTypeInfo.GeometryInfo | Improve this Doc View Source Name Gets or sets the name of the featuretype. This argument is obligatory for data retrieving. Declaration public string Name { get; set; } Property Value Type Description String The name. | Improve this Doc View Source Prefix Gets or sets the prefix of the featuretype and it's nested elements. This argument is obligatory for data retrieving, if the featuretype is declared with a prefix in 'GetCapabilities'. Declaration public string Prefix { get; set; } Property Value Type Description String The prefix. | Improve this Doc View Source ServiceURI Gets or sets the service URI for WFS 'GetFeature' request. This argument is obligatory for data retrieving. Declaration public string ServiceURI { get; set; } Property Value Type Description String | Improve this Doc View Source SRID Gets or sets the spatial reference ID Declaration public string SRID { get; set; } Property Value Type Description String | Improve this Doc View Source Ts Tuple separator (for gml:coordinates) Declaration public string Ts { get; set; } Property Value Type Description String"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.CustomQueryContext.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.CustomQueryContext.html",
    "title": "Class XPathQueryManager.CustomQueryContext | SharpMap",
    "keywords": "Class XPathQueryManager.CustomQueryContext This class represents a custom context for XPath queries. It is derived from XsltContext. Inheritance Object XmlNamespaceManager XsltContext XPathQueryManager.CustomQueryContext Implements IEnumerable IXmlNamespaceResolver Inherited Members XmlNamespaceManager.AddNamespace(String, String) XmlNamespaceManager.GetEnumerator() XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope) XmlNamespaceManager.HasNamespace(String) XmlNamespaceManager.LookupNamespace(String) XmlNamespaceManager.LookupPrefix(String) XmlNamespaceManager.PopScope() XmlNamespaceManager.PushScope() XmlNamespaceManager.RemoveNamespace(String, String) XmlNamespaceManager.DefaultNamespace XmlNamespaceManager.NameTable Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class CustomQueryContext : XsltContext, IEnumerable, IXmlNamespaceResolver Constructors | Improve this Doc View Source CustomQueryContext() Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext() | Improve this Doc View Source CustomQueryContext(NameTable) Initializes a new instance of the XPathQueryManager.CustomQueryContext class. Declaration public CustomQueryContext(NameTable table) Parameters Type Name Description NameTable table A NameTable instance Properties | Improve this Doc View Source Whitespace Method from XsltContext. Declaration public override bool Whitespace { get; } Property Value Type Description Boolean Overrides XsltContext.Whitespace Methods | Improve this Doc View Source AddNamespace(IDictionary<String, String>) This method adds a list of namespaces to use in the custom context. Declaration public void AddNamespace(IDictionary<string, string> namespaces) Parameters Type Name Description IDictionary < String , String > namespaces A list of namespaces | Improve this Doc View Source AddParam(DictionaryEntry[]) This method adds a list of parameters to the custom context. Declaration public void AddParam(DictionaryEntry[] parameters) Parameters Type Name Description DictionaryEntry [] parameters A list of parameters | Improve this Doc View Source AddParam(String, Object) This method adds a parameter to the custom context. Declaration public void AddParam(string name, object parameter) Parameters Type Name Description String name The name of the parameter Object parameter The value of the parameter | Improve this Doc View Source CompareDocument(String, String) Method from XsltContext. Declaration public override int CompareDocument(string baseUri, string nextbaseUri) Parameters Type Name Description String baseUri String nextbaseUri Returns Type Description Int32 Overrides XsltContext.CompareDocument(String, String) | Improve this Doc View Source GetParam(String) This method gets a parameter by name. Declaration public object GetParam(string name) Parameters Type Name Description String name The name of the parameter Returns Type Description Object | Improve this Doc View Source PreserveWhitespace(XPathNavigator) Method from XsltContext. Declaration public override bool PreserveWhitespace(XPathNavigator node) Parameters Type Name Description XPathNavigator node Returns Type Description Boolean Overrides XsltContext.PreserveWhitespace(XPathNavigator) | Improve this Doc View Source RemoveParam(String) This method removes a parameter from the inherent parameter list. Declaration public object RemoveParam(string name) Parameters Type Name Description String name The name of the parameter Returns Type Description Object | Improve this Doc View Source ResetParams() This methods clears the inherent parameter list. Declaration public void ResetParams() | Improve this Doc View Source ResolveFunction(String, String, XPathResultType[]) This method resolves a function appearing in an XPath expression. Declaration public override IXsltContextFunction ResolveFunction(string prefix, string name, XPathResultType[] ArgTypes) Parameters Type Name Description String prefix The prefix of the function String name The name of the function XPathResultType [] ArgTypes A list of argument types of the function Returns Type Description IXsltContextFunction Overrides XsltContext.ResolveFunction(String, String, XPathResultType[]) | Improve this Doc View Source ResolveVariable(String, String) This method resolves a variable appearing in an XPath expression. Declaration public override IXsltContextVariable ResolveVariable(string prefix, string name) Parameters Type Name Description String prefix The prefix of the variable String name The name of the variable Returns Type Description IXsltContextVariable Overrides XsltContext.ResolveVariable(String, String) Implements System.Collections.IEnumerable System.Xml.IXmlNamespaceResolver"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.html",
    "title": "Class XPathQueryManager | SharpMap",
    "keywords": "Class XPathQueryManager This class provides an easy-to-use interface for complex (parameterized) XPath queries. Inheritance Object XPathQueryManager Implements IXPathQueryManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class XPathQueryManager : IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManager() Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager() | Improve this Doc View Source XPathQueryManager(HttpClientUtil) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source XPathQueryManager(Byte[]) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(byte[] document) Parameters Type Name Description Byte [] document A byte array with XML data | Improve this Doc View Source XPathQueryManager(Stream) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source XPathQueryManager(String) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(string fileName) Parameters Type Name Description String fileName | Improve this Doc View Source XPathQueryManager(XPathDocument) Initializes a new instance of the XPathQueryManager class. Declaration public XPathQueryManager(XPathDocument xPathDoc) Parameters Type Name Description XPathDocument xPathDoc An XmlDocument instance Methods | Improve this Doc View Source AddNamespace(String, String) This method adds a namespace for XPath queries. Declaration public void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix The namespace prefix String ns The namespace URI | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XmlDocument instance. Declaration public IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method compiles an XPath string. Declaration public XPathExpression Compile(string xPath) Parameters Type Name Description String xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression | Improve this Doc View Source GetContextOfNextNode() This method moves the current instance of XPathQueryManager to the context of the next node a previously handed over XPath expression addresses. Declaration public bool GetContextOfNextNode() Returns Type Description Boolean | Improve this Doc View Source GetContextOfNode(UInt32) This method moves the current instance of XPathQueryManager to the context of node[index] of current position. Declaration public bool GetContextOfNode(uint index) Parameters Type Name Description UInt32 index The index of the node to search Returns Type Description Boolean | Improve this Doc View Source GetIterator(XPathExpression) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator GetIterator(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) This method returns an XPathNodeIterator instance positioned at the nodes the XPath expression addresses. Declaration public XPathNodeIterator GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetValueFromNode(XPathExpression) This method returns the value of the first node the XPath expression addresses. Declaration public string GetValueFromNode(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description String | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) This method returns the value of the first node the XPath expression addresses. Declaration public string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description String | Improve this Doc View Source GetValuesFromNodes(XPathExpression) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) This method returns a collection of the values of all nodes the XPath expression addresses. Declaration public List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression) This method returns an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration public IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method returns an instance of XPathQueryManager in the context of the first node the XPath expression addresses. Declaration public IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method deletes the current namespace context. Declaration public void ResetNamespaces() | Improve this Doc View Source ResetNavigator() This method resets the inherent XPathNavigator instance. Declaration public void ResetNavigator() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) Sets a new XML document. Declaration public void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Byte[]) Sets a new XML document. Declaration public void SetDocumentToParse(byte[] document) Parameters Type Name Description Byte [] document A byte array with XML data | Improve this Doc View Source SetDocumentToParse(Stream) Sets a new XML document. Declaration public void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source SetDocumentToParse(String) Sets a new XmlDocument Declaration public void SetDocumentToParse(string fileName) Parameters Type Name Description String fileName Implements IXPathQueryManager"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamBase.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamBase.html",
    "title": "Class XPathQueryManager.ParamBase | SharpMap",
    "keywords": "Class XPathQueryManager.ParamBase This class is the base class of XPathQueryManager.ParamCompare and XPathQueryManager.ParamCompareWithTargetNs . Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public abstract class ParamBase Constructors | Improve this Doc View Source ParamBase(XPathResultType[], XPathResultType, Int32, Int32) Protected constructor for the abstract class. Declaration protected ParamBase(XPathResultType[] argTypes, XPathResultType returnType, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function XPathResultType returnType The return type of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Properties | Improve this Doc View Source ArgTypes Gets the argument types. Declaration public XPathResultType[] ArgTypes { get; } Property Value Type Description XPathResultType [] | Improve this Doc View Source Maxargs Gets the maximum number of arguments allowed. Declaration public int Maxargs { get; } Property Value Type Description Int32 | Improve this Doc View Source Minargs Gets the minimum number of arguments allowed. Declaration public int Minargs { get; } Property Value Type Description Int32 | Improve this Doc View Source ReturnType Gets the return type. Declaration public XPathResultType ReturnType { get; } Property Value Type Description XPathResultType"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamCompare.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamCompare.html",
    "title": "Class XPathQueryManager.ParamCompare | SharpMap",
    "keywords": "Class XPathQueryManager.ParamCompare This class performs a string comparison in an XPath expression. Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class ParamCompare : XPathQueryManager.ParamBase, IXsltContextFunction Constructors | Improve this Doc View Source ParamCompare(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompare class. Declaration public ParamCompare(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public virtual object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description Object A boolean value indicating whether the argument strings are identical | Improve this Doc View Source ResolveArgument(Object) This method creates a string from an object argument. In many cases the argument is an XPathNodeIterator that must be resolved. Declaration protected string ResolveArgument(object arg) Parameters Type Name Description Object arg An argument of the function to be resolved Returns Type Description String Implements System.Xml.Xsl.IXsltContextFunction"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamCompareWithTargetNs.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamCompareWithTargetNs.html",
    "title": "Class XPathQueryManager.ParamCompareWithTargetNs | SharpMap",
    "keywords": "Class XPathQueryManager.ParamCompareWithTargetNs This class performs a string comparison in an XPath expression. It is specifically created for using in XML schema documents. Inheritance Object XPathQueryManager.ParamBase XPathQueryManager.ParamCompare XPathQueryManager.ParamCompareWithTargetNs Implements IXsltContextFunction Inherited Members XPathQueryManager.ParamCompare.ResolveArgument(Object) XPathQueryManager.ParamBase.ArgTypes XPathQueryManager.ParamBase.ReturnType XPathQueryManager.ParamBase.Minargs XPathQueryManager.ParamBase.Maxargs Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class ParamCompareWithTargetNs : XPathQueryManager.ParamCompare, IXsltContextFunction Constructors | Improve this Doc View Source ParamCompareWithTargetNs(XPathResultType[], Int32, Int32) Initializes a new instance of the XPathQueryManager.ParamCompareWithTargetNs class. Declaration public ParamCompareWithTargetNs(XPathResultType[] argTypes, int minArgs, int maxArgs) Parameters Type Name Description XPathResultType [] argTypes The argument types of the function Int32 minArgs The minimum number of arguments allowed Int32 maxArgs The maximum number of arguments allowed Fields | Improve this Doc View Source FunctionName The name to use when embedding the function in an XPath expression. Declaration public static readonly string FunctionName Field Value Type Description String Methods | Improve this Doc View Source Invoke(XsltContext, Object[], XPathNavigator) This method performs a string comparison. Declaration public override object Invoke(XsltContext xsltContext, object[] args, XPathNavigator docContext) Parameters Type Name Description XsltContext xsltContext The Xslt context Object [] args The arguments of the function XPathNavigator docContext The document context Returns Type Description Object A boolean value indicating whether the argument strings are identical Overrides XPathQueryManager.ParamCompare.Invoke(XsltContext, Object[], XPathNavigator) Implements System.Xml.Xsl.IXsltContextFunction"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamFunctionVar.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager.ParamFunctionVar.html",
    "title": "Class XPathQueryManager.ParamFunctionVar | SharpMap",
    "keywords": "Class XPathQueryManager.ParamFunctionVar This class represents a variable in an XPath expression. Inheritance Object XPathQueryManager.ParamFunctionVar Implements IXsltContextVariable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class ParamFunctionVar : IXsltContextVariable Constructors | Improve this Doc View Source ParamFunctionVar(String, Object) Initializes a new instance of the XPathQueryManager.ParamFunctionVar class. Declaration public ParamFunctionVar(string name, object param) Parameters Type Name Description String name The name of the variable Object param The parameter Properties | Improve this Doc View Source IsLocal Method implementing IXsltContextVariable Declaration public bool IsLocal { get; } Property Value Type Description Boolean | Improve this Doc View Source IsParam Method implementing IXsltContextVariable Declaration public bool IsParam { get; } Property Value Type Description Boolean | Improve this Doc View Source VariableType Method implementing IXsltContextVariable Declaration public XPathResultType VariableType { get; } Property Value Type Description XPathResultType Methods | Improve this Doc View Source Evaluate(XsltContext) Method implementing IXsltContextVariable Declaration public object Evaluate(XsltContext xsltContext) Parameters Type Name Description XsltContext xsltContext Returns Type Description Object Implements System.Xml.Xsl.IXsltContextVariable"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager_CompiledExpressionsDecorator.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager_CompiledExpressionsDecorator.html",
    "title": "Class XPathQueryManager_CompiledExpressionsDecorator | SharpMap",
    "keywords": "Class XPathQueryManager_CompiledExpressionsDecorator This class is a decorator for classes implementing IXPathQueryManager . It stores compiled XPath expressions for re-use. Inheritance Object XPathQueryManager_Decorator XPathQueryManager_CompiledExpressionsDecorator Implements IXPathQueryManager Inherited Members XPathQueryManager_Decorator._XPathQueryManager XPathQueryManager_Decorator.AddNamespace(String, String) XPathQueryManager_Decorator.GetIterator(XPathExpression) XPathQueryManager_Decorator.GetIterator(XPathExpression, DictionaryEntry[]) XPathQueryManager_Decorator.GetValueFromNode(XPathExpression) XPathQueryManager_Decorator.GetValueFromNode(XPathExpression, DictionaryEntry[]) XPathQueryManager_Decorator.GetValuesFromNodes(XPathExpression) XPathQueryManager_Decorator.GetValuesFromNodes(XPathExpression, DictionaryEntry[]) XPathQueryManager_Decorator.ResetNamespaces() XPathQueryManager_Decorator.ResetNavigator() XPathQueryManager_Decorator.SetDocumentToParse(Stream) XPathQueryManager_Decorator.SetDocumentToParse(Byte[]) XPathQueryManager_Decorator.SetDocumentToParse(HttpClientUtil) XPathQueryManager_Decorator.SetDocumentToParse(String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public class XPathQueryManager_CompiledExpressionsDecorator : XPathQueryManager_Decorator, IXPathQueryManager Constructors | Improve this Doc View Source XPathQueryManager_CompiledExpressionsDecorator(IXPathQueryManager) Initializes a new instance of the XPathQueryManager_CompiledExpressionsDecorator class. Declaration public XPathQueryManager_CompiledExpressionsDecorator(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Methods | Improve this Doc View Source Clone() This method returns a clone of the current instance. The cloned instance operates on the same (read-only) XPathDocument instance. Declaration public override IXPathQueryManager Clone() Returns Type Description IXPathQueryManager Overrides XPathQueryManager_Decorator.Clone() | Improve this Doc View Source Compile(String) This method compiles an XPath string, if not already saved. Otherwise it returns the available XPath compilation. Declaration public override XPathExpression Compile(string xPath) Parameters Type Name Description String xPath The XPath string Returns Type Description XPathExpression A compiled XPath expression Overrides XPathQueryManager_Decorator.Compile(String) | Improve this Doc View Source GetContextOfNextNode() This method moves the current instance of XPathQueryManager_CompiledExpressionsDecorator to the context of the next node a previously handed over XPath expression addresses. Declaration public override bool GetContextOfNextNode() Returns Type Description Boolean Overrides XPathQueryManager_Decorator.GetContextOfNextNode() | Improve this Doc View Source GetContextOfNode(UInt32) This method moves the current instance of XPathQueryManager_CompiledExpressionsDecorator to the context of node[index] of current position. Declaration public override bool GetContextOfNode(uint index) Parameters Type Name Description UInt32 index The index of the node to search Returns Type Description Boolean Overrides XPathQueryManager_Decorator.GetContextOfNode(UInt32) | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression) This method returns an instance of XPathQueryManager_CompiledExpressionsDecorator in the context of the first node the XPath expression addresses. Declaration public override IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath The compiled XPath expression Returns Type Description IXPathQueryManager Overrides XPathQueryManager_Decorator.GetXPathQueryManagerInContext(XPathExpression) | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method returns an instance of XPathQueryManager_CompiledExpressionsDecorator in the context of the first node the XPath expression addresses. Declaration public override IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath The compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager Overrides XPathQueryManager_Decorator.GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) Implements IXPathQueryManager"
  },
  "api/SharpMap.Utilities.Wfs.XPathQueryManager_Decorator.html": {
    "href": "api/SharpMap.Utilities.Wfs.XPathQueryManager_Decorator.html",
    "title": "Class XPathQueryManager_Decorator | SharpMap",
    "keywords": "Class XPathQueryManager_Decorator This class should be the base class of all decorators for classes implementing IXPathQueryManager . Inheritance Object XPathQueryManager_Decorator XPathQueryManager_CompiledExpressionsDecorator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Utilities.Wfs Assembly : SharpMap.dll Syntax public abstract class XPathQueryManager_Decorator Constructors | Improve this Doc View Source XPathQueryManager_Decorator(IXPathQueryManager) Protected constructor for the abstract class. Declaration protected XPathQueryManager_Decorator(IXPathQueryManager xPathQueryManager) Parameters Type Name Description IXPathQueryManager xPathQueryManager An instance implementing IXPathQueryManager to operate on Fields | Improve this Doc View Source _XPathQueryManager The IXPathQueryManager that is decorated Declaration protected IXPathQueryManager _XPathQueryManager Field Value Type Description IXPathQueryManager Methods | Improve this Doc View Source AddNamespace(String, String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void AddNamespace(string prefix, string ns) Parameters Type Name Description String prefix A namespace prefix String ns A namespace URI | Improve this Doc View Source Clone() This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager Clone() Returns Type Description IXPathQueryManager | Improve this Doc View Source Compile(String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathExpression Compile(string xPath) Parameters Type Name Description String xPath An XPath string Returns Type Description XPathExpression A compiled XPath expression | Improve this Doc View Source GetContextOfNextNode() This method must be implemented specifically in each decorator. Declaration public abstract bool GetContextOfNextNode() Returns Type Description Boolean | Improve this Doc View Source GetContextOfNode(UInt32) This method must be implemented specifically in each decorator. Declaration public abstract bool GetContextOfNode(uint index) Parameters Type Name Description UInt32 index The index of the node to search Returns Type Description Boolean | Improve this Doc View Source GetIterator(XPathExpression) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator GetIterator(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath A compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetIterator(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual XPathNodeIterator GetIterator(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description XPathNodeIterator | Improve this Doc View Source GetValueFromNode(XPathExpression) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual string GetValueFromNode(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath A compiled XPath expression Returns Type Description String | Improve this Doc View Source GetValueFromNode(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual string GetValueFromNode(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description String | Improve this Doc View Source GetValuesFromNodes(XPathExpression) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual List<string> GetValuesFromNodes(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath A compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetValuesFromNodes(XPathExpression, DictionaryEntry[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual List<string> GetValuesFromNodes(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description List < String > | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression) This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath) Parameters Type Name Description XPathExpression xPath A compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source GetXPathQueryManagerInContext(XPathExpression, DictionaryEntry[]) This method must be implemented specifically in each decorator. Declaration public abstract IXPathQueryManager GetXPathQueryManagerInContext(XPathExpression xPath, DictionaryEntry[] queryParameters) Parameters Type Name Description XPathExpression xPath A compiled XPath expression DictionaryEntry [] queryParameters Parameters for the compiled XPath expression Returns Type Description IXPathQueryManager | Improve this Doc View Source ResetNamespaces() This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void ResetNamespaces() | Improve this Doc View Source ResetNavigator() This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void ResetNavigator() | Improve this Doc View Source SetDocumentToParse(HttpClientUtil) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(HttpClientUtil httpClientUtil) Parameters Type Name Description HttpClientUtil httpClientUtil A configured HttpClientUtil instance for performing web requests | Improve this Doc View Source SetDocumentToParse(Byte[]) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(byte[] document) Parameters Type Name Description Byte [] document A byte array with XML data | Improve this Doc View Source SetDocumentToParse(Stream) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(Stream documentStream) Parameters Type Name Description Stream documentStream A Stream with XML data | Improve this Doc View Source SetDocumentToParse(String) This method invokes the corresponding method of the inherent IXPathQueryManager instance. Declaration public virtual void SetDocumentToParse(string fileName) Parameters Type Name Description String fileName"
  },
  "api/SharpMap.Web.html": {
    "href": "api/SharpMap.Web.html",
    "title": "Namespace SharpMap.Web | SharpMap",
    "keywords": "Namespace SharpMap.Web Classes ServiceExceptionReport The ServiceExceptionReport element contains one or more ServiceException elements that describe a service exception. Structs ServiceExceptionType The ServiceExceptionType type defines the ServiceException element. The content of the element is an exception message that the service wished to convey to the client application. Interfaces IClient Interface for client classes accessing OGC Web services"
  },
  "api/SharpMap.Web.IClient.html": {
    "href": "api/SharpMap.Web.IClient.html",
    "title": "Interface IClient | SharpMap",
    "keywords": "Interface IClient Interface for client classes accessing OGC Web services Namespace : SharpMap.Web Assembly : SharpMap.dll Syntax public interface IClient Properties | Improve this Doc View Source BaseUrl Gets or sets a value indicating the base uniform resource locator of the web service. Declaration string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source CapabilitiesUrl Gets a value indicating the uniform resource locator for the GetCapabilities request. Declaration string CapabilitiesUrl { get; } Property Value Type Description String | Improve this Doc View Source Credentials Gets or set a value indicating the ICredentials to use for accessing the Proxy . Declaration ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source ExceptionFormats Declaration string[] ExceptionFormats { get; } Property Value Type Description String [] | Improve this Doc View Source GetXmlAsByteArray Gets the web servers's response as an array of bytes Declaration byte[] GetXmlAsByteArray { get; } Property Value Type Description Byte [] | Improve this Doc View Source GetXmlAsText Gets the web server's response as a text string. Declaration string GetXmlAsText { get; } Property Value Type Description String | Improve this Doc View Source Proxy Gets or sets a value indicating the proxy to use. Declaration IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source TimeOut Gets or sets a value indicating the timeout (in milliseconds) for the connection Declaration int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VendorSpecificCapabilities An XmlNode specifying specific capabilities, limitations of the server Declaration XmlNode VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Improve this Doc View Source Version Gets or sets the version of the web service to use. Declaration string Version { get; set; } Property Value Type Description String | Improve this Doc View Source XmlDoc Gets a value indicating the web-servers result as an XmlDocument Declaration XmlDocument XmlDoc { get; } Property Value Type Description XmlDocument Methods | Improve this Doc View Source CreateCapabilitiesUrl(String) Method to create a complete capabilities uniform resource locator Declaration string CreateCapabilitiesUrl(string url) Parameters Type Name Description String url The base url Returns Type Description String The uniform resource locator for the capabilities request. | Improve this Doc View Source GetRemoteXml() Method to get the web server's response as a XmlDocument Declaration XmlDocument GetRemoteXml() Returns Type Description XmlDocument The web server's response as a XmlDocument | Improve this Doc View Source ParseCapabilities() Method to parse the web-server's capabilities Declaration void ParseCapabilities() | Improve this Doc View Source ParseVersion() Method to parse the web-server's version Declaration void ParseVersion() | Improve this Doc View Source ValidateXml() Method to validate the web server's response Declaration void ValidateXml()"
  },
  "api/SharpMap.Web.ServiceExceptionReport.html": {
    "href": "api/SharpMap.Web.ServiceExceptionReport.html",
    "title": "Class ServiceExceptionReport | SharpMap",
    "keywords": "Class ServiceExceptionReport The ServiceExceptionReport element contains one or more ServiceException elements that describe a service exception. Inheritance Object ServiceExceptionReport Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web Assembly : SharpMap.dll Syntax [Serializable] public class ServiceExceptionReport Constructors | Improve this Doc View Source ServiceExceptionReport(String) Creates a new instance of this class Declaration public ServiceExceptionReport(string version) Parameters Type Name Description String version Properties | Improve this Doc View Source ServiceException The Service exception element is used to describe a service exception. Declaration public List<ServiceExceptionType> ServiceException { get; } Property Value Type Description List < ServiceExceptionType > | Improve this Doc View Source Version Gets the version number Declaration public string Version { get; } Property Value Type Description String"
  },
  "api/SharpMap.Web.ServiceExceptionType.html": {
    "href": "api/SharpMap.Web.ServiceExceptionType.html",
    "title": "Struct ServiceExceptionType | SharpMap",
    "keywords": "Struct ServiceExceptionType The ServiceExceptionType type defines the ServiceException element. The content of the element is an exception message that the service wished to convey to the client application. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web Assembly : SharpMap.dll Syntax [Serializable] public struct ServiceExceptionType Properties | Improve this Doc View Source Code A service may associate a code with an exception by using the code attribute. Declaration public string Code { get; set; } Property Value Type Description String | Improve this Doc View Source Locator The locator attribute may be used by a service to indicate to a client where in the client's request an exception was encountered. If the request included a 'handle' attribute, this may be used to identify the offending component of the request. Otherwise the service may try to use other means to locate the exception such as line numbers or byte offset from the begining of the request, etc ... Declaration public string Locator { get; set; } Property Value Type Description String"
  },
  "api/SharpMap.Web.Wcs.Client.html": {
    "href": "api/SharpMap.Web.Wcs.Client.html",
    "title": "Class Client | SharpMap",
    "keywords": "Class Client Web Coverage Service Client class Inheritance Object Client Implements IClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wcs Assembly : SharpMap.dll Syntax public class Client : IClient Constructors | Improve this Doc View Source Client() Just instantiate, no parameters Declaration public Client() | Improve this Doc View Source Client(Byte[]) Hydrates Client object based on byte array version of XML document Declaration public Client(byte[] byteXml) Parameters Type Name Description Byte [] byteXml byte array version of capabilities document | Improve this Doc View Source Client(String) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url) Parameters Type Name Description String url URL of wcs server | Improve this Doc View Source Client(String, IWebProxy) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use | Improve this Doc View Source Client(String, IWebProxy, Int32) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use Int32 timeOut | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials Credentials for authenticating against remote WCS-server | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials, String) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials, string version) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials String version | Improve this Doc View Source Client(String, IWebProxy, Int32, String) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, string version) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout String version | Improve this Doc View Source Client(String, IWebProxy, ICredentials) Initializes client to WCS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, ICredentials credentials) Parameters Type Name Description String url URL of wcs server IWebProxy proxy Proxy to use ICredentials credentials Credentials for authenticating against remote WCS-server Properties | Improve this Doc View Source BaseUrl Gets or sets the base URL for the server without any OGC specific name=value pairs Declaration public string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source CapabilitiesUrl Gets the entire XML document as text Declaration public string CapabilitiesUrl { get; } Property Value Type Description String | Improve this Doc View Source Credentials Gets or sets the credentials used to access the Web coverage service Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description String [] | Improve this Doc View Source GetXmlAsByteArray Gets the entire XML document as byte[] Declaration public byte[] GetXmlAsByteArray { get; } Property Value Type Description Byte [] | Improve this Doc View Source GetXmlAsText Gets the entire XML document as text Declaration public string GetXmlAsText { get; } Property Value Type Description String | Improve this Doc View Source Proxy Gets or sets the proxy used to establish the connection to the web coverage service Declaration public IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source TimeOut Timeout of WebRequest in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilities' VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Improve this Doc View Source Version Gets the version of the WCS server (ex. \"1.0.0\") Declaration public string Version { get; set; } Property Value Type Description String | Improve this Doc View Source XmlDoc Gets the full capabilities xml document Declaration public XmlDocument XmlDoc { get; } Property Value Type Description XmlDocument Methods | Improve this Doc View Source CreateCapabilitiesUrl(String) Function to create a Capabilities Url Declaration public string CreateCapabilitiesUrl(string url) Parameters Type Name Description String url The base url Returns Type Description String A capabilities url | Improve this Doc View Source GetRemoteXml() Downloads servicedescription from WCS service Declaration public XmlDocument GetRemoteXml() Returns Type Description XmlDocument XmlDocument from Url. Null if Url is empty or inproper XmlDocument | Improve this Doc View Source ParseCapabilities() Parses a GetCapabilities request from an XMLDoc Declaration public void ParseCapabilities() | Improve this Doc View Source ParseVersion() Parse the version number from the capabilities document Declaration public void ParseVersion() | Improve this Doc View Source ValidateXml() Method to validate the web server's response Declaration public void ValidateXml() Implements IClient"
  },
  "api/SharpMap.Web.Wcs.html": {
    "href": "api/SharpMap.Web.Wcs.html",
    "title": "Namespace SharpMap.Web.Wcs | SharpMap",
    "keywords": "Namespace SharpMap.Web.Wcs Classes Client Web Coverage Service Client class"
  },
  "api/SharpMap.Web.Wfs.Capabilities.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.html",
    "title": "Class Capabilities | SharpMap",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance Object Capabilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public class Capabilities"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceIdentification.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceIdentification.html",
    "title": "Struct Capabilities.WfsServiceIdentification | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceIdentification Web Feature Service identification object Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct WfsServiceIdentification Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description String | Improve this Doc View Source AccessConstraints Access constraints Declaration public string AccessConstraints Field Value Type Description String | Improve this Doc View Source Fees Fees Declaration public string Fees Field Value Type Description String | Improve this Doc View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description String [] | Improve this Doc View Source ServiceType Service type Declaration public string ServiceType Field Value Type Description String | Improve this Doc View Source ServiceTypeVersion Service type version Declaration public string ServiceTypeVersion Field Value Type Description String | Improve this Doc View Source Title Title Declaration public string Title Field Value Type Description String Methods | Improve this Doc View Source WfsServiceIdentifiication(String) Initializer Declaration public void WfsServiceIdentifiication(string title) Parameters Type Name Description String title The title of the Web Feature Service"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.html",
    "title": "Struct Capabilities.WfsServiceProvider | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceProvider Web Feature Service Service provider object Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct WfsServiceProvider Fields | Improve this Doc View Source ProviderName Provider name Declaration public string ProviderName Field Value Type Description String | Improve this Doc View Source ProviderSite Provider site Declaration public string ProviderSite Field Value Type Description String | Improve this Doc View Source ServiceContactDetail Service contact detail Declaration public Capabilities.WfsServiceProvider.ServiceContact ServiceContactDetail Field Value Type Description Capabilities.WfsServiceProvider.ServiceContact"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address.html",
    "title": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address Address structure Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct Address Fields | Improve this Doc View Source AdministrativeArea Administrative area Declaration public string AdministrativeArea Field Value Type Description String | Improve this Doc View Source City City Declaration public string City Field Value Type Description String | Improve this Doc View Source Country Country Declaration public string Country Field Value Type Description String | Improve this Doc View Source DeliveryPoint Delivery point Declaration public string DeliveryPoint Field Value Type Description String | Improve this Doc View Source ElectronicMailAddress Email address Declaration public string ElectronicMailAddress Field Value Type Description String | Improve this Doc View Source Facsimile Facsimile number Declaration public string Facsimile Field Value Type Description String | Improve this Doc View Source PostalCode Postal code Declaration public string PostalCode Field Value Type Description String | Improve this Doc View Source Voice Voice number Declaration public string Voice Field Value Type Description String"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.html",
    "title": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo Contact info structure Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct ContactInfo Fields | Improve this Doc View Source AddressDetails Address Declaration public Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address AddressDetails Field Value Type Description Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address | Improve this Doc View Source ContactInstructions Contact instructions Declaration public string ContactInstructions Field Value Type Description String | Improve this Doc View Source HoursOfService Hours of service Declaration public string HoursOfService Field Value Type Description String | Improve this Doc View Source OnlineResource Online resource Declaration public string OnlineResource Field Value Type Description String | Improve this Doc View Source Telephone Telephone Declaration public Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone Telephone Field Value Type Description Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone.html",
    "title": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone Phone structure Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct Phone Fields | Improve this Doc View Source Facsimile Facsimile number Declaration public string Facsimile Field Value Type Description String | Improve this Doc View Source Voice Voice number Declaration public string Voice Field Value Type Description String"
  },
  "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.html": {
    "href": "api/SharpMap.Web.Wfs.Capabilities.WfsServiceProvider.ServiceContact.html",
    "title": "Struct Capabilities.WfsServiceProvider.ServiceContact | SharpMap",
    "keywords": "Struct Capabilities.WfsServiceProvider.ServiceContact Service contact object Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax public struct ServiceContact Fields | Improve this Doc View Source ContactInformation Contact information Declaration public Capabilities.WfsServiceProvider.ServiceContact.ContactInfo ContactInformation Field Value Type Description Capabilities.WfsServiceProvider.ServiceContact.ContactInfo | Improve this Doc View Source IndividualName Individual name Declaration public string IndividualName Field Value Type Description String | Improve this Doc View Source PositionName Position Declaration public string PositionName Field Value Type Description String | Improve this Doc View Source Role Role Declaration public string Role Field Value Type Description String"
  },
  "api/SharpMap.Web.Wfs.Client.html": {
    "href": "api/SharpMap.Web.Wfs.Client.html",
    "title": "Class Client | SharpMap",
    "keywords": "Class Client Class for requesting and parsing a WFS servers capabilities Inheritance Object Client Implements IClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wfs Assembly : SharpMap.dll Syntax [Serializable] public class Client : IClient Constructors | Improve this Doc View Source Client() Just instantiate, no parameters Declaration public Client() | Improve this Doc View Source Client(Byte[]) Hydrates Client object based on byte array version of XML document Declaration public Client(byte[] byteXml) Parameters Type Name Description Byte [] byteXml byte array version of capabilities document | Improve this Doc View Source Client(String) Initializes WFS server and parses the Capabilities request Declaration public Client(string url) Parameters Type Name Description String url URL of wfs server | Improve this Doc View Source Client(String, IWebProxy) This Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use | Improve this Doc View Source Client(String, IWebProxy, Int32) This Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials) Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials Credentials for authenticating against remote WFS-server | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials, String) Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials, string version) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials Credentials for authenticating against remote WFS-server String version | Improve this Doc View Source Client(String, IWebProxy, Int32, String) Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, string version) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout String version | Improve this Doc View Source Client(String, IWebProxy, ICredentials) Initializes WFS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, ICredentials credentials) Parameters Type Name Description String url URL of wfs server IWebProxy proxy Proxy to use ICredentials credentials Credentials for authenticating against remote WFS-server Properties | Improve this Doc View Source BaseUrl Gets or sets the base URL for the server without any OGC specific name=value pairs Declaration public string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source CapabilitiesUrl Gets the entire XML document as text Declaration public string CapabilitiesUrl { get; } Property Value Type Description String | Improve this Doc View Source Credentials Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description String [] | Improve this Doc View Source GetXmlAsByteArray Gets the entire XML document as byte[] Declaration public byte[] GetXmlAsByteArray { get; } Property Value Type Description Byte [] | Improve this Doc View Source GetXmlAsText Gets the entire XML document as text Declaration public string GetXmlAsText { get; } Property Value Type Description String | Improve this Doc View Source Proxy Declaration public IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source ServiceIdentification Gets the service description Declaration public Capabilities.WfsServiceIdentification ServiceIdentification { get; } Property Value Type Description Capabilities.WfsServiceIdentification | Improve this Doc View Source ServiceProvider Gets the service provider Declaration public Capabilities.WfsServiceProvider ServiceProvider { get; } Property Value Type Description Capabilities.WfsServiceProvider | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Defaults to 10 seconds Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilities VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Improve this Doc View Source Version Gets the version of the WFS server (ex. \"1.1.0\") Declaration public string Version { get; set; } Property Value Type Description String | Improve this Doc View Source XmlDoc Gets the capabilities information as XmlDocument Declaration public XmlDocument XmlDoc { get; } Property Value Type Description XmlDocument Methods | Improve this Doc View Source CreateCapabilitiesUrl(String) Declaration public string CreateCapabilitiesUrl(string url) Parameters Type Name Description String url Returns Type Description String | Improve this Doc View Source GetRemoteXml() Downloads servicedescription from WFS service Declaration public XmlDocument GetRemoteXml() Returns Type Description XmlDocument XmlDocument from Url. Null if Url is empty or inproper XmlDocument | Improve this Doc View Source ParseCapabilities() Parses a servicedescription and stores the data in the ServiceIdentification property Declaration public void ParseCapabilities() | Improve this Doc View Source ParseVersion() Method to parse the web-server's version Declaration public void ParseVersion() | Improve this Doc View Source ValidateXml() Method to validate the web server's response Declaration public void ValidateXml() Implements IClient"
  },
  "api/SharpMap.Web.Wfs.html": {
    "href": "api/SharpMap.Web.Wfs.html",
    "title": "Namespace SharpMap.Web.Wfs | SharpMap",
    "keywords": "Namespace SharpMap.Web.Wfs Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WFS servers capabilities Structs Capabilities.WfsServiceIdentification Web Feature Service identification object Capabilities.WfsServiceProvider Web Feature Service Service provider object Capabilities.WfsServiceProvider.ServiceContact Service contact object Capabilities.WfsServiceProvider.ServiceContact.ContactInfo Contact info structure Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Address Address structure Capabilities.WfsServiceProvider.ServiceContact.ContactInfo.Phone Phone structure"
  },
  "api/SharpMap.Web.Wms.Capabilities.html": {
    "href": "api/SharpMap.Web.Wms.Capabilities.html",
    "title": "Class Capabilities | SharpMap",
    "keywords": "Class Capabilities Class for generating the WmsCapabilities Xml Inheritance Object Capabilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public class Capabilities"
  },
  "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.ContactAddress.html": {
    "href": "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.ContactAddress.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactAddress | SharpMap",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct ContactAddress Fields | Improve this Doc View Source Address Contact address Declaration public string Address Field Value Type Description String | Improve this Doc View Source AddressType Type of address (usually \"postal\"). Declaration public string AddressType Field Value Type Description String | Improve this Doc View Source City Contact City Declaration public string City Field Value Type Description String | Improve this Doc View Source Country Country of contact address Declaration public string Country Field Value Type Description String | Improve this Doc View Source PostCode Zipcode of contact Declaration public string PostCode Field Value Type Description String | Improve this Doc View Source StateOrProvince State or province of contact Declaration public string StateOrProvince Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.ContactPerson.html": {
    "href": "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.ContactPerson.html",
    "title": "Struct Capabilities.WmsContactInformation.ContactPerson | SharpMap",
    "keywords": "Struct Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct ContactPerson Fields | Improve this Doc View Source Organisation Organisation of primary person Declaration public string Organisation Field Value Type Description String | Improve this Doc View Source Person Primary contact person Declaration public string Person Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.html": {
    "href": "api/SharpMap.Web.Wms.Capabilities.WmsContactInformation.html",
    "title": "Struct Capabilities.WmsContactInformation | SharpMap",
    "keywords": "Struct Capabilities.WmsContactInformation Stores contact metadata about WMS service Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsContactInformation Fields | Improve this Doc View Source Address Address Declaration public Capabilities.WmsContactInformation.ContactAddress Address Field Value Type Description Capabilities.WmsContactInformation.ContactAddress | Improve this Doc View Source ElectronicMailAddress Email address Declaration public string ElectronicMailAddress Field Value Type Description String | Improve this Doc View Source FacsimileTelephone Fax number Declaration public string FacsimileTelephone Field Value Type Description String | Improve this Doc View Source PersonPrimary Primary contact person Declaration public Capabilities.WmsContactInformation.ContactPerson PersonPrimary Field Value Type Description Capabilities.WmsContactInformation.ContactPerson | Improve this Doc View Source Position Position of contact person Declaration public string Position Field Value Type Description String | Improve this Doc View Source VoiceTelephone Telephone Declaration public string VoiceTelephone Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Capabilities.WmsServiceDescription.html": {
    "href": "api/SharpMap.Web.Wms.Capabilities.WmsServiceDescription.html",
    "title": "Struct Capabilities.WmsServiceDescription | SharpMap",
    "keywords": "Struct Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsServiceDescription Constructors | Improve this Doc View Source WmsServiceDescription(String, String) Initializes a WmsServiceDescription object Declaration public WmsServiceDescription(string title, string onlineResource) Parameters Type Name Description String title Mandatory Human-readable title for pick lists String onlineResource Top-level web address of service or service provider. | Improve this Doc View Source WmsServiceDescription(String, String, String) Initializes a WmsServiceDescription object Declaration public WmsServiceDescription(string title, string onlineResource, string publicWMSAccessUrl) Parameters Type Name Description String title Mandatory Human-readable title for pick lists String onlineResource Top-level web address of service or service provider. String publicWMSAccessUrl Public URL to use when accessing the service in case it is hosted behind a firewall Fields | Improve this Doc View Source Abstract Optional narrative description providing additional information Declaration public string Abstract Field Value Type Description String | Improve this Doc View Source AccessConstraints The optional element \"AccessConstraints\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no access constraints, as follows: \"none\". When constraints are imposed, no precise syntax has been defined for the text content of these elements, but client applications may display the content for user information and action. Declaration public string AccessConstraints Field Value Type Description String | Improve this Doc View Source ContactInformation Optional WMS contact information Declaration public Capabilities.WmsContactInformation ContactInformation Field Value Type Description Capabilities.WmsContactInformation | Improve this Doc View Source Fees The optional element \"Fees\" may be omitted if it do not apply to the server. If the element is present, the reserved word \"none\" (case-insensitive) shall be used if there are no fees, as follows: \"none\". Declaration public string Fees Field Value Type Description String | Improve this Doc View Source Keywords Optional list of keywords or keyword phrases describing the server as a whole to help catalog searching Declaration public string[] Keywords Field Value Type Description String [] | Improve this Doc View Source LayerLimit Maximum number of layers allowed (0=no restrictions) Declaration public uint LayerLimit Field Value Type Description UInt32 | Improve this Doc View Source MaxHeight Maximum height allowed in pixels (0=no restrictions) Declaration public uint MaxHeight Field Value Type Description UInt32 | Improve this Doc View Source MaxWidth Maximum width allowed in pixels (0=no restrictions) Declaration public uint MaxWidth Field Value Type Description UInt32 | Improve this Doc View Source OnlineResource Mandatory Top-level web address of service or service provider. Declaration public string OnlineResource Field Value Type Description String | Improve this Doc View Source PublicAccessURL Public url to access the service in case service is hosted behind firewall Declaration public string PublicAccessURL Field Value Type Description String | Improve this Doc View Source Title Mandatory Human-readable title for pick lists Declaration public string Title Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Client.html": {
    "href": "api/SharpMap.Web.Wms.Client.html",
    "title": "Class Client | SharpMap",
    "keywords": "Class Client Class for requesting and parsing a WMS servers capabilities Inheritance Object Client Implements IClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax [Serializable] public class Client : IClient Constructors | Improve this Doc View Source Client() Just instantiate, no parameters Declaration public Client() | Improve this Doc View Source Client(Byte[]) Hydrates Client object based on byte array version of XML document Declaration public Client(byte[] byteXml) Parameters Type Name Description Byte [] byteXml byte array version of capabilities document | Improve this Doc View Source Client(String) Initializes WMS server and parses the Capabilities request Declaration public Client(string url) Parameters Type Name Description String url URL of wms server | Improve this Doc View Source Client(String, IWebProxy) This Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use | Improve this Doc View Source Client(String, IWebProxy, Int32) This Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use Int32 timeOut | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials) Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials Credentials for authenticating against remote WMS-server | Improve this Doc View Source Client(String, IWebProxy, Int32, ICredentials, String) Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, ICredentials credentials, string version) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout ICredentials credentials String version | Improve this Doc View Source Client(String, IWebProxy, Int32, String) Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, int timeOut, string version) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use Int32 timeOut Web request timeout String version | Improve this Doc View Source Client(String, IWebProxy, ICredentials) Initializes WMS server and parses the Capabilities request Declaration public Client(string url, IWebProxy proxy, ICredentials credentials) Parameters Type Name Description String url URL of wms server IWebProxy proxy Proxy to use ICredentials credentials Credentials for authenticating against remote WMS-server Properties | Improve this Doc View Source BaseUrl Gets or sets the base URL for the server without any OGC specific name=value pairs Declaration public string BaseUrl { get; set; } Property Value Type Description String | Improve this Doc View Source CapabilitiesUrl Gets the entire XML document as text Declaration public string CapabilitiesUrl { get; } Property Value Type Description String | Improve this Doc View Source Credentials Declaration public ICredentials Credentials { get; set; } Property Value Type Description ICredentials | Improve this Doc View Source DescribeLayerOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> DescribeLayerOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source DescribeLayerRequests Gets the available DescribeLayer request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] DescribeLayerRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source ExceptionFormats Gets a list of available exception mime type formats Declaration public string[] ExceptionFormats { get; } Property Value Type Description String [] | Improve this Doc View Source GetCapabilitiesOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetCapabilitiesOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source GetCapabilitiesRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetCapabilitiesRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetFeatureInfoOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetFeatureInfoOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source GetFeatureInfoRequests Gets the available GetFeatureInfo request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetFeatureInfoRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetLegendGraphicOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetLegendGraphicOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source GetLegendGraphicRequests Gets the available GetLegendGraphic request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetLegendGraphicRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetMapOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetMapOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source GetMapRequests Gets the available GetMap request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetMapRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetStylesOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> GetStylesOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source GetStylesRequests Gets the available GetLegendGraphic request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] GetStylesRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source GetXmlAsByteArray Gets the entire XML document as byte[] Declaration public byte[] GetXmlAsByteArray { get; } Property Value Type Description Byte [] | Improve this Doc View Source GetXmlAsText Gets the entire XML document as text Declaration public string GetXmlAsText { get; } Property Value Type Description String | Improve this Doc View Source Layer Gets the hierarchical layer structure Declaration public Client.WmsServerLayer Layer { get; } Property Value Type Description Client.WmsServerLayer | Improve this Doc View Source Proxy Declaration public IWebProxy Proxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source PutStylesOutputFormats Gets a list of available image mime type formats Declaration public Collection<string> PutStylesOutputFormats { get; } Property Value Type Description Collection < String > | Improve this Doc View Source PutStylesRequests Gets the available GetLegendGraphic request methods and Online Resource URI Declaration public Client.WmsOnlineResource[] PutStylesRequests { get; } Property Value Type Description Client.WmsOnlineResource [] | Improve this Doc View Source ServiceDescription Gets the service description Declaration public Capabilities.WmsServiceDescription ServiceDescription { get; } Property Value Type Description Capabilities.WmsServiceDescription | Improve this Doc View Source TimeOut Timeout of webrequest in milliseconds. Declaration public int TimeOut { get; set; } Property Value Type Description Int32 | Improve this Doc View Source VendorSpecificCapabilities Exposes the capabilitie's VendorSpecificCapabilities as XmlNode object. External modules could use this to parse the vendor specific capabilities for their specific purpose. Declaration public XmlNode VendorSpecificCapabilities { get; } Property Value Type Description XmlNode | Improve this Doc View Source Version Gets the version of the WMS server (ex. \"1.3.0\") Declaration public string Version { get; set; } Property Value Type Description String | Improve this Doc View Source WmsVersion Declaration [Obsolete(\"Deprecated, use Version property instead.\")] public string WmsVersion { get; } Property Value Type Description String | Improve this Doc View Source XmlDoc Declaration public XmlDocument XmlDoc { get; } Property Value Type Description XmlDocument Methods | Improve this Doc View Source CreateCapabilitiesUrl(String) Declaration public string CreateCapabilitiesUrl(string url) Parameters Type Name Description String url Returns Type Description String | Improve this Doc View Source GetRemoteXml() Downloads the service description from WMS service Declaration public XmlDocument GetRemoteXml() Returns Type Description XmlDocument XmlDocument from CapabilitiesUrl . Exceptions Type Condition ApplicationException Thrown if the result is not interpretable. | Improve this Doc View Source ParseCapabilities() Parses a servicedescription and stores the data in the ServiceDescription property Declaration public void ParseCapabilities() | Improve this Doc View Source ParseVersion() Just parse the version number and add to the version property Declaration public void ParseVersion() | Improve this Doc View Source ValidateXml() Declaration public void ValidateXml() Exceptions Type Condition ApplicationException Implements IClient"
  },
  "api/SharpMap.Web.Wms.Client.WmsLayerStyle.html": {
    "href": "api/SharpMap.Web.Wms.Client.WmsLayerStyle.html",
    "title": "Struct Client.WmsLayerStyle | SharpMap",
    "keywords": "Struct Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsLayerStyle Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description String | Improve this Doc View Source LegendUrl Legend Declaration public Client.WmsStyleLegend LegendUrl Field Value Type Description Client.WmsStyleLegend | Improve this Doc View Source Name Name Declaration public string Name Field Value Type Description String | Improve this Doc View Source StyleSheetUrl Style Sheet Url Declaration public Client.WmsOnlineResource StyleSheetUrl Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Title Title Declaration public string Title Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Client.WmsOnlineResource.html": {
    "href": "api/SharpMap.Web.Wms.Client.WmsOnlineResource.html",
    "title": "Struct Client.WmsOnlineResource | SharpMap",
    "keywords": "Struct Client.WmsOnlineResource Structure for storing info on an Online Resource Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsOnlineResource Fields | Improve this Doc View Source OnlineResource URI of online resource Declaration public string OnlineResource Field Value Type Description String | Improve this Doc View Source Type Type of online resource (Ex. request method 'Get' or 'Post') Declaration public string Type Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Client.WmsServerLayer.html": {
    "href": "api/SharpMap.Web.Wms.Client.WmsServerLayer.html",
    "title": "Struct Client.WmsServerLayer | SharpMap",
    "keywords": "Struct Client.WmsServerLayer Structure for holding information about a WMS Layer Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsServerLayer Fields | Improve this Doc View Source Abstract Abstract Declaration public string Abstract Field Value Type Description String | Improve this Doc View Source ChildLayers Collection of child layers Declaration public Client.WmsServerLayer[] ChildLayers Field Value Type Description Client.WmsServerLayer [] | Improve this Doc View Source CRS Coordinate Reference Systems supported by layer Declaration public string[] CRS Field Value Type Description String [] | Improve this Doc View Source Keywords Keywords Declaration public string[] Keywords Field Value Type Description String [] | Improve this Doc View Source LatLonBoundingBox Latitudal/longitudal extent of this layer Declaration public Envelope LatLonBoundingBox Field Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source Name Unique name of this layer used for requesting layer Declaration public string Name Field Value Type Description String | Improve this Doc View Source Queryable Specifies whether this layer is queryable using GetFeatureInfo requests Declaration public bool Queryable Field Value Type Description Boolean | Improve this Doc View Source SRIDBoundingBoxes Extent of this layer in spatial reference system Declaration public List<SpatialReferencedBoundingBox> SRIDBoundingBoxes Field Value Type Description List < SpatialReferencedBoundingBox > | Improve this Doc View Source Style List of styles supported by layer Declaration public Client.WmsLayerStyle[] Style Field Value Type Description Client.WmsLayerStyle [] | Improve this Doc View Source Title Layer title Declaration public string Title Field Value Type Description String"
  },
  "api/SharpMap.Web.Wms.Client.WmsStyleLegend.html": {
    "href": "api/SharpMap.Web.Wms.Client.WmsStyleLegend.html",
    "title": "Struct Client.WmsStyleLegend | SharpMap",
    "keywords": "Struct Client.WmsStyleLegend Structure for storing WMS Legend information Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public struct WmsStyleLegend Fields | Improve this Doc View Source OnlineResource Online resource for legend style Declaration public Client.WmsOnlineResource OnlineResource Field Value Type Description Client.WmsOnlineResource | Improve this Doc View Source Size Size of legend Declaration public Size Size Field Value Type Description Size"
  },
  "api/SharpMap.Web.Wms.html": {
    "href": "api/SharpMap.Web.Wms.html",
    "title": "Namespace SharpMap.Web.Wms | SharpMap",
    "keywords": "Namespace SharpMap.Web.Wms Classes Capabilities Class for generating the WmsCapabilities Xml Client Class for requesting and parsing a WMS servers capabilities SpatialReferencedBoundingBox Spatial referenced boundingbox Structs Capabilities.WmsContactInformation Stores contact metadata about WMS service Capabilities.WmsContactInformation.ContactAddress Information about a contact address for the service. Capabilities.WmsContactInformation.ContactPerson Information about a contact person for the service. Capabilities.WmsServiceDescription The Wms Service Description stores metadata parameters for a WMS service Client.WmsLayerStyle Structure for storing information about a WMS Layer Style Client.WmsOnlineResource Structure for storing info on an Online Resource Client.WmsServerLayer Structure for holding information about a WMS Layer Client.WmsStyleLegend Structure for storing WMS Legend information"
  },
  "api/SharpMap.Web.Wms.SpatialReferencedBoundingBox.html": {
    "href": "api/SharpMap.Web.Wms.SpatialReferencedBoundingBox.html",
    "title": "Class SpatialReferencedBoundingBox | SharpMap",
    "keywords": "Class SpatialReferencedBoundingBox Spatial referenced boundingbox Inheritance Object GeoAPI.Geometries.Envelope SpatialReferencedBoundingBox Implements GeoAPI.Geometries.IEnvelope ICloneable IComparable IComparable < GeoAPI.Geometries.IEnvelope > IComparable < GeoAPI.Geometries.Envelope > GeoAPI.Geometries.IIntersectable < GeoAPI.Geometries.Envelope > GeoAPI.Geometries.IExpandable < GeoAPI.Geometries.Envelope > Inherited Members GeoAPI.Geometries.Envelope.Intersects(GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Intersects(GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Init() GeoAPI.Geometries.Envelope.Init(System.Double, System.Double, System.Double, System.Double) GeoAPI.Geometries.Envelope.Init(GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Init(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Init(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.SetToNull() GeoAPI.Geometries.Envelope.ExpandBy(System.Double) GeoAPI.Geometries.Envelope.ExpandBy(System.Double, System.Double) GeoAPI.Geometries.Envelope.ExpandToInclude(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.ExpandToInclude(System.Double, System.Double) GeoAPI.Geometries.Envelope.ExpandToInclude(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.ExpandedBy(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Translate(System.Double, System.Double) GeoAPI.Geometries.Envelope.Intersection(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Intersects(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Overlaps(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Overlaps(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Overlaps(System.Double, System.Double) GeoAPI.Geometries.Envelope.Intersects(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Intersects(System.Double, System.Double) GeoAPI.Geometries.Envelope.Intersects(GeoAPI.Geometries.Coordinate, GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Contains(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Contains(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Contains(System.Double, System.Double) GeoAPI.Geometries.Envelope.Covers(System.Double, System.Double) GeoAPI.Geometries.Envelope.Covers(GeoAPI.Geometries.Coordinate) GeoAPI.Geometries.Envelope.Covers(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Distance(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.Equals(System.Object) GeoAPI.Geometries.Envelope.Equals(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.CompareTo(System.Object) GeoAPI.Geometries.Envelope.CompareTo(GeoAPI.Geometries.Envelope) GeoAPI.Geometries.Envelope.GetHashCode() GeoAPI.Geometries.Envelope.ToString() GeoAPI.Geometries.Envelope.System.ICloneable.Clone() GeoAPI.Geometries.Envelope.Copy() GeoAPI.Geometries.Envelope.Clone() GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Union(GeoAPI.Geometries.IPoint) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Union(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Union(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.SetCentre(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.SetCentre(GeoAPI.Geometries.IPoint) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.SetCentre(System.Double, System.Double) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.SetCentre(GeoAPI.Geometries.IPoint, System.Double, System.Double) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.SetCentre(GeoAPI.Geometries.ICoordinate, System.Double, System.Double) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Zoom(System.Double) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Init() GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Init(GeoAPI.Geometries.ICoordinate, GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Init(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Init(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.ExpandToInclude(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.ExpandToInclude(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Intersection(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Intersects(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Overlaps(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Overlaps(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Intersects(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Contains(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Contains(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Covers(GeoAPI.Geometries.ICoordinate) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Covers(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Distance(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.System.IComparable<GeoAPI.Geometries.IEnvelope>.CompareTo(GeoAPI.Geometries.IEnvelope) GeoAPI.Geometries.Envelope.Parse(System.String) GeoAPI.Geometries.Envelope.IsNull GeoAPI.Geometries.Envelope.Width GeoAPI.Geometries.Envelope.Height GeoAPI.Geometries.Envelope.MinX GeoAPI.Geometries.Envelope.MaxX GeoAPI.Geometries.Envelope.MinY GeoAPI.Geometries.Envelope.MaxY GeoAPI.Geometries.Envelope.Area GeoAPI.Geometries.Envelope.MinExtent GeoAPI.Geometries.Envelope.MaxExtent GeoAPI.Geometries.Envelope.Centre GeoAPI.Geometries.Envelope.GeoAPI.Geometries.IEnvelope.Centre Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms Assembly : SharpMap.dll Syntax public class SpatialReferencedBoundingBox : Envelope, IEnvelope, ICloneable, IComparable, IComparable<IEnvelope>, IComparable<Envelope>, IIntersectable<Envelope>, IExpandable<Envelope> Remarks The spatial referenced boundingbox is used to communicate boundingboxes of WMS layers together with their spatial reference system in which they are specified Constructors | Improve this Doc View Source SpatialReferencedBoundingBox(Envelope, Int32) Initializes a new SpatialReferencedBoundingBox which stores a boundingbox together with the SRID Declaration public SpatialReferencedBoundingBox(Envelope boundingBox, int srid) Parameters Type Name Description GeoAPI.Geometries.Envelope boundingBox BoundingBox Int32 srid Spatial Reference ID Remarks This class is used to communicate all the boundingboxes of a WMS server between client.cs and wmslayer.cs | Improve this Doc View Source SpatialReferencedBoundingBox(Double, Double, Double, Double, Int32) Initializes a new SpatialReferencedBoundingBox which stores a boundingbox together with the SRID Declaration public SpatialReferencedBoundingBox(double minX, double minY, double maxX, double maxY, int srid) Parameters Type Name Description Double minX The minimum x-ordinate value Double minY The minimum y-ordinate value Double maxX The maximum x-ordinate value Double maxY The maximum y-ordinate value Int32 srid Spatial Reference ID Remarks This class is used to communicate all the boundingboxes of a WMS server between client.cs and wmslayer.cs Properties | Improve this Doc View Source SRID The spatial reference ID (CRS) Declaration public int SRID { get; set; } Property Value Type Description Int32 Implements GeoAPI.Geometries.IEnvelope System.ICloneable System.IComparable System.IComparable<T> System.IComparable<T> GeoAPI.Geometries.IIntersectable<T> GeoAPI.Geometries.IExpandable<T> Extension Methods GeoAPIEx.Min(Envelope) GeoAPIEx.Max(Envelope) GeoAPIEx.LongestAxis(Envelope) GeoAPIEx.BottomLeft(Envelope) GeoAPIEx.BottomRight(Envelope) GeoAPIEx.TopLeft(Envelope) GeoAPIEx.TopRight(Envelope) GeoAPIEx.Bottom(Envelope) GeoAPIEx.Top(Envelope) GeoAPIEx.Left(Envelope) GeoAPIEx.Right(Envelope) GeoAPIEx.Grow(Envelope, Double) GeoAPIEx.Grow(Envelope, Double, Double)"
  },
  "api/SharpMap.Web.Wms.Tiling.html": {
    "href": "api/SharpMap.Web.Wms.Tiling.html",
    "title": "Namespace SharpMap.Web.Wms.Tiling | SharpMap",
    "keywords": "Namespace SharpMap.Web.Wms.Tiling Classes TileCacheFileStorage Very simple implementation of ITileCache to demonstrate its functionality. It dumps all tiles as png's in a single directory. TileSet Class for handling a set of tiles Interfaces ITileCache Basic interface for a ITileCache"
  },
  "api/SharpMap.Web.Wms.Tiling.ITileCache.html": {
    "href": "api/SharpMap.Web.Wms.Tiling.ITileCache.html",
    "title": "Interface ITileCache | SharpMap",
    "keywords": "Interface ITileCache Basic interface for a ITileCache Namespace : SharpMap.Web.Wms.Tiling Assembly : SharpMap.dll Syntax public interface ITileCache Methods | Improve this Doc View Source AddTile(Envelope, Bitmap) Method to add a tile to the cache. Declaration void AddTile(Envelope box, Bitmap tile) Parameters Type Name Description GeoAPI.Geometries.Envelope box The bounding box of the area covered by the tile . Bitmap tile The tile image | Improve this Doc View Source ContainsTile(Envelope) Function to evaluate if the cache contains a tile that covers the provided box . Declaration bool ContainsTile(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box The area that is to be covered by the tile Returns Type Description Boolean true if such a tile image is in the cache. | Improve this Doc View Source GetTile(Envelope) Function to retrieve a tile from the cache that covers the provided box . Declaration Bitmap GetTile(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box The area that is to be covered by the tile Returns Type Description Bitmap"
  },
  "api/SharpMap.Web.Wms.Tiling.TileCacheFileStorage.html": {
    "href": "api/SharpMap.Web.Wms.Tiling.TileCacheFileStorage.html",
    "title": "Class TileCacheFileStorage | SharpMap",
    "keywords": "Class TileCacheFileStorage Very simple implementation of ITileCache to demonstrate its functionality. It dumps all tiles as png's in a single directory. Inheritance Object TileCacheFileStorage Implements ITileCache Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SharpMap.Web.Wms.Tiling Assembly : SharpMap.dll Syntax public class TileCacheFileStorage : ITileCache Constructors | Improve this Doc View Source TileCacheFileStorage(String) This constructor creates the storage directory if it does not exist. Declaration public TileCacheFileStorage(string directory) Parameters Type Name Description String directory Directory where the tiles will be stored Methods | Improve this Doc View Source AddTile(Envelope, Bitmap) Method to add a tile to the cache. Declaration public void AddTile(Envelope box, Bitmap tile) Parameters Type Name Description GeoAPI.Geometries.Envelope box The bounding box of the area covered by the tile . Bitmap tile The tile image | Improve this Doc View Source ContainsTile(Envelope) Function to evaluate if the cache contains a tile that covers the provided box . Declaration public bool ContainsTile(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box The area that is to be covered by the tile Returns Type Description Boolean true if such a tile image is in the cache. | Improve this Doc View Source GenerateDirectoryPath(String, String) Helper for convenience. Generates a directory path the Application Data directory which could be used to store tiles. Declaration public static string GenerateDirectoryPath(string layerName, string tileSetName) Parameters Type Name Description String layerName Name of the SharpMap layer String tileSetName Name of the TileSet Returns Type Description String | Improve this Doc View Source GetTile(Envelope) Function to retrieve a tile from the cache that covers the provided box . Declaration public Bitmap GetTile(Envelope box) Parameters Type Name Description GeoAPI.Geometries.Envelope box The area that is to be covered by the tile Returns Type Description Bitmap Implements ITileCache"
  },
  "api/SharpMap.Web.Wms.Tiling.TileSet.html": {
    "href": "api/SharpMap.Web.Wms.Tiling.TileSet.html",
    "title": "Class TileSet | SharpMap",
    "keywords": "Class TileSet Class for handling a set of tiles Inheritance Object TileSet Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : SharpMap.Web.Wms.Tiling Assembly : SharpMap.dll Syntax public class TileSet Properties | Improve this Doc View Source BoundingBox Gets or sets a value indicating the extent of the tile set Declaration public Envelope BoundingBox { get; set; } Property Value Type Description GeoAPI.Geometries.Envelope | Improve this Doc View Source Format Gets or sets a value indicating the tile image format in this tile set. Declaration public string Format { get; set; } Property Value Type Description String | Improve this Doc View Source Height Gets or sets a value indicating the height (in pixel) of each tile. Declaration public int Height { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Layers Gets or sets a value indicating the layers contained in this tile set. Declaration public List<string> Layers { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Name Gets or sets a value indicating the name of the tile set Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Resolutions Gets or sets a value indicating the resolutions covered by this tile set. Declaration public List<double> Resolutions { get; set; } Property Value Type Description List < Double > | Improve this Doc View Source Srs Gets or sets a string describing the spatial reference system of the tile set Declaration public string Srs { get; set; } Property Value Type Description String | Improve this Doc View Source Styles Gets or sets a value indicating the styles covered in this tile set. Declaration public List<string> Styles { get; set; } Property Value Type Description List < String > | Improve this Doc View Source TileCache Gets or sets the local tile cache. Use a local tile cache if you also want to store the tiles on the local machine. Declaration public ITileCache TileCache { get; set; } Property Value Type Description ITileCache | Improve this Doc View Source Width Gets or sets a value indicating the width (in pixel) of each tile. Declaration public int Width { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source ParseVendorSpecificCapabilitiesNode(XmlNode) Parses the TileSets from the VendorSpecificCapabilities node of the WMS Capabilities and adds them to the TileSets member Declaration public static SortedList<string, TileSet> ParseVendorSpecificCapabilitiesNode(XmlNode xnlVendorSpecificCapabilities) Parameters Type Name Description XmlNode xnlVendorSpecificCapabilities The VendorSpecificCapabilities node of the Capabilities Returns Type Description SortedList < String , TileSet > A sorted list of TileSet s | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Verify() Checks if the TileSet is initialized and throws an exception if not Declaration public void Verify()"
  },
  "index.html": {
    "href": "index.html",
    "title": "SharpMap | SharpMap",
    "keywords": "SharpMap A .NET GIS solution to easily render beautiful maps."
  }
}